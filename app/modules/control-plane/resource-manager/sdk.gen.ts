// This file is auto-generated by @hey-api/openapi-ts
import { client as _heyApiClient } from './client.gen'
import type {
  CreateResourcemanagerDatumapisComV1AlphaProjectData,
  CreateResourcemanagerDatumapisComV1AlphaProjectResponse,
  DeleteResourcemanagerDatumapisComV1AlphaCollectionProjectData,
  DeleteResourcemanagerDatumapisComV1AlphaCollectionProjectResponse,
  DeleteResourcemanagerDatumapisComV1AlphaProjectData,
  DeleteResourcemanagerDatumapisComV1AlphaProjectResponse,
  ListResourcemanagerDatumapisComV1AlphaProjectData,
  ListResourcemanagerDatumapisComV1AlphaProjectResponse,
  PatchResourcemanagerDatumapisComV1AlphaProjectData,
  PatchResourcemanagerDatumapisComV1AlphaProjectResponse,
  PatchResourcemanagerDatumapisComV1AlphaProjectStatusData,
  PatchResourcemanagerDatumapisComV1AlphaProjectStatusResponse,
  ReadResourcemanagerDatumapisComV1AlphaProjectData,
  ReadResourcemanagerDatumapisComV1AlphaProjectResponse,
  ReadResourcemanagerDatumapisComV1AlphaProjectStatusData,
  ReadResourcemanagerDatumapisComV1AlphaProjectStatusResponse,
  ReplaceResourcemanagerDatumapisComV1AlphaProjectData,
  ReplaceResourcemanagerDatumapisComV1AlphaProjectResponse,
  ReplaceResourcemanagerDatumapisComV1AlphaProjectStatusData,
  ReplaceResourcemanagerDatumapisComV1AlphaProjectStatusResponse,
} from './types.gen'
import type { Client, Options as ClientOptions, TDataShape } from '@hey-api/client-axios'

export type Options<
  TData extends TDataShape = TDataShape,
  ThrowOnError extends boolean = boolean,
> = ClientOptions<TData, ThrowOnError> & {
  /**
   * You can provide a client instance returned by `createClient()` instead of
   * individual options. This might be also useful if you want to implement a
   * custom client.
   */
  client?: Client
  /**
   * You can pass arbitrary values through the `meta` object. This can be
   * used to access values that aren't defined as part of the SDK function.
   */
  meta?: Record<string, unknown>
}

/**
 * delete collection of Project
 */
export const deleteResourcemanagerDatumapisComV1AlphaCollectionProject = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<
    DeleteResourcemanagerDatumapisComV1AlphaCollectionProjectData,
    ThrowOnError
  >,
) => {
  return (options?.client ?? _heyApiClient).delete<
    DeleteResourcemanagerDatumapisComV1AlphaCollectionProjectResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/resourcemanager.datumapis.com/v1alpha/projects',
    ...options,
  })
}

/**
 * list objects of kind Project
 */
export const listResourcemanagerDatumapisComV1AlphaProject = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<ListResourcemanagerDatumapisComV1AlphaProjectData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    ListResourcemanagerDatumapisComV1AlphaProjectResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/resourcemanager.datumapis.com/v1alpha/projects',
    ...options,
  })
}

/**
 * create a Project
 */
export const createResourcemanagerDatumapisComV1AlphaProject = <
  ThrowOnError extends boolean = false,
>(
  options: Options<CreateResourcemanagerDatumapisComV1AlphaProjectData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    CreateResourcemanagerDatumapisComV1AlphaProjectResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/resourcemanager.datumapis.com/v1alpha/projects',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  })
}

/**
 * delete a Project
 */
export const deleteResourcemanagerDatumapisComV1AlphaProject = <
  ThrowOnError extends boolean = false,
>(
  options: Options<DeleteResourcemanagerDatumapisComV1AlphaProjectData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).delete<
    DeleteResourcemanagerDatumapisComV1AlphaProjectResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/resourcemanager.datumapis.com/v1alpha/projects/{name}',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  })
}

/**
 * read the specified Project
 */
export const readResourcemanagerDatumapisComV1AlphaProject = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ReadResourcemanagerDatumapisComV1AlphaProjectData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    ReadResourcemanagerDatumapisComV1AlphaProjectResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/resourcemanager.datumapis.com/v1alpha/projects/{name}',
    ...options,
  })
}

/**
 * partially update the specified Project
 */
export const patchResourcemanagerDatumapisComV1AlphaProject = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PatchResourcemanagerDatumapisComV1AlphaProjectData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).patch<
    PatchResourcemanagerDatumapisComV1AlphaProjectResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/resourcemanager.datumapis.com/v1alpha/projects/{name}',
    ...options,
    headers: {
      'Content-Type': 'application/apply-patch+yaml',
      ...options?.headers,
    },
  })
}

/**
 * replace the specified Project
 */
export const replaceResourcemanagerDatumapisComV1AlphaProject = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ReplaceResourcemanagerDatumapisComV1AlphaProjectData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).put<
    ReplaceResourcemanagerDatumapisComV1AlphaProjectResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/resourcemanager.datumapis.com/v1alpha/projects/{name}',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  })
}

/**
 * read status of the specified Project
 */
export const readResourcemanagerDatumapisComV1AlphaProjectStatus = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ReadResourcemanagerDatumapisComV1AlphaProjectStatusData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    ReadResourcemanagerDatumapisComV1AlphaProjectStatusResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/resourcemanager.datumapis.com/v1alpha/projects/{name}/status',
    ...options,
  })
}

/**
 * partially update status of the specified Project
 */
export const patchResourcemanagerDatumapisComV1AlphaProjectStatus = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    PatchResourcemanagerDatumapisComV1AlphaProjectStatusData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).patch<
    PatchResourcemanagerDatumapisComV1AlphaProjectStatusResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/resourcemanager.datumapis.com/v1alpha/projects/{name}/status',
    ...options,
    headers: {
      'Content-Type': 'application/apply-patch+yaml',
      ...options?.headers,
    },
  })
}

/**
 * replace status of the specified Project
 */
export const replaceResourcemanagerDatumapisComV1AlphaProjectStatus = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    ReplaceResourcemanagerDatumapisComV1AlphaProjectStatusData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).put<
    ReplaceResourcemanagerDatumapisComV1AlphaProjectStatusResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/resourcemanager.datumapis.com/v1alpha/projects/{name}/status',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  })
}
