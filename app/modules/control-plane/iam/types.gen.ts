// This file is auto-generated by @hey-api/openapi-ts

/**
 * Group is the Schema for the groups API
 */
export type ComMiloapisIamV1Alpha1Group = {
  /**
   * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
   */
  metadata?: IoK8sApimachineryPkgApisMetaV1ObjectMeta;
  /**
   * GroupStatus defines the observed state of Group
   */
  status?: {
    /**
     * Conditions represent the latest available observations of an object's current state.
     */
    conditions?: Array<{
      /**
       * lastTransitionTime is the last time the condition transitioned from one status to another.
       * This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
       */
      lastTransitionTime: string;
      /**
       * message is a human readable message indicating details about the transition.
       * This may be an empty string.
       */
      message: string;
      /**
       * observedGeneration represents the .metadata.generation that the condition was set based upon.
       * For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
       * with respect to the current state of the instance.
       */
      observedGeneration?: number;
      /**
       * reason contains a programmatic identifier indicating the reason for the condition's last transition.
       * Producers of specific condition types may define expected values and meanings for this field,
       * and whether the values are considered a guaranteed API.
       * The value should be a CamelCase string.
       * This field may not be empty.
       */
      reason: string;
      /**
       * status of the condition, one of True, False, Unknown.
       */
      status: 'True' | 'False' | 'Unknown';
      /**
       * type of condition in CamelCase or in foo.example.com/CamelCase.
       */
      type: string;
    }>;
  };
};

/**
 * GroupList is a list of Group
 */
export type ComMiloapisIamV1Alpha1GroupList = {
  /**
   * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * List of groups. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
   */
  items: Array<ComMiloapisIamV1Alpha1Group>;
  /**
   * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
   */
  metadata?: IoK8sApimachineryPkgApisMetaV1ListMeta;
};

/**
 * GroupMembership is the Schema for the groupmemberships API
 */
export type ComMiloapisIamV1Alpha1GroupMembership = {
  /**
   * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
   */
  metadata?: IoK8sApimachineryPkgApisMetaV1ObjectMeta;
  /**
   * GroupMembershipSpec defines the desired state of GroupMembership
   */
  spec?: {
    /**
     * GroupRef is a reference to the Group.
     * Group is a namespaced resource.
     */
    groupRef: {
      /**
       * Name is the name of the Group being referenced.
       */
      name: string;
      /**
       * Namespace of the referenced Group.
       */
      namespace: string;
    };
    /**
     * UserRef is a reference to the User that is a member of the Group.
     * User is a cluster-scoped resource.
     */
    userRef: {
      /**
       * Name is the name of the User being referenced.
       */
      name: string;
    };
  };
  /**
   * GroupMembershipStatus defines the observed state of GroupMembership
   */
  status?: {
    /**
     * Conditions represent the latest available observations of an object's current state.
     */
    conditions?: Array<{
      /**
       * lastTransitionTime is the last time the condition transitioned from one status to another.
       * This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
       */
      lastTransitionTime: string;
      /**
       * message is a human readable message indicating details about the transition.
       * This may be an empty string.
       */
      message: string;
      /**
       * observedGeneration represents the .metadata.generation that the condition was set based upon.
       * For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
       * with respect to the current state of the instance.
       */
      observedGeneration?: number;
      /**
       * reason contains a programmatic identifier indicating the reason for the condition's last transition.
       * Producers of specific condition types may define expected values and meanings for this field,
       * and whether the values are considered a guaranteed API.
       * The value should be a CamelCase string.
       * This field may not be empty.
       */
      reason: string;
      /**
       * status of the condition, one of True, False, Unknown.
       */
      status: 'True' | 'False' | 'Unknown';
      /**
       * type of condition in CamelCase or in foo.example.com/CamelCase.
       */
      type: string;
    }>;
  };
};

/**
 * GroupMembershipList is a list of GroupMembership
 */
export type ComMiloapisIamV1Alpha1GroupMembershipList = {
  /**
   * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * List of groupmemberships. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
   */
  items: Array<ComMiloapisIamV1Alpha1GroupMembership>;
  /**
   * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
   */
  metadata?: IoK8sApimachineryPkgApisMetaV1ListMeta;
};

/**
 * MachineAccount is the Schema for the machine accounts API
 */
export type ComMiloapisIamV1Alpha1MachineAccount = {
  /**
   * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
   */
  metadata?: IoK8sApimachineryPkgApisMetaV1ObjectMeta;
  /**
   * MachineAccountSpec defines the desired state of MachineAccount
   */
  spec?: {
    /**
     * The state of the machine account. This state can be safely changed as needed.
     * States:
     * - Active: The machine account can be used to authenticate.
     * - Inactive: The machine account is prohibited to be used to authenticate, and revokes all existing sessions.
     */
    state?: 'Active' | 'Inactive';
  };
  /**
   * MachineAccountStatus defines the observed state of MachineAccount
   */
  status?: {
    /**
     * Conditions provide conditions that represent the current status of the MachineAccount.
     */
    conditions?: Array<{
      /**
       * lastTransitionTime is the last time the condition transitioned from one status to another.
       * This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
       */
      lastTransitionTime: string;
      /**
       * message is a human readable message indicating details about the transition.
       * This may be an empty string.
       */
      message: string;
      /**
       * observedGeneration represents the .metadata.generation that the condition was set based upon.
       * For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
       * with respect to the current state of the instance.
       */
      observedGeneration?: number;
      /**
       * reason contains a programmatic identifier indicating the reason for the condition's last transition.
       * Producers of specific condition types may define expected values and meanings for this field,
       * and whether the values are considered a guaranteed API.
       * The value should be a CamelCase string.
       * This field may not be empty.
       */
      reason: string;
      /**
       * status of the condition, one of True, False, Unknown.
       */
      status: 'True' | 'False' | 'Unknown';
      /**
       * type of condition in CamelCase or in foo.example.com/CamelCase.
       */
      type: string;
    }>;
    /**
     * The computed email of the machine account following the pattern:
     * {metadata.name}@{metadata.namespace}.{project.metadata.name}.{global-suffix}
     */
    email?: string;
    /**
     * State represents the current activation state of the machine account from the auth provider.
     * This field tracks the state from the previous generation and is updated when state changes
     * are successfully propagated to the auth provider. It helps optimize performance by only
     * updating the auth provider when a state change is detected.
     */
    state?: 'Active' | 'Inactive';
  };
};

/**
 * MachineAccountKey is the Schema for the machineaccountkeys API
 */
export type ComMiloapisIamV1Alpha1MachineAccountKey = {
  /**
   * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
   */
  metadata?: IoK8sApimachineryPkgApisMetaV1ObjectMeta;
  /**
   * MachineAccountKeySpec defines the desired state of MachineAccountKey
   */
  spec?: {
    /**
     * ExpirationDate is the date and time when the MachineAccountKey will expire.
     * If not specified, the MachineAccountKey will never expire.
     */
    expirationDate?: string;
    /**
     * MachineAccountName is the name of the MachineAccount that owns this key.
     */
    machineAccountName: string;
    /**
     * PublicKey is the public key of the MachineAccountKey.
     * If not specified, the MachineAccountKey will be created with an auto-generated public key.
     */
    publicKey?: string;
  };
  /**
   * MachineAccountKeyStatus defines the observed state of MachineAccountKey
   */
  status?: {
    /**
     * AuthProviderKeyID is the unique identifier for the key in the auth provider.
     * This field is populated by the controller after the key is created in the auth provider.
     * For example, when using Zitadel, a typical value might be: "326102453042806786"
     */
    authProviderKeyId?: string;
    /**
     * Conditions provide conditions that represent the current status of the MachineAccountKey.
     */
    conditions?: Array<{
      /**
       * lastTransitionTime is the last time the condition transitioned from one status to another.
       * This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
       */
      lastTransitionTime: string;
      /**
       * message is a human readable message indicating details about the transition.
       * This may be an empty string.
       */
      message: string;
      /**
       * observedGeneration represents the .metadata.generation that the condition was set based upon.
       * For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
       * with respect to the current state of the instance.
       */
      observedGeneration?: number;
      /**
       * reason contains a programmatic identifier indicating the reason for the condition's last transition.
       * Producers of specific condition types may define expected values and meanings for this field,
       * and whether the values are considered a guaranteed API.
       * The value should be a CamelCase string.
       * This field may not be empty.
       */
      reason: string;
      /**
       * status of the condition, one of True, False, Unknown.
       */
      status: 'True' | 'False' | 'Unknown';
      /**
       * type of condition in CamelCase or in foo.example.com/CamelCase.
       */
      type: string;
    }>;
  };
};

/**
 * MachineAccountKeyList is a list of MachineAccountKey
 */
export type ComMiloapisIamV1Alpha1MachineAccountKeyList = {
  /**
   * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * List of machineaccountkeys. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
   */
  items: Array<ComMiloapisIamV1Alpha1MachineAccountKey>;
  /**
   * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
   */
  metadata?: IoK8sApimachineryPkgApisMetaV1ListMeta;
};

/**
 * MachineAccountList is a list of MachineAccount
 */
export type ComMiloapisIamV1Alpha1MachineAccountList = {
  /**
   * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * List of machineaccounts. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
   */
  items: Array<ComMiloapisIamV1Alpha1MachineAccount>;
  /**
   * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
   */
  metadata?: IoK8sApimachineryPkgApisMetaV1ListMeta;
};

/**
 * PolicyBinding is the Schema for the policybindings API
 */
export type ComMiloapisIamV1Alpha1PolicyBinding = {
  /**
   * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
   */
  metadata?: IoK8sApimachineryPkgApisMetaV1ObjectMeta;
  /**
   * PolicyBindingSpec defines the desired state of PolicyBinding
   */
  spec?: {
    /**
     * ResourceSelector defines which resources the subjects in the policy binding
     * should have the role applied to. Options within this struct are mutually
     * exclusive.
     */
    resourceSelector: {
      /**
       * ResourceKind specifies that the policy binding should apply to all resources of a specific kind.
       * Mutually exclusive with resourceRef.
       */
      resourceKind?: {
        /**
         * APIGroup is the group for the resource type being referenced. If APIGroup
         * is not specified, the specified Kind must be in the core API group.
         */
        apiGroup?: string;
        /**
         * Kind is the type of resource being referenced.
         */
        kind: string;
      };
      /**
       * ResourceRef provides a reference to a specific resource instance.
       * Mutually exclusive with resourceKind.
       */
      resourceRef?: {
        /**
         * APIGroup is the group for the resource being referenced.
         * If APIGroup is not specified, the specified Kind must be in the core API group.
         * For any other third-party types, APIGroup is required.
         */
        apiGroup?: string;
        /**
         * Kind is the type of resource being referenced.
         */
        kind: string;
        /**
         * Name is the name of resource being referenced.
         */
        name: string;
        /**
         * Namespace is the namespace of resource being referenced.
         * Required for namespace-scoped resources. Omitted for cluster-scoped resources.
         */
        namespace?: string;
        /**
         * UID is the unique identifier of the resource being referenced.
         */
        uid: string;
      };
    };
    /**
     * RoleRef is a reference to the Role that is being bound.
     * This can be a reference to a Role custom resource.
     */
    roleRef: {
      /**
       * Name is the name of resource being referenced
       */
      name: string;
      /**
       * Namespace of the referenced Role. If empty, it is assumed to be in the PolicyBinding's namespace.
       */
      namespace?: string;
    };
    /**
     * Subjects holds references to the objects the role applies to.
     */
    subjects: Array<{
      /**
       * Kind of object being referenced. Values defined in Kind constants.
       */
      kind: 'User' | 'Group';
      /**
       * Name of the object being referenced. A special group name of
       * "system:authenticated-users" can be used to refer to all authenticated
       * users.
       */
      name: string;
      /**
       * Namespace of the referenced object. If DNE, then for an SA it refers to the PolicyBinding resource's namespace.
       * For a User or Group, it is ignored.
       */
      namespace?: string;
      /**
       * UID of the referenced object. Optional for system groups (groups with names starting with "system:").
       */
      uid?: string;
    }>;
  };
  /**
   * PolicyBindingStatus defines the observed state of PolicyBinding
   */
  status?: {
    /**
     * Conditions provide conditions that represent the current status of the PolicyBinding.
     */
    conditions?: Array<{
      /**
       * lastTransitionTime is the last time the condition transitioned from one status to another.
       * This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
       */
      lastTransitionTime: string;
      /**
       * message is a human readable message indicating details about the transition.
       * This may be an empty string.
       */
      message: string;
      /**
       * observedGeneration represents the .metadata.generation that the condition was set based upon.
       * For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
       * with respect to the current state of the instance.
       */
      observedGeneration?: number;
      /**
       * reason contains a programmatic identifier indicating the reason for the condition's last transition.
       * Producers of specific condition types may define expected values and meanings for this field,
       * and whether the values are considered a guaranteed API.
       * The value should be a CamelCase string.
       * This field may not be empty.
       */
      reason: string;
      /**
       * status of the condition, one of True, False, Unknown.
       */
      status: 'True' | 'False' | 'Unknown';
      /**
       * type of condition in CamelCase or in foo.example.com/CamelCase.
       */
      type: string;
    }>;
    /**
     * ObservedGeneration is the most recent generation observed for this PolicyBinding by the controller.
     */
    observedGeneration?: number;
  };
};

/**
 * PolicyBindingList is a list of PolicyBinding
 */
export type ComMiloapisIamV1Alpha1PolicyBindingList = {
  /**
   * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * List of policybindings. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
   */
  items: Array<ComMiloapisIamV1Alpha1PolicyBinding>;
  /**
   * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
   */
  metadata?: IoK8sApimachineryPkgApisMetaV1ListMeta;
};

/**
 * ProtectedResource is the Schema for the protectedresources API
 */
export type ComMiloapisIamV1Alpha1ProtectedResource = {
  /**
   * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
   */
  metadata?: IoK8sApimachineryPkgApisMetaV1ObjectMeta;
  /**
   * ProtectedResourceSpec defines the desired state of ProtectedResource
   */
  spec?: {
    /**
     * The kind of the resource.
     * This will be in the format `Workload`.
     */
    kind: string;
    /**
     * A list of resources that are registered with the platform that may be a
     * parent to the resource. Permissions may be bound to a parent resource so
     * they can be inherited down the resource hierarchy.
     */
    parentResources?: Array<{
      /**
       * APIGroup is the group for the resource being referenced.
       * If APIGroup is not specified, the specified Kind must be in the core API group.
       * For any other third-party types, APIGroup is required.
       */
      apiGroup?: string;
      /**
       * Kind is the type of resource being referenced.
       */
      kind: string;
    }>;
    /**
     * A list of permissions that are associated with the resource.
     */
    permissions: Array<string>;
    /**
     * The plural form for the resource type, e.g. 'workloads'. Must follow
     * camelCase format.
     */
    plural: string;
    /**
     * ServiceRef references the service definition this protected resource belongs to.
     */
    serviceRef: {
      /**
       * Name is the resource name of the service definition.
       */
      name: string;
    };
    /**
     * The singular form for the resource type, e.g. 'workload'. Must follow
     * camelCase format.
     */
    singular: string;
  };
  /**
   * ProtectedResourceStatus defines the observed state of ProtectedResource
   */
  status?: {
    /**
     * Conditions provide conditions that represent the current status of the ProtectedResource.
     */
    conditions?: Array<{
      /**
       * lastTransitionTime is the last time the condition transitioned from one status to another.
       * This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
       */
      lastTransitionTime: string;
      /**
       * message is a human readable message indicating details about the transition.
       * This may be an empty string.
       */
      message: string;
      /**
       * observedGeneration represents the .metadata.generation that the condition was set based upon.
       * For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
       * with respect to the current state of the instance.
       */
      observedGeneration?: number;
      /**
       * reason contains a programmatic identifier indicating the reason for the condition's last transition.
       * Producers of specific condition types may define expected values and meanings for this field,
       * and whether the values are considered a guaranteed API.
       * The value should be a CamelCase string.
       * This field may not be empty.
       */
      reason: string;
      /**
       * status of the condition, one of True, False, Unknown.
       */
      status: 'True' | 'False' | 'Unknown';
      /**
       * type of condition in CamelCase or in foo.example.com/CamelCase.
       */
      type: string;
    }>;
    /**
     * ObservedGeneration is the most recent generation observed for this ProtectedResource. It corresponds to the
     * ProtectedResource's generation, which is updated on mutation by the API Server.
     */
    observedGeneration?: number;
  };
};

/**
 * ProtectedResourceList is a list of ProtectedResource
 */
export type ComMiloapisIamV1Alpha1ProtectedResourceList = {
  /**
   * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * List of protectedresources. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
   */
  items: Array<ComMiloapisIamV1Alpha1ProtectedResource>;
  /**
   * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
   */
  metadata?: IoK8sApimachineryPkgApisMetaV1ListMeta;
};

/**
 * Role is the Schema for the roles API
 */
export type ComMiloapisIamV1Alpha1Role = {
  /**
   * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
   */
  metadata?: IoK8sApimachineryPkgApisMetaV1ObjectMeta;
  /**
   * RoleSpec defines the desired state of Role
   */
  spec?: {
    /**
     * The names of the permissions this role grants when bound in an IAM policy.
     * All permissions must be in the format: `{service}.{resource}.{action}`
     * (e.g. compute.workloads.create).
     */
    includedPermissions?: Array<string>;
    /**
     * The list of roles from which this role inherits permissions.
     * Each entry must be a valid role resource name.
     */
    inheritedRoles?: Array<{
      /**
       * Name of the referenced Role.
       */
      name: string;
      /**
       * Namespace of the referenced Role.
       * If not specified, it defaults to the namespace of the resource containing this reference.
       */
      namespace?: string;
    }>;
    /**
     * Defines the launch stage of the IAM Role. Must be one of: Early Access,
     * Alpha, Beta, Stable, Deprecated.
     */
    launchStage: string;
  };
  /**
   * RoleStatus defines the observed state of Role
   */
  status?: {
    /**
     * Conditions provide conditions that represent the current status of the Role.
     */
    conditions?: Array<{
      /**
       * lastTransitionTime is the last time the condition transitioned from one status to another.
       * This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
       */
      lastTransitionTime: string;
      /**
       * message is a human readable message indicating details about the transition.
       * This may be an empty string.
       */
      message: string;
      /**
       * observedGeneration represents the .metadata.generation that the condition was set based upon.
       * For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
       * with respect to the current state of the instance.
       */
      observedGeneration?: number;
      /**
       * reason contains a programmatic identifier indicating the reason for the condition's last transition.
       * Producers of specific condition types may define expected values and meanings for this field,
       * and whether the values are considered a guaranteed API.
       * The value should be a CamelCase string.
       * This field may not be empty.
       */
      reason: string;
      /**
       * status of the condition, one of True, False, Unknown.
       */
      status: 'True' | 'False' | 'Unknown';
      /**
       * type of condition in CamelCase or in foo.example.com/CamelCase.
       */
      type: string;
    }>;
    /**
     * ObservedGeneration is the most recent generation observed by the controller.
     */
    observedGeneration?: number;
    /**
     * The resource name of the parent the role was created under.
     */
    parent?: string;
  };
};

/**
 * RoleList is a list of Role
 */
export type ComMiloapisIamV1Alpha1RoleList = {
  /**
   * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * List of roles. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
   */
  items: Array<ComMiloapisIamV1Alpha1Role>;
  /**
   * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
   */
  metadata?: IoK8sApimachineryPkgApisMetaV1ListMeta;
};

/**
 * User is the Schema for the users API
 */
export type ComMiloapisIamV1Alpha1User = {
  /**
   * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
   */
  metadata?: IoK8sApimachineryPkgApisMetaV1ObjectMeta;
  /**
   * UserSpec defines the desired state of User
   */
  spec?: {
    /**
     * The email of the user.
     */
    email: string;
    /**
     * The last name of the user.
     */
    familyName?: string;
    /**
     * The first name of the user.
     */
    givenName?: string;
  };
  /**
   * UserStatus defines the observed state of User
   */
  status?: {
    /**
     * Conditions provide conditions that represent the current status of the User.
     */
    conditions?: Array<{
      /**
       * lastTransitionTime is the last time the condition transitioned from one status to another.
       * This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
       */
      lastTransitionTime: string;
      /**
       * message is a human readable message indicating details about the transition.
       * This may be an empty string.
       */
      message: string;
      /**
       * observedGeneration represents the .metadata.generation that the condition was set based upon.
       * For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
       * with respect to the current state of the instance.
       */
      observedGeneration?: number;
      /**
       * reason contains a programmatic identifier indicating the reason for the condition's last transition.
       * Producers of specific condition types may define expected values and meanings for this field,
       * and whether the values are considered a guaranteed API.
       * The value should be a CamelCase string.
       * This field may not be empty.
       */
      reason: string;
      /**
       * status of the condition, one of True, False, Unknown.
       */
      status: 'True' | 'False' | 'Unknown';
      /**
       * type of condition in CamelCase or in foo.example.com/CamelCase.
       */
      type: string;
    }>;
    /**
     * State represents the current activation state of the user account from the
     * auth provider. This field is managed exclusively by the UserDeactivation CRD
     * and cannot be changed directly by the user. When a UserDeactivation resource
     * is created for the user, the user is deactivated in the auth provider; when
     * the UserDeactivation is deleted, the user is reactivated.
     * States:
     * - Active: The user can be used to authenticate.
     * - Inactive: The user is prohibited to be used to authenticate, and revokes all existing sessions.
     */
    state?: 'Active' | 'Inactive';
  };
};

/**
 * UserDeactivation is the Schema for the userdeactivations API
 */
export type ComMiloapisIamV1Alpha1UserDeactivation = {
  /**
   * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
   */
  metadata?: IoK8sApimachineryPkgApisMetaV1ObjectMeta;
  /**
   * UserDeactivationSpec defines the desired state of UserDeactivation
   */
  spec?: {
    /**
     * DeactivatedBy indicates who initiated the deactivation.
     */
    deactivatedBy: string;
    /**
     * Description provides detailed internal description for the deactivation.
     */
    description?: string;
    /**
     * Reason is the internal reason for deactivation.
     */
    reason: string;
    /**
     * UserRef is a reference to the User being deactivated.
     * User is a cluster-scoped resource.
     */
    userRef: {
      /**
       * Name is the name of the User being referenced.
       */
      name: string;
    };
  };
  /**
   * UserDeactivationStatus defines the observed state of UserDeactivation
   */
  status?: {
    /**
     * Conditions represent the latest available observations of an object's current state.
     */
    conditions?: Array<{
      /**
       * lastTransitionTime is the last time the condition transitioned from one status to another.
       * This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
       */
      lastTransitionTime: string;
      /**
       * message is a human readable message indicating details about the transition.
       * This may be an empty string.
       */
      message: string;
      /**
       * observedGeneration represents the .metadata.generation that the condition was set based upon.
       * For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
       * with respect to the current state of the instance.
       */
      observedGeneration?: number;
      /**
       * reason contains a programmatic identifier indicating the reason for the condition's last transition.
       * Producers of specific condition types may define expected values and meanings for this field,
       * and whether the values are considered a guaranteed API.
       * The value should be a CamelCase string.
       * This field may not be empty.
       */
      reason: string;
      /**
       * status of the condition, one of True, False, Unknown.
       */
      status: 'True' | 'False' | 'Unknown';
      /**
       * type of condition in CamelCase or in foo.example.com/CamelCase.
       */
      type: string;
    }>;
  };
};

/**
 * UserDeactivationList is a list of UserDeactivation
 */
export type ComMiloapisIamV1Alpha1UserDeactivationList = {
  /**
   * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * List of userdeactivations. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
   */
  items: Array<ComMiloapisIamV1Alpha1UserDeactivation>;
  /**
   * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
   */
  metadata?: IoK8sApimachineryPkgApisMetaV1ListMeta;
};

/**
 * UserInvitation is the Schema for the userinvitations API
 */
export type ComMiloapisIamV1Alpha1UserInvitation = {
  /**
   * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
   */
  metadata?: IoK8sApimachineryPkgApisMetaV1ObjectMeta;
  /**
   * UserInvitationSpec defines the desired state of UserInvitation
   */
  spec?: ComMiloapisIamV1Alpha1UserInvitationSpec;
  /**
   * UserInvitationStatus defines the observed state of UserInvitation
   */
  status?: ComMiloapisIamV1Alpha1UserInvitationStatus;
};

export type ComMiloapisIamV1Alpha1UserInvitationSpec = {
  /**
   * The email of the user being invited.
   */
  email: string;
  /**
   * ExpirationDate is the date and time when the UserInvitation will expire. If not specified, the UserInvitation will never expire.
   */
  expirationDate?: string;
  /**
   * The last name of the user being invited.
   */
  familyName?: string;
  /**
   * The first name of the user being invited.
   */
  givenName?: string;
  /**
   * InvitedBy is the user who invited the user. A mutation webhook will default this field to the user who made the request.
   */
  invitedBy?: {
    /**
     * Name is the name of the User being referenced.
     */
    name: string;
  };
  /**
   * OrganizationRef is a reference to the Organization that the user is invoted to.
   */
  organizationRef: {
    /**
     * Name is the name of resource being referenced
     */
    name: string;
  };
  /**
   * The roles that will be assigned to the user when they accept the invitation.
   */
  roles?: Array<{
    /**
     * Name is the name of resource being referenced
     */
    name: string;
    /**
     * Namespace of the referenced Role. If empty, it is assumed to be in the PolicyBinding's namespace.
     */
    namespace?: string;
  }>;
  /**
   * State is the state of the UserInvitation. In order to accept the invitation, the invited user must set the state to Accepted.
   */
  state: 'Pending' | 'Accepted' | 'Declined';
};

export type ComMiloapisIamV1Alpha1UserInvitationStatus = {
  /**
   * Conditions provide conditions that represent the current status of the UserInvitation.
   */
  conditions?: Array<{
    /**
     * lastTransitionTime is the last time the condition transitioned from one status to another.
     * This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
     */
    lastTransitionTime: string;
    /**
     * message is a human readable message indicating details about the transition.
     * This may be an empty string.
     */
    message: string;
    /**
     * observedGeneration represents the .metadata.generation that the condition was set based upon.
     * For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
     * with respect to the current state of the instance.
     */
    observedGeneration?: number;
    /**
     * reason contains a programmatic identifier indicating the reason for the condition's last transition.
     * Producers of specific condition types may define expected values and meanings for this field,
     * and whether the values are considered a guaranteed API.
     * The value should be a CamelCase string.
     * This field may not be empty.
     */
    reason: string;
    /**
     * status of the condition, one of True, False, Unknown.
     */
    status: 'True' | 'False' | 'Unknown';
    /**
     * type of condition in CamelCase or in foo.example.com/CamelCase.
     */
    type: string;
  }>;
};

/**
 * UserInvitationList is a list of UserInvitation
 */
export type ComMiloapisIamV1Alpha1UserInvitationList = {
  /**
   * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * List of userinvitations. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
   */
  items: Array<ComMiloapisIamV1Alpha1UserInvitation>;
  /**
   * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
   */
  metadata?: IoK8sApimachineryPkgApisMetaV1ListMeta;
};

/**
 * UserList is a list of User
 */
export type ComMiloapisIamV1Alpha1UserList = {
  /**
   * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * List of users. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
   */
  items: Array<ComMiloapisIamV1Alpha1User>;
  /**
   * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
   */
  metadata?: IoK8sApimachineryPkgApisMetaV1ListMeta;
};

/**
 * UserPreference is the Schema for the userpreferences API
 */
export type ComMiloapisIamV1Alpha1UserPreference = {
  /**
   * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
   */
  metadata?: IoK8sApimachineryPkgApisMetaV1ObjectMeta;
  /**
   * UserPreferenceSpec defines the desired state of UserPreference
   */
  spec?: {
    /**
     * The user's theme preference.
     */
    theme?: 'light' | 'dark' | 'system';
    /**
     * Reference to the user these preferences belong to.
     */
    userRef: {
      /**
       * Name is the name of the User being referenced.
       */
      name: string;
    };
  };
  /**
   * UserPreferenceStatus defines the observed state of UserPreference
   */
  status?: {
    /**
     * Conditions provide conditions that represent the current status of the UserPreference.
     */
    conditions?: Array<{
      /**
       * lastTransitionTime is the last time the condition transitioned from one status to another.
       * This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
       */
      lastTransitionTime: string;
      /**
       * message is a human readable message indicating details about the transition.
       * This may be an empty string.
       */
      message: string;
      /**
       * observedGeneration represents the .metadata.generation that the condition was set based upon.
       * For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
       * with respect to the current state of the instance.
       */
      observedGeneration?: number;
      /**
       * reason contains a programmatic identifier indicating the reason for the condition's last transition.
       * Producers of specific condition types may define expected values and meanings for this field,
       * and whether the values are considered a guaranteed API.
       * The value should be a CamelCase string.
       * This field may not be empty.
       */
      reason: string;
      /**
       * status of the condition, one of True, False, Unknown.
       */
      status: 'True' | 'False' | 'Unknown';
      /**
       * type of condition in CamelCase or in foo.example.com/CamelCase.
       */
      type: string;
    }>;
  };
};

/**
 * UserPreferenceList is a list of UserPreference
 */
export type ComMiloapisIamV1Alpha1UserPreferenceList = {
  /**
   * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * List of userpreferences. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
   */
  items: Array<ComMiloapisIamV1Alpha1UserPreference>;
  /**
   * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
   */
  metadata?: IoK8sApimachineryPkgApisMetaV1ListMeta;
};

/**
 * DeleteOptions may be provided when deleting an API object.
 */
export type IoK8sApimachineryPkgApisMetaV1DeleteOptions = {
  /**
   * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
   */
  dryRun?: Array<string>;
  /**
   * The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: number;
  /**
   * if set to true, it will trigger an unsafe deletion of the resource in case the normal deletion flow fails with a corrupt object error. A resource is considered corrupt if it can not be retrieved from the underlying storage successfully because of a) its data can not be transformed e.g. decryption failure, or b) it fails to decode into an object. NOTE: unsafe deletion ignores finalizer constraints, skips precondition checks, and removes the object from the storage. WARNING: This may potentially break the cluster if the workload associated with the resource being unsafe-deleted relies on normal deletion flow. Use only if you REALLY know what you are doing. The default value is false, and the user must opt in to enable it
   */
  ignoreStoreReadErrorWithClusterBreakingPotential?: boolean;
  /**
   * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean;
  /**
   * Must be fulfilled before a deletion is carried out. If not possible, a 409 Conflict status will be returned.
   */
  preconditions?: IoK8sApimachineryPkgApisMetaV1Preconditions;
  /**
   * Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
   */
  propagationPolicy?: string;
};

/**
 * FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.
 *
 * Each key is either a '.' representing the field itself, and will always map to an empty set, or a string representing a sub-field or item. The string will follow one of these four formats: 'f:<name>', where <name> is the name of a field in a struct, or key in a map 'v:<value>', where <value> is the exact json formatted value of a list item 'i:<index>', where <index> is position of a item in a list 'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values If a key maps to an empty Fields value, the field that key represents is part of the set.
 *
 * The exact format is defined in sigs.k8s.io/structured-merge-diff
 */
export type IoK8sApimachineryPkgApisMetaV1FieldsV1 = {
  [key: string]: unknown;
};

/**
 * ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
 */
export type IoK8sApimachineryPkgApisMetaV1ListMeta = {
  /**
   * continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a consistent list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response, unless you have received this token from an error message.
   */
  continue?: string;
  /**
   * remainingItemCount is the number of subsequent items in the list which are not included in this list response. If the list request contained label or field selectors, then the number of remaining items is unknown and the field will be left unset and omitted during serialization. If the list is complete (either because it is not chunking or because this is the last chunk), then there are no more remaining items and this field will be left unset and omitted during serialization. Servers older than v1.15 do not set this field. The intended use of the remainingItemCount is *estimating* the size of a collection. Clients should not rely on the remainingItemCount to be set or to be exact.
   */
  remainingItemCount?: number;
  /**
   * String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
   */
  resourceVersion?: string;
  /**
   * Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.
   */
  selfLink?: string;
};

/**
 * ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.
 */
export type IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry = {
  /**
   * APIVersion defines the version of this resource that this field set applies to. The format is "group/version" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.
   */
  apiVersion?: string;
  /**
   * FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: "FieldsV1"
   */
  fieldsType?: string;
  /**
   * FieldsV1 holds the first JSON version format as described in the "FieldsV1" type.
   */
  fieldsV1?: IoK8sApimachineryPkgApisMetaV1FieldsV1;
  /**
   * Manager is an identifier of the workflow managing these fields.
   */
  manager?: string;
  /**
   * Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.
   */
  operation?: string;
  /**
   * Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.
   */
  subresource?: string;
  /**
   * Time is the timestamp of when the ManagedFields entry was added. The timestamp will also be updated if a field is added, the manager changes any of the owned fields value or removes a field. The timestamp does not update when a field is removed from the entry because another manager took it over.
   */
  time?: IoK8sApimachineryPkgApisMetaV1Time;
};

/**
 * ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
 */
export type IoK8sApimachineryPkgApisMetaV1ObjectMeta = {
  /**
   * Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
   */
  annotations?: {
    [key: string]: string;
  };
  /**
   * CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.
   *
   * Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
   */
  creationTimestamp?: IoK8sApimachineryPkgApisMetaV1Time;
  /**
   * Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.
   */
  deletionGracePeriodSeconds?: number;
  /**
   * DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.
   *
   * Populated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
   */
  deletionTimestamp?: IoK8sApimachineryPkgApisMetaV1Time;
  /**
   * Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.
   */
  finalizers?: Array<string>;
  /**
   * GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.
   *
   * If this field is specified and the generated name exists, the server will return a 409.
   *
   * Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency
   */
  generateName?: string;
  /**
   * A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.
   */
  generation?: number;
  /**
   * Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels
   */
  labels?: {
    [key: string]: string;
  };
  /**
   * ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like "ci-cd". The set of fields is always in the version that the workflow used when modifying the object.
   */
  managedFields?: Array<IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry>;
  /**
   * Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
   */
  name?: string;
  /**
   * Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the "default" namespace, but "default" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.
   *
   * Must be a DNS_LABEL. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces
   */
  namespace?: string;
  /**
   * List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
   */
  ownerReferences?: Array<IoK8sApimachineryPkgApisMetaV1OwnerReference>;
  /**
   * An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.
   *
   * Populated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
   */
  resourceVersion?: string;
  /**
   * Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.
   */
  selfLink?: string;
  /**
   * UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.
   *
   * Populated by the system. Read-only. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids
   */
  uid?: string;
};

/**
 * OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.
 */
export type IoK8sApimachineryPkgApisMetaV1OwnerReference = {
  /**
   * API version of the referent.
   */
  apiVersion: string;
  /**
   * If true, AND if the owner has the "foregroundDeletion" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs "delete" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.
   */
  blockOwnerDeletion?: boolean;
  /**
   * If true, this reference points to the managing controller.
   */
  controller?: boolean;
  /**
   * Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
   */
  kind: string;
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
   */
  name: string;
  /**
   * UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids
   */
  uid: string;
};

/**
 * Patch is provided to give a concrete name and type to the Kubernetes PATCH request body.
 */
export type IoK8sApimachineryPkgApisMetaV1Patch = {
  [key: string]: unknown;
};

/**
 * Preconditions must be fulfilled before an operation (update, delete, etc.) is carried out.
 */
export type IoK8sApimachineryPkgApisMetaV1Preconditions = {
  /**
   * Specifies the target ResourceVersion
   */
  resourceVersion?: string;
  /**
   * Specifies the target UID.
   */
  uid?: string;
};

/**
 * Status is a return value for calls that don't return other objects.
 */
export type IoK8sApimachineryPkgApisMetaV1Status = {
  /**
   * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * Suggested HTTP return code for this status, 0 if not set.
   */
  code?: number;
  /**
   * Extended data associated with the reason.  Each reason may define its own extended details. This field is optional and the data returned is not guaranteed to conform to any schema except that defined by the reason type.
   */
  details?: IoK8sApimachineryPkgApisMetaV1StatusDetails;
  /**
   * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * A human-readable description of the status of this operation.
   */
  message?: string;
  /**
   * Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
   */
  metadata?: IoK8sApimachineryPkgApisMetaV1ListMeta;
  /**
   * A machine-readable description of why this operation is in the "Failure" status. If this value is empty there is no information available. A Reason clarifies an HTTP status code but does not override it.
   */
  reason?: string;
  /**
   * Status of the operation. One of: "Success" or "Failure". More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
   */
  status?: string;
};

/**
 * StatusCause provides more information about an api.Status failure, including cases when multiple errors are encountered.
 */
export type IoK8sApimachineryPkgApisMetaV1StatusCause = {
  /**
   * The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed.  Fields may appear more than once in an array of causes due to fields having multiple errors. Optional.
   *
   * Examples:
   * "name" - the field "name" on the current resource
   * "items[0].name" - the field "name" on the first array entry in "items"
   */
  field?: string;
  /**
   * A human-readable description of the cause of the error.  This field may be presented as-is to a reader.
   */
  message?: string;
  /**
   * A machine-readable description of the cause of the error. If this value is empty there is no information available.
   */
  reason?: string;
};

/**
 * StatusDetails is a set of additional properties that MAY be set by the server to provide additional information about a response. The Reason field of a Status object defines what attributes will be set. Clients must ignore fields that do not match the defined type of each attribute, and should assume that any attribute may be empty, invalid, or under defined.
 */
export type IoK8sApimachineryPkgApisMetaV1StatusDetails = {
  /**
   * The Causes array includes more details associated with the StatusReason failure. Not all StatusReasons may provide detailed causes.
   */
  causes?: Array<IoK8sApimachineryPkgApisMetaV1StatusCause>;
  /**
   * The group attribute of the resource associated with the status StatusReason.
   */
  group?: string;
  /**
   * The kind attribute of the resource associated with the status StatusReason. On some operations may differ from the requested resource Kind. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
   */
  kind?: string;
  /**
   * The name attribute of the resource associated with the status StatusReason (when there is a single name which can be described).
   */
  name?: string;
  /**
   * If specified, the time in seconds before the operation should be retried. Some errors may indicate the client must take an alternate action - for those errors this field may indicate how long to wait before taking the alternate action.
   */
  retryAfterSeconds?: number;
  /**
   * UID of the resource. (when there is a single resource which can be described). More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids
   */
  uid?: string;
};

/**
 * Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
 */
export type IoK8sApimachineryPkgApisMetaV1Time = string;

export type ListIamMiloapisComV1Alpha1GroupMembershipForAllNamespacesData = {
  body?: never;
  path?: never;
  query?: {
    /**
     * allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.
     */
    allowWatchBookmarks?: boolean;
    /**
     * The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
     *
     * This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
     */
    continue?: string;
    /**
     * A selector to restrict the list of returned objects by their fields. Defaults to everything.
     */
    fieldSelector?: string;
    /**
     * A selector to restrict the list of returned objects by their labels. Defaults to everything.
     */
    labelSelector?: string;
    /**
     * limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
     *
     * The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
     */
    limit?: number;
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersion?: string;
    /**
     * resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersionMatch?: string;
    /**
     * `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
     *
     * When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
     * is interpreted as "data at least as new as the provided `resourceVersion`"
     * and the bookmark event is send when the state is synced
     * to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
     * If `resourceVersion` is unset, this is interpreted as "consistent read" and the
     * bookmark event is send when the state is synced at least to the moment
     * when request started being processed.
     * - `resourceVersionMatch` set to any other value or unset
     * Invalid error is returned.
     *
     * Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise.
     */
    sendInitialEvents?: boolean;
    /**
     * Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
     */
    timeoutSeconds?: number;
    /**
     * Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
     */
    watch?: boolean;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/groupmemberships';
};

export type ListIamMiloapisComV1Alpha1GroupMembershipForAllNamespacesErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type ListIamMiloapisComV1Alpha1GroupMembershipForAllNamespacesResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1GroupMembershipList;
};

export type ListIamMiloapisComV1Alpha1GroupMembershipForAllNamespacesResponse =
  ListIamMiloapisComV1Alpha1GroupMembershipForAllNamespacesResponses[keyof ListIamMiloapisComV1Alpha1GroupMembershipForAllNamespacesResponses];

export type ListIamMiloapisComV1Alpha1GroupForAllNamespacesData = {
  body?: never;
  path?: never;
  query?: {
    /**
     * allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.
     */
    allowWatchBookmarks?: boolean;
    /**
     * The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
     *
     * This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
     */
    continue?: string;
    /**
     * A selector to restrict the list of returned objects by their fields. Defaults to everything.
     */
    fieldSelector?: string;
    /**
     * A selector to restrict the list of returned objects by their labels. Defaults to everything.
     */
    labelSelector?: string;
    /**
     * limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
     *
     * The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
     */
    limit?: number;
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersion?: string;
    /**
     * resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersionMatch?: string;
    /**
     * `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
     *
     * When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
     * is interpreted as "data at least as new as the provided `resourceVersion`"
     * and the bookmark event is send when the state is synced
     * to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
     * If `resourceVersion` is unset, this is interpreted as "consistent read" and the
     * bookmark event is send when the state is synced at least to the moment
     * when request started being processed.
     * - `resourceVersionMatch` set to any other value or unset
     * Invalid error is returned.
     *
     * Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise.
     */
    sendInitialEvents?: boolean;
    /**
     * Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
     */
    timeoutSeconds?: number;
    /**
     * Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
     */
    watch?: boolean;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/groups';
};

export type ListIamMiloapisComV1Alpha1GroupForAllNamespacesErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type ListIamMiloapisComV1Alpha1GroupForAllNamespacesResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1GroupList;
};

export type ListIamMiloapisComV1Alpha1GroupForAllNamespacesResponse =
  ListIamMiloapisComV1Alpha1GroupForAllNamespacesResponses[keyof ListIamMiloapisComV1Alpha1GroupForAllNamespacesResponses];

export type ListIamMiloapisComV1Alpha1MachineAccountKeyForAllNamespacesData = {
  body?: never;
  path?: never;
  query?: {
    /**
     * allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.
     */
    allowWatchBookmarks?: boolean;
    /**
     * The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
     *
     * This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
     */
    continue?: string;
    /**
     * A selector to restrict the list of returned objects by their fields. Defaults to everything.
     */
    fieldSelector?: string;
    /**
     * A selector to restrict the list of returned objects by their labels. Defaults to everything.
     */
    labelSelector?: string;
    /**
     * limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
     *
     * The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
     */
    limit?: number;
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersion?: string;
    /**
     * resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersionMatch?: string;
    /**
     * `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
     *
     * When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
     * is interpreted as "data at least as new as the provided `resourceVersion`"
     * and the bookmark event is send when the state is synced
     * to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
     * If `resourceVersion` is unset, this is interpreted as "consistent read" and the
     * bookmark event is send when the state is synced at least to the moment
     * when request started being processed.
     * - `resourceVersionMatch` set to any other value or unset
     * Invalid error is returned.
     *
     * Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise.
     */
    sendInitialEvents?: boolean;
    /**
     * Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
     */
    timeoutSeconds?: number;
    /**
     * Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
     */
    watch?: boolean;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/machineaccountkeys';
};

export type ListIamMiloapisComV1Alpha1MachineAccountKeyForAllNamespacesErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type ListIamMiloapisComV1Alpha1MachineAccountKeyForAllNamespacesResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1MachineAccountKeyList;
};

export type ListIamMiloapisComV1Alpha1MachineAccountKeyForAllNamespacesResponse =
  ListIamMiloapisComV1Alpha1MachineAccountKeyForAllNamespacesResponses[keyof ListIamMiloapisComV1Alpha1MachineAccountKeyForAllNamespacesResponses];

export type ListIamMiloapisComV1Alpha1MachineAccountForAllNamespacesData = {
  body?: never;
  path?: never;
  query?: {
    /**
     * allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.
     */
    allowWatchBookmarks?: boolean;
    /**
     * The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
     *
     * This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
     */
    continue?: string;
    /**
     * A selector to restrict the list of returned objects by their fields. Defaults to everything.
     */
    fieldSelector?: string;
    /**
     * A selector to restrict the list of returned objects by their labels. Defaults to everything.
     */
    labelSelector?: string;
    /**
     * limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
     *
     * The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
     */
    limit?: number;
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersion?: string;
    /**
     * resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersionMatch?: string;
    /**
     * `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
     *
     * When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
     * is interpreted as "data at least as new as the provided `resourceVersion`"
     * and the bookmark event is send when the state is synced
     * to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
     * If `resourceVersion` is unset, this is interpreted as "consistent read" and the
     * bookmark event is send when the state is synced at least to the moment
     * when request started being processed.
     * - `resourceVersionMatch` set to any other value or unset
     * Invalid error is returned.
     *
     * Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise.
     */
    sendInitialEvents?: boolean;
    /**
     * Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
     */
    timeoutSeconds?: number;
    /**
     * Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
     */
    watch?: boolean;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/machineaccounts';
};

export type ListIamMiloapisComV1Alpha1MachineAccountForAllNamespacesErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type ListIamMiloapisComV1Alpha1MachineAccountForAllNamespacesResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1MachineAccountList;
};

export type ListIamMiloapisComV1Alpha1MachineAccountForAllNamespacesResponse =
  ListIamMiloapisComV1Alpha1MachineAccountForAllNamespacesResponses[keyof ListIamMiloapisComV1Alpha1MachineAccountForAllNamespacesResponses];

export type DeleteIamMiloapisComV1Alpha1CollectionNamespacedGroupMembershipData = {
  body?: never;
  path: {
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.
     */
    allowWatchBookmarks?: boolean;
    /**
     * The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
     *
     * This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
     */
    continue?: string;
    /**
     * A selector to restrict the list of returned objects by their fields. Defaults to everything.
     */
    fieldSelector?: string;
    /**
     * A selector to restrict the list of returned objects by their labels. Defaults to everything.
     */
    labelSelector?: string;
    /**
     * limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
     *
     * The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
     */
    limit?: number;
    /**
     * resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersion?: string;
    /**
     * resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersionMatch?: string;
    /**
     * `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
     *
     * When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
     * is interpreted as "data at least as new as the provided `resourceVersion`"
     * and the bookmark event is send when the state is synced
     * to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
     * If `resourceVersion` is unset, this is interpreted as "consistent read" and the
     * bookmark event is send when the state is synced at least to the moment
     * when request started being processed.
     * - `resourceVersionMatch` set to any other value or unset
     * Invalid error is returned.
     *
     * Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise.
     */
    sendInitialEvents?: boolean;
    /**
     * Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
     */
    timeoutSeconds?: number;
    /**
     * Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
     */
    watch?: boolean;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/namespaces/{namespace}/groupmemberships';
};

export type DeleteIamMiloapisComV1Alpha1CollectionNamespacedGroupMembershipErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type DeleteIamMiloapisComV1Alpha1CollectionNamespacedGroupMembershipResponses = {
  /**
   * OK
   */
  200: IoK8sApimachineryPkgApisMetaV1Status;
};

export type DeleteIamMiloapisComV1Alpha1CollectionNamespacedGroupMembershipResponse =
  DeleteIamMiloapisComV1Alpha1CollectionNamespacedGroupMembershipResponses[keyof DeleteIamMiloapisComV1Alpha1CollectionNamespacedGroupMembershipResponses];

export type ListIamMiloapisComV1Alpha1NamespacedGroupMembershipData = {
  body?: never;
  path: {
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.
     */
    allowWatchBookmarks?: boolean;
    /**
     * The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
     *
     * This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
     */
    continue?: string;
    /**
     * A selector to restrict the list of returned objects by their fields. Defaults to everything.
     */
    fieldSelector?: string;
    /**
     * A selector to restrict the list of returned objects by their labels. Defaults to everything.
     */
    labelSelector?: string;
    /**
     * limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
     *
     * The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
     */
    limit?: number;
    /**
     * resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersion?: string;
    /**
     * resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersionMatch?: string;
    /**
     * `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
     *
     * When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
     * is interpreted as "data at least as new as the provided `resourceVersion`"
     * and the bookmark event is send when the state is synced
     * to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
     * If `resourceVersion` is unset, this is interpreted as "consistent read" and the
     * bookmark event is send when the state is synced at least to the moment
     * when request started being processed.
     * - `resourceVersionMatch` set to any other value or unset
     * Invalid error is returned.
     *
     * Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise.
     */
    sendInitialEvents?: boolean;
    /**
     * Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
     */
    timeoutSeconds?: number;
    /**
     * Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
     */
    watch?: boolean;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/namespaces/{namespace}/groupmemberships';
};

export type ListIamMiloapisComV1Alpha1NamespacedGroupMembershipErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type ListIamMiloapisComV1Alpha1NamespacedGroupMembershipResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1GroupMembershipList;
};

export type ListIamMiloapisComV1Alpha1NamespacedGroupMembershipResponse =
  ListIamMiloapisComV1Alpha1NamespacedGroupMembershipResponses[keyof ListIamMiloapisComV1Alpha1NamespacedGroupMembershipResponses];

export type CreateIamMiloapisComV1Alpha1NamespacedGroupMembershipData = {
  body: ComMiloapisIamV1Alpha1GroupMembership;
  path: {
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string;
    /**
     * fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
     */
    fieldManager?: string;
    /**
     * fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     */
    fieldValidation?: string;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/namespaces/{namespace}/groupmemberships';
};

export type CreateIamMiloapisComV1Alpha1NamespacedGroupMembershipErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type CreateIamMiloapisComV1Alpha1NamespacedGroupMembershipResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1GroupMembership;
  /**
   * Created
   */
  201: ComMiloapisIamV1Alpha1GroupMembership;
  /**
   * Accepted
   */
  202: ComMiloapisIamV1Alpha1GroupMembership;
};

export type CreateIamMiloapisComV1Alpha1NamespacedGroupMembershipResponse =
  CreateIamMiloapisComV1Alpha1NamespacedGroupMembershipResponses[keyof CreateIamMiloapisComV1Alpha1NamespacedGroupMembershipResponses];

export type DeleteIamMiloapisComV1Alpha1NamespacedGroupMembershipData = {
  body?: IoK8sApimachineryPkgApisMetaV1DeleteOptions;
  path: {
    /**
     * name of the GroupMembership
     */
    name: string;
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string;
    /**
     * The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
     */
    gracePeriodSeconds?: number;
    /**
     * if set to true, it will trigger an unsafe deletion of the resource in case the normal deletion flow fails with a corrupt object error. A resource is considered corrupt if it can not be retrieved from the underlying storage successfully because of a) its data can not be transformed e.g. decryption failure, or b) it fails to decode into an object. NOTE: unsafe deletion ignores finalizer constraints, skips precondition checks, and removes the object from the storage. WARNING: This may potentially break the cluster if the workload associated with the resource being unsafe-deleted relies on normal deletion flow. Use only if you REALLY know what you are doing. The default value is false, and the user must opt in to enable it
     */
    ignoreStoreReadErrorWithClusterBreakingPotential?: boolean;
    /**
     * Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
     */
    orphanDependents?: boolean;
    /**
     * Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
     */
    propagationPolicy?: string;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/namespaces/{namespace}/groupmemberships/{name}';
};

export type DeleteIamMiloapisComV1Alpha1NamespacedGroupMembershipErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type DeleteIamMiloapisComV1Alpha1NamespacedGroupMembershipResponses = {
  /**
   * OK
   */
  200: IoK8sApimachineryPkgApisMetaV1Status;
  /**
   * Accepted
   */
  202: IoK8sApimachineryPkgApisMetaV1Status;
};

export type DeleteIamMiloapisComV1Alpha1NamespacedGroupMembershipResponse =
  DeleteIamMiloapisComV1Alpha1NamespacedGroupMembershipResponses[keyof DeleteIamMiloapisComV1Alpha1NamespacedGroupMembershipResponses];

export type ReadIamMiloapisComV1Alpha1NamespacedGroupMembershipData = {
  body?: never;
  path: {
    /**
     * name of the GroupMembership
     */
    name: string;
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersion?: string;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/namespaces/{namespace}/groupmemberships/{name}';
};

export type ReadIamMiloapisComV1Alpha1NamespacedGroupMembershipErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type ReadIamMiloapisComV1Alpha1NamespacedGroupMembershipResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1GroupMembership;
};

export type ReadIamMiloapisComV1Alpha1NamespacedGroupMembershipResponse =
  ReadIamMiloapisComV1Alpha1NamespacedGroupMembershipResponses[keyof ReadIamMiloapisComV1Alpha1NamespacedGroupMembershipResponses];

export type PatchIamMiloapisComV1Alpha1NamespacedGroupMembershipData = {
  body: IoK8sApimachineryPkgApisMetaV1Patch;
  path: {
    /**
     * name of the GroupMembership
     */
    name: string;
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string;
    /**
     * fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
     */
    fieldManager?: string;
    /**
     * fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     */
    fieldValidation?: string;
    /**
     * Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.
     */
    force?: boolean;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/namespaces/{namespace}/groupmemberships/{name}';
};

export type PatchIamMiloapisComV1Alpha1NamespacedGroupMembershipErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type PatchIamMiloapisComV1Alpha1NamespacedGroupMembershipResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1GroupMembership;
};

export type PatchIamMiloapisComV1Alpha1NamespacedGroupMembershipResponse =
  PatchIamMiloapisComV1Alpha1NamespacedGroupMembershipResponses[keyof PatchIamMiloapisComV1Alpha1NamespacedGroupMembershipResponses];

export type ReplaceIamMiloapisComV1Alpha1NamespacedGroupMembershipData = {
  body: ComMiloapisIamV1Alpha1GroupMembership;
  path: {
    /**
     * name of the GroupMembership
     */
    name: string;
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string;
    /**
     * fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
     */
    fieldManager?: string;
    /**
     * fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     */
    fieldValidation?: string;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/namespaces/{namespace}/groupmemberships/{name}';
};

export type ReplaceIamMiloapisComV1Alpha1NamespacedGroupMembershipErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type ReplaceIamMiloapisComV1Alpha1NamespacedGroupMembershipResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1GroupMembership;
  /**
   * Created
   */
  201: ComMiloapisIamV1Alpha1GroupMembership;
};

export type ReplaceIamMiloapisComV1Alpha1NamespacedGroupMembershipResponse =
  ReplaceIamMiloapisComV1Alpha1NamespacedGroupMembershipResponses[keyof ReplaceIamMiloapisComV1Alpha1NamespacedGroupMembershipResponses];

export type ReadIamMiloapisComV1Alpha1NamespacedGroupMembershipStatusData = {
  body?: never;
  path: {
    /**
     * name of the GroupMembership
     */
    name: string;
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersion?: string;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/namespaces/{namespace}/groupmemberships/{name}/status';
};

export type ReadIamMiloapisComV1Alpha1NamespacedGroupMembershipStatusErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type ReadIamMiloapisComV1Alpha1NamespacedGroupMembershipStatusResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1GroupMembership;
};

export type ReadIamMiloapisComV1Alpha1NamespacedGroupMembershipStatusResponse =
  ReadIamMiloapisComV1Alpha1NamespacedGroupMembershipStatusResponses[keyof ReadIamMiloapisComV1Alpha1NamespacedGroupMembershipStatusResponses];

export type PatchIamMiloapisComV1Alpha1NamespacedGroupMembershipStatusData = {
  body: IoK8sApimachineryPkgApisMetaV1Patch;
  path: {
    /**
     * name of the GroupMembership
     */
    name: string;
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string;
    /**
     * fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
     */
    fieldManager?: string;
    /**
     * fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     */
    fieldValidation?: string;
    /**
     * Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.
     */
    force?: boolean;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/namespaces/{namespace}/groupmemberships/{name}/status';
};

export type PatchIamMiloapisComV1Alpha1NamespacedGroupMembershipStatusErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type PatchIamMiloapisComV1Alpha1NamespacedGroupMembershipStatusResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1GroupMembership;
};

export type PatchIamMiloapisComV1Alpha1NamespacedGroupMembershipStatusResponse =
  PatchIamMiloapisComV1Alpha1NamespacedGroupMembershipStatusResponses[keyof PatchIamMiloapisComV1Alpha1NamespacedGroupMembershipStatusResponses];

export type ReplaceIamMiloapisComV1Alpha1NamespacedGroupMembershipStatusData = {
  body: ComMiloapisIamV1Alpha1GroupMembership;
  path: {
    /**
     * name of the GroupMembership
     */
    name: string;
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string;
    /**
     * fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
     */
    fieldManager?: string;
    /**
     * fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     */
    fieldValidation?: string;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/namespaces/{namespace}/groupmemberships/{name}/status';
};

export type ReplaceIamMiloapisComV1Alpha1NamespacedGroupMembershipStatusErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type ReplaceIamMiloapisComV1Alpha1NamespacedGroupMembershipStatusResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1GroupMembership;
  /**
   * Created
   */
  201: ComMiloapisIamV1Alpha1GroupMembership;
};

export type ReplaceIamMiloapisComV1Alpha1NamespacedGroupMembershipStatusResponse =
  ReplaceIamMiloapisComV1Alpha1NamespacedGroupMembershipStatusResponses[keyof ReplaceIamMiloapisComV1Alpha1NamespacedGroupMembershipStatusResponses];

export type DeleteIamMiloapisComV1Alpha1CollectionNamespacedGroupData = {
  body?: never;
  path: {
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.
     */
    allowWatchBookmarks?: boolean;
    /**
     * The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
     *
     * This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
     */
    continue?: string;
    /**
     * A selector to restrict the list of returned objects by their fields. Defaults to everything.
     */
    fieldSelector?: string;
    /**
     * A selector to restrict the list of returned objects by their labels. Defaults to everything.
     */
    labelSelector?: string;
    /**
     * limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
     *
     * The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
     */
    limit?: number;
    /**
     * resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersion?: string;
    /**
     * resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersionMatch?: string;
    /**
     * `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
     *
     * When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
     * is interpreted as "data at least as new as the provided `resourceVersion`"
     * and the bookmark event is send when the state is synced
     * to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
     * If `resourceVersion` is unset, this is interpreted as "consistent read" and the
     * bookmark event is send when the state is synced at least to the moment
     * when request started being processed.
     * - `resourceVersionMatch` set to any other value or unset
     * Invalid error is returned.
     *
     * Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise.
     */
    sendInitialEvents?: boolean;
    /**
     * Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
     */
    timeoutSeconds?: number;
    /**
     * Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
     */
    watch?: boolean;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/namespaces/{namespace}/groups';
};

export type DeleteIamMiloapisComV1Alpha1CollectionNamespacedGroupErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type DeleteIamMiloapisComV1Alpha1CollectionNamespacedGroupResponses = {
  /**
   * OK
   */
  200: IoK8sApimachineryPkgApisMetaV1Status;
};

export type DeleteIamMiloapisComV1Alpha1CollectionNamespacedGroupResponse =
  DeleteIamMiloapisComV1Alpha1CollectionNamespacedGroupResponses[keyof DeleteIamMiloapisComV1Alpha1CollectionNamespacedGroupResponses];

export type ListIamMiloapisComV1Alpha1NamespacedGroupData = {
  body?: never;
  path: {
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.
     */
    allowWatchBookmarks?: boolean;
    /**
     * The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
     *
     * This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
     */
    continue?: string;
    /**
     * A selector to restrict the list of returned objects by their fields. Defaults to everything.
     */
    fieldSelector?: string;
    /**
     * A selector to restrict the list of returned objects by their labels. Defaults to everything.
     */
    labelSelector?: string;
    /**
     * limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
     *
     * The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
     */
    limit?: number;
    /**
     * resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersion?: string;
    /**
     * resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersionMatch?: string;
    /**
     * `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
     *
     * When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
     * is interpreted as "data at least as new as the provided `resourceVersion`"
     * and the bookmark event is send when the state is synced
     * to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
     * If `resourceVersion` is unset, this is interpreted as "consistent read" and the
     * bookmark event is send when the state is synced at least to the moment
     * when request started being processed.
     * - `resourceVersionMatch` set to any other value or unset
     * Invalid error is returned.
     *
     * Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise.
     */
    sendInitialEvents?: boolean;
    /**
     * Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
     */
    timeoutSeconds?: number;
    /**
     * Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
     */
    watch?: boolean;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/namespaces/{namespace}/groups';
};

export type ListIamMiloapisComV1Alpha1NamespacedGroupErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type ListIamMiloapisComV1Alpha1NamespacedGroupResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1GroupList;
};

export type ListIamMiloapisComV1Alpha1NamespacedGroupResponse =
  ListIamMiloapisComV1Alpha1NamespacedGroupResponses[keyof ListIamMiloapisComV1Alpha1NamespacedGroupResponses];

export type CreateIamMiloapisComV1Alpha1NamespacedGroupData = {
  body: ComMiloapisIamV1Alpha1Group;
  path: {
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string;
    /**
     * fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
     */
    fieldManager?: string;
    /**
     * fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     */
    fieldValidation?: string;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/namespaces/{namespace}/groups';
};

export type CreateIamMiloapisComV1Alpha1NamespacedGroupErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type CreateIamMiloapisComV1Alpha1NamespacedGroupResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1Group;
  /**
   * Created
   */
  201: ComMiloapisIamV1Alpha1Group;
  /**
   * Accepted
   */
  202: ComMiloapisIamV1Alpha1Group;
};

export type CreateIamMiloapisComV1Alpha1NamespacedGroupResponse =
  CreateIamMiloapisComV1Alpha1NamespacedGroupResponses[keyof CreateIamMiloapisComV1Alpha1NamespacedGroupResponses];

export type DeleteIamMiloapisComV1Alpha1NamespacedGroupData = {
  body?: IoK8sApimachineryPkgApisMetaV1DeleteOptions;
  path: {
    /**
     * name of the Group
     */
    name: string;
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string;
    /**
     * The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
     */
    gracePeriodSeconds?: number;
    /**
     * if set to true, it will trigger an unsafe deletion of the resource in case the normal deletion flow fails with a corrupt object error. A resource is considered corrupt if it can not be retrieved from the underlying storage successfully because of a) its data can not be transformed e.g. decryption failure, or b) it fails to decode into an object. NOTE: unsafe deletion ignores finalizer constraints, skips precondition checks, and removes the object from the storage. WARNING: This may potentially break the cluster if the workload associated with the resource being unsafe-deleted relies on normal deletion flow. Use only if you REALLY know what you are doing. The default value is false, and the user must opt in to enable it
     */
    ignoreStoreReadErrorWithClusterBreakingPotential?: boolean;
    /**
     * Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
     */
    orphanDependents?: boolean;
    /**
     * Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
     */
    propagationPolicy?: string;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/namespaces/{namespace}/groups/{name}';
};

export type DeleteIamMiloapisComV1Alpha1NamespacedGroupErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type DeleteIamMiloapisComV1Alpha1NamespacedGroupResponses = {
  /**
   * OK
   */
  200: IoK8sApimachineryPkgApisMetaV1Status;
  /**
   * Accepted
   */
  202: IoK8sApimachineryPkgApisMetaV1Status;
};

export type DeleteIamMiloapisComV1Alpha1NamespacedGroupResponse =
  DeleteIamMiloapisComV1Alpha1NamespacedGroupResponses[keyof DeleteIamMiloapisComV1Alpha1NamespacedGroupResponses];

export type ReadIamMiloapisComV1Alpha1NamespacedGroupData = {
  body?: never;
  path: {
    /**
     * name of the Group
     */
    name: string;
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersion?: string;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/namespaces/{namespace}/groups/{name}';
};

export type ReadIamMiloapisComV1Alpha1NamespacedGroupErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type ReadIamMiloapisComV1Alpha1NamespacedGroupResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1Group;
};

export type ReadIamMiloapisComV1Alpha1NamespacedGroupResponse =
  ReadIamMiloapisComV1Alpha1NamespacedGroupResponses[keyof ReadIamMiloapisComV1Alpha1NamespacedGroupResponses];

export type PatchIamMiloapisComV1Alpha1NamespacedGroupData = {
  body: IoK8sApimachineryPkgApisMetaV1Patch;
  path: {
    /**
     * name of the Group
     */
    name: string;
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string;
    /**
     * fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
     */
    fieldManager?: string;
    /**
     * fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     */
    fieldValidation?: string;
    /**
     * Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.
     */
    force?: boolean;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/namespaces/{namespace}/groups/{name}';
};

export type PatchIamMiloapisComV1Alpha1NamespacedGroupErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type PatchIamMiloapisComV1Alpha1NamespacedGroupResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1Group;
};

export type PatchIamMiloapisComV1Alpha1NamespacedGroupResponse =
  PatchIamMiloapisComV1Alpha1NamespacedGroupResponses[keyof PatchIamMiloapisComV1Alpha1NamespacedGroupResponses];

export type ReplaceIamMiloapisComV1Alpha1NamespacedGroupData = {
  body: ComMiloapisIamV1Alpha1Group;
  path: {
    /**
     * name of the Group
     */
    name: string;
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string;
    /**
     * fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
     */
    fieldManager?: string;
    /**
     * fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     */
    fieldValidation?: string;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/namespaces/{namespace}/groups/{name}';
};

export type ReplaceIamMiloapisComV1Alpha1NamespacedGroupErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type ReplaceIamMiloapisComV1Alpha1NamespacedGroupResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1Group;
  /**
   * Created
   */
  201: ComMiloapisIamV1Alpha1Group;
};

export type ReplaceIamMiloapisComV1Alpha1NamespacedGroupResponse =
  ReplaceIamMiloapisComV1Alpha1NamespacedGroupResponses[keyof ReplaceIamMiloapisComV1Alpha1NamespacedGroupResponses];

export type ReadIamMiloapisComV1Alpha1NamespacedGroupStatusData = {
  body?: never;
  path: {
    /**
     * name of the Group
     */
    name: string;
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersion?: string;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/namespaces/{namespace}/groups/{name}/status';
};

export type ReadIamMiloapisComV1Alpha1NamespacedGroupStatusErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type ReadIamMiloapisComV1Alpha1NamespacedGroupStatusResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1Group;
};

export type ReadIamMiloapisComV1Alpha1NamespacedGroupStatusResponse =
  ReadIamMiloapisComV1Alpha1NamespacedGroupStatusResponses[keyof ReadIamMiloapisComV1Alpha1NamespacedGroupStatusResponses];

export type PatchIamMiloapisComV1Alpha1NamespacedGroupStatusData = {
  body: IoK8sApimachineryPkgApisMetaV1Patch;
  path: {
    /**
     * name of the Group
     */
    name: string;
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string;
    /**
     * fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
     */
    fieldManager?: string;
    /**
     * fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     */
    fieldValidation?: string;
    /**
     * Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.
     */
    force?: boolean;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/namespaces/{namespace}/groups/{name}/status';
};

export type PatchIamMiloapisComV1Alpha1NamespacedGroupStatusErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type PatchIamMiloapisComV1Alpha1NamespacedGroupStatusResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1Group;
};

export type PatchIamMiloapisComV1Alpha1NamespacedGroupStatusResponse =
  PatchIamMiloapisComV1Alpha1NamespacedGroupStatusResponses[keyof PatchIamMiloapisComV1Alpha1NamespacedGroupStatusResponses];

export type ReplaceIamMiloapisComV1Alpha1NamespacedGroupStatusData = {
  body: ComMiloapisIamV1Alpha1Group;
  path: {
    /**
     * name of the Group
     */
    name: string;
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string;
    /**
     * fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
     */
    fieldManager?: string;
    /**
     * fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     */
    fieldValidation?: string;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/namespaces/{namespace}/groups/{name}/status';
};

export type ReplaceIamMiloapisComV1Alpha1NamespacedGroupStatusErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type ReplaceIamMiloapisComV1Alpha1NamespacedGroupStatusResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1Group;
  /**
   * Created
   */
  201: ComMiloapisIamV1Alpha1Group;
};

export type ReplaceIamMiloapisComV1Alpha1NamespacedGroupStatusResponse =
  ReplaceIamMiloapisComV1Alpha1NamespacedGroupStatusResponses[keyof ReplaceIamMiloapisComV1Alpha1NamespacedGroupStatusResponses];

export type DeleteIamMiloapisComV1Alpha1CollectionNamespacedMachineAccountKeyData = {
  body?: never;
  path: {
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.
     */
    allowWatchBookmarks?: boolean;
    /**
     * The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
     *
     * This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
     */
    continue?: string;
    /**
     * A selector to restrict the list of returned objects by their fields. Defaults to everything.
     */
    fieldSelector?: string;
    /**
     * A selector to restrict the list of returned objects by their labels. Defaults to everything.
     */
    labelSelector?: string;
    /**
     * limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
     *
     * The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
     */
    limit?: number;
    /**
     * resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersion?: string;
    /**
     * resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersionMatch?: string;
    /**
     * `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
     *
     * When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
     * is interpreted as "data at least as new as the provided `resourceVersion`"
     * and the bookmark event is send when the state is synced
     * to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
     * If `resourceVersion` is unset, this is interpreted as "consistent read" and the
     * bookmark event is send when the state is synced at least to the moment
     * when request started being processed.
     * - `resourceVersionMatch` set to any other value or unset
     * Invalid error is returned.
     *
     * Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise.
     */
    sendInitialEvents?: boolean;
    /**
     * Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
     */
    timeoutSeconds?: number;
    /**
     * Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
     */
    watch?: boolean;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/namespaces/{namespace}/machineaccountkeys';
};

export type DeleteIamMiloapisComV1Alpha1CollectionNamespacedMachineAccountKeyErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type DeleteIamMiloapisComV1Alpha1CollectionNamespacedMachineAccountKeyResponses = {
  /**
   * OK
   */
  200: IoK8sApimachineryPkgApisMetaV1Status;
};

export type DeleteIamMiloapisComV1Alpha1CollectionNamespacedMachineAccountKeyResponse =
  DeleteIamMiloapisComV1Alpha1CollectionNamespacedMachineAccountKeyResponses[keyof DeleteIamMiloapisComV1Alpha1CollectionNamespacedMachineAccountKeyResponses];

export type ListIamMiloapisComV1Alpha1NamespacedMachineAccountKeyData = {
  body?: never;
  path: {
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.
     */
    allowWatchBookmarks?: boolean;
    /**
     * The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
     *
     * This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
     */
    continue?: string;
    /**
     * A selector to restrict the list of returned objects by their fields. Defaults to everything.
     */
    fieldSelector?: string;
    /**
     * A selector to restrict the list of returned objects by their labels. Defaults to everything.
     */
    labelSelector?: string;
    /**
     * limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
     *
     * The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
     */
    limit?: number;
    /**
     * resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersion?: string;
    /**
     * resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersionMatch?: string;
    /**
     * `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
     *
     * When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
     * is interpreted as "data at least as new as the provided `resourceVersion`"
     * and the bookmark event is send when the state is synced
     * to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
     * If `resourceVersion` is unset, this is interpreted as "consistent read" and the
     * bookmark event is send when the state is synced at least to the moment
     * when request started being processed.
     * - `resourceVersionMatch` set to any other value or unset
     * Invalid error is returned.
     *
     * Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise.
     */
    sendInitialEvents?: boolean;
    /**
     * Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
     */
    timeoutSeconds?: number;
    /**
     * Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
     */
    watch?: boolean;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/namespaces/{namespace}/machineaccountkeys';
};

export type ListIamMiloapisComV1Alpha1NamespacedMachineAccountKeyErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type ListIamMiloapisComV1Alpha1NamespacedMachineAccountKeyResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1MachineAccountKeyList;
};

export type ListIamMiloapisComV1Alpha1NamespacedMachineAccountKeyResponse =
  ListIamMiloapisComV1Alpha1NamespacedMachineAccountKeyResponses[keyof ListIamMiloapisComV1Alpha1NamespacedMachineAccountKeyResponses];

export type CreateIamMiloapisComV1Alpha1NamespacedMachineAccountKeyData = {
  body: ComMiloapisIamV1Alpha1MachineAccountKey;
  path: {
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string;
    /**
     * fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
     */
    fieldManager?: string;
    /**
     * fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     */
    fieldValidation?: string;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/namespaces/{namespace}/machineaccountkeys';
};

export type CreateIamMiloapisComV1Alpha1NamespacedMachineAccountKeyErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type CreateIamMiloapisComV1Alpha1NamespacedMachineAccountKeyResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1MachineAccountKey;
  /**
   * Created
   */
  201: ComMiloapisIamV1Alpha1MachineAccountKey;
  /**
   * Accepted
   */
  202: ComMiloapisIamV1Alpha1MachineAccountKey;
};

export type CreateIamMiloapisComV1Alpha1NamespacedMachineAccountKeyResponse =
  CreateIamMiloapisComV1Alpha1NamespacedMachineAccountKeyResponses[keyof CreateIamMiloapisComV1Alpha1NamespacedMachineAccountKeyResponses];

export type DeleteIamMiloapisComV1Alpha1NamespacedMachineAccountKeyData = {
  body?: IoK8sApimachineryPkgApisMetaV1DeleteOptions;
  path: {
    /**
     * name of the MachineAccountKey
     */
    name: string;
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string;
    /**
     * The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
     */
    gracePeriodSeconds?: number;
    /**
     * if set to true, it will trigger an unsafe deletion of the resource in case the normal deletion flow fails with a corrupt object error. A resource is considered corrupt if it can not be retrieved from the underlying storage successfully because of a) its data can not be transformed e.g. decryption failure, or b) it fails to decode into an object. NOTE: unsafe deletion ignores finalizer constraints, skips precondition checks, and removes the object from the storage. WARNING: This may potentially break the cluster if the workload associated with the resource being unsafe-deleted relies on normal deletion flow. Use only if you REALLY know what you are doing. The default value is false, and the user must opt in to enable it
     */
    ignoreStoreReadErrorWithClusterBreakingPotential?: boolean;
    /**
     * Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
     */
    orphanDependents?: boolean;
    /**
     * Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
     */
    propagationPolicy?: string;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/namespaces/{namespace}/machineaccountkeys/{name}';
};

export type DeleteIamMiloapisComV1Alpha1NamespacedMachineAccountKeyErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type DeleteIamMiloapisComV1Alpha1NamespacedMachineAccountKeyResponses = {
  /**
   * OK
   */
  200: IoK8sApimachineryPkgApisMetaV1Status;
  /**
   * Accepted
   */
  202: IoK8sApimachineryPkgApisMetaV1Status;
};

export type DeleteIamMiloapisComV1Alpha1NamespacedMachineAccountKeyResponse =
  DeleteIamMiloapisComV1Alpha1NamespacedMachineAccountKeyResponses[keyof DeleteIamMiloapisComV1Alpha1NamespacedMachineAccountKeyResponses];

export type ReadIamMiloapisComV1Alpha1NamespacedMachineAccountKeyData = {
  body?: never;
  path: {
    /**
     * name of the MachineAccountKey
     */
    name: string;
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersion?: string;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/namespaces/{namespace}/machineaccountkeys/{name}';
};

export type ReadIamMiloapisComV1Alpha1NamespacedMachineAccountKeyErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type ReadIamMiloapisComV1Alpha1NamespacedMachineAccountKeyResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1MachineAccountKey;
};

export type ReadIamMiloapisComV1Alpha1NamespacedMachineAccountKeyResponse =
  ReadIamMiloapisComV1Alpha1NamespacedMachineAccountKeyResponses[keyof ReadIamMiloapisComV1Alpha1NamespacedMachineAccountKeyResponses];

export type PatchIamMiloapisComV1Alpha1NamespacedMachineAccountKeyData = {
  body: IoK8sApimachineryPkgApisMetaV1Patch;
  path: {
    /**
     * name of the MachineAccountKey
     */
    name: string;
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string;
    /**
     * fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
     */
    fieldManager?: string;
    /**
     * fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     */
    fieldValidation?: string;
    /**
     * Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.
     */
    force?: boolean;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/namespaces/{namespace}/machineaccountkeys/{name}';
};

export type PatchIamMiloapisComV1Alpha1NamespacedMachineAccountKeyErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type PatchIamMiloapisComV1Alpha1NamespacedMachineAccountKeyResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1MachineAccountKey;
};

export type PatchIamMiloapisComV1Alpha1NamespacedMachineAccountKeyResponse =
  PatchIamMiloapisComV1Alpha1NamespacedMachineAccountKeyResponses[keyof PatchIamMiloapisComV1Alpha1NamespacedMachineAccountKeyResponses];

export type ReplaceIamMiloapisComV1Alpha1NamespacedMachineAccountKeyData = {
  body: ComMiloapisIamV1Alpha1MachineAccountKey;
  path: {
    /**
     * name of the MachineAccountKey
     */
    name: string;
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string;
    /**
     * fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
     */
    fieldManager?: string;
    /**
     * fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     */
    fieldValidation?: string;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/namespaces/{namespace}/machineaccountkeys/{name}';
};

export type ReplaceIamMiloapisComV1Alpha1NamespacedMachineAccountKeyErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type ReplaceIamMiloapisComV1Alpha1NamespacedMachineAccountKeyResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1MachineAccountKey;
  /**
   * Created
   */
  201: ComMiloapisIamV1Alpha1MachineAccountKey;
};

export type ReplaceIamMiloapisComV1Alpha1NamespacedMachineAccountKeyResponse =
  ReplaceIamMiloapisComV1Alpha1NamespacedMachineAccountKeyResponses[keyof ReplaceIamMiloapisComV1Alpha1NamespacedMachineAccountKeyResponses];

export type ReadIamMiloapisComV1Alpha1NamespacedMachineAccountKeyStatusData = {
  body?: never;
  path: {
    /**
     * name of the MachineAccountKey
     */
    name: string;
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersion?: string;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/namespaces/{namespace}/machineaccountkeys/{name}/status';
};

export type ReadIamMiloapisComV1Alpha1NamespacedMachineAccountKeyStatusErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type ReadIamMiloapisComV1Alpha1NamespacedMachineAccountKeyStatusResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1MachineAccountKey;
};

export type ReadIamMiloapisComV1Alpha1NamespacedMachineAccountKeyStatusResponse =
  ReadIamMiloapisComV1Alpha1NamespacedMachineAccountKeyStatusResponses[keyof ReadIamMiloapisComV1Alpha1NamespacedMachineAccountKeyStatusResponses];

export type PatchIamMiloapisComV1Alpha1NamespacedMachineAccountKeyStatusData = {
  body: IoK8sApimachineryPkgApisMetaV1Patch;
  path: {
    /**
     * name of the MachineAccountKey
     */
    name: string;
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string;
    /**
     * fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
     */
    fieldManager?: string;
    /**
     * fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     */
    fieldValidation?: string;
    /**
     * Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.
     */
    force?: boolean;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/namespaces/{namespace}/machineaccountkeys/{name}/status';
};

export type PatchIamMiloapisComV1Alpha1NamespacedMachineAccountKeyStatusErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type PatchIamMiloapisComV1Alpha1NamespacedMachineAccountKeyStatusResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1MachineAccountKey;
};

export type PatchIamMiloapisComV1Alpha1NamespacedMachineAccountKeyStatusResponse =
  PatchIamMiloapisComV1Alpha1NamespacedMachineAccountKeyStatusResponses[keyof PatchIamMiloapisComV1Alpha1NamespacedMachineAccountKeyStatusResponses];

export type ReplaceIamMiloapisComV1Alpha1NamespacedMachineAccountKeyStatusData = {
  body: ComMiloapisIamV1Alpha1MachineAccountKey;
  path: {
    /**
     * name of the MachineAccountKey
     */
    name: string;
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string;
    /**
     * fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
     */
    fieldManager?: string;
    /**
     * fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     */
    fieldValidation?: string;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/namespaces/{namespace}/machineaccountkeys/{name}/status';
};

export type ReplaceIamMiloapisComV1Alpha1NamespacedMachineAccountKeyStatusErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type ReplaceIamMiloapisComV1Alpha1NamespacedMachineAccountKeyStatusResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1MachineAccountKey;
  /**
   * Created
   */
  201: ComMiloapisIamV1Alpha1MachineAccountKey;
};

export type ReplaceIamMiloapisComV1Alpha1NamespacedMachineAccountKeyStatusResponse =
  ReplaceIamMiloapisComV1Alpha1NamespacedMachineAccountKeyStatusResponses[keyof ReplaceIamMiloapisComV1Alpha1NamespacedMachineAccountKeyStatusResponses];

export type DeleteIamMiloapisComV1Alpha1CollectionNamespacedMachineAccountData = {
  body?: never;
  path: {
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.
     */
    allowWatchBookmarks?: boolean;
    /**
     * The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
     *
     * This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
     */
    continue?: string;
    /**
     * A selector to restrict the list of returned objects by their fields. Defaults to everything.
     */
    fieldSelector?: string;
    /**
     * A selector to restrict the list of returned objects by their labels. Defaults to everything.
     */
    labelSelector?: string;
    /**
     * limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
     *
     * The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
     */
    limit?: number;
    /**
     * resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersion?: string;
    /**
     * resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersionMatch?: string;
    /**
     * `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
     *
     * When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
     * is interpreted as "data at least as new as the provided `resourceVersion`"
     * and the bookmark event is send when the state is synced
     * to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
     * If `resourceVersion` is unset, this is interpreted as "consistent read" and the
     * bookmark event is send when the state is synced at least to the moment
     * when request started being processed.
     * - `resourceVersionMatch` set to any other value or unset
     * Invalid error is returned.
     *
     * Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise.
     */
    sendInitialEvents?: boolean;
    /**
     * Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
     */
    timeoutSeconds?: number;
    /**
     * Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
     */
    watch?: boolean;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/namespaces/{namespace}/machineaccounts';
};

export type DeleteIamMiloapisComV1Alpha1CollectionNamespacedMachineAccountErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type DeleteIamMiloapisComV1Alpha1CollectionNamespacedMachineAccountResponses = {
  /**
   * OK
   */
  200: IoK8sApimachineryPkgApisMetaV1Status;
};

export type DeleteIamMiloapisComV1Alpha1CollectionNamespacedMachineAccountResponse =
  DeleteIamMiloapisComV1Alpha1CollectionNamespacedMachineAccountResponses[keyof DeleteIamMiloapisComV1Alpha1CollectionNamespacedMachineAccountResponses];

export type ListIamMiloapisComV1Alpha1NamespacedMachineAccountData = {
  body?: never;
  path: {
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.
     */
    allowWatchBookmarks?: boolean;
    /**
     * The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
     *
     * This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
     */
    continue?: string;
    /**
     * A selector to restrict the list of returned objects by their fields. Defaults to everything.
     */
    fieldSelector?: string;
    /**
     * A selector to restrict the list of returned objects by their labels. Defaults to everything.
     */
    labelSelector?: string;
    /**
     * limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
     *
     * The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
     */
    limit?: number;
    /**
     * resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersion?: string;
    /**
     * resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersionMatch?: string;
    /**
     * `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
     *
     * When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
     * is interpreted as "data at least as new as the provided `resourceVersion`"
     * and the bookmark event is send when the state is synced
     * to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
     * If `resourceVersion` is unset, this is interpreted as "consistent read" and the
     * bookmark event is send when the state is synced at least to the moment
     * when request started being processed.
     * - `resourceVersionMatch` set to any other value or unset
     * Invalid error is returned.
     *
     * Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise.
     */
    sendInitialEvents?: boolean;
    /**
     * Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
     */
    timeoutSeconds?: number;
    /**
     * Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
     */
    watch?: boolean;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/namespaces/{namespace}/machineaccounts';
};

export type ListIamMiloapisComV1Alpha1NamespacedMachineAccountErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type ListIamMiloapisComV1Alpha1NamespacedMachineAccountResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1MachineAccountList;
};

export type ListIamMiloapisComV1Alpha1NamespacedMachineAccountResponse =
  ListIamMiloapisComV1Alpha1NamespacedMachineAccountResponses[keyof ListIamMiloapisComV1Alpha1NamespacedMachineAccountResponses];

export type CreateIamMiloapisComV1Alpha1NamespacedMachineAccountData = {
  body: ComMiloapisIamV1Alpha1MachineAccount;
  path: {
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string;
    /**
     * fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
     */
    fieldManager?: string;
    /**
     * fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     */
    fieldValidation?: string;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/namespaces/{namespace}/machineaccounts';
};

export type CreateIamMiloapisComV1Alpha1NamespacedMachineAccountErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type CreateIamMiloapisComV1Alpha1NamespacedMachineAccountResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1MachineAccount;
  /**
   * Created
   */
  201: ComMiloapisIamV1Alpha1MachineAccount;
  /**
   * Accepted
   */
  202: ComMiloapisIamV1Alpha1MachineAccount;
};

export type CreateIamMiloapisComV1Alpha1NamespacedMachineAccountResponse =
  CreateIamMiloapisComV1Alpha1NamespacedMachineAccountResponses[keyof CreateIamMiloapisComV1Alpha1NamespacedMachineAccountResponses];

export type DeleteIamMiloapisComV1Alpha1NamespacedMachineAccountData = {
  body?: IoK8sApimachineryPkgApisMetaV1DeleteOptions;
  path: {
    /**
     * name of the MachineAccount
     */
    name: string;
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string;
    /**
     * The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
     */
    gracePeriodSeconds?: number;
    /**
     * if set to true, it will trigger an unsafe deletion of the resource in case the normal deletion flow fails with a corrupt object error. A resource is considered corrupt if it can not be retrieved from the underlying storage successfully because of a) its data can not be transformed e.g. decryption failure, or b) it fails to decode into an object. NOTE: unsafe deletion ignores finalizer constraints, skips precondition checks, and removes the object from the storage. WARNING: This may potentially break the cluster if the workload associated with the resource being unsafe-deleted relies on normal deletion flow. Use only if you REALLY know what you are doing. The default value is false, and the user must opt in to enable it
     */
    ignoreStoreReadErrorWithClusterBreakingPotential?: boolean;
    /**
     * Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
     */
    orphanDependents?: boolean;
    /**
     * Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
     */
    propagationPolicy?: string;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/namespaces/{namespace}/machineaccounts/{name}';
};

export type DeleteIamMiloapisComV1Alpha1NamespacedMachineAccountErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type DeleteIamMiloapisComV1Alpha1NamespacedMachineAccountResponses = {
  /**
   * OK
   */
  200: IoK8sApimachineryPkgApisMetaV1Status;
  /**
   * Accepted
   */
  202: IoK8sApimachineryPkgApisMetaV1Status;
};

export type DeleteIamMiloapisComV1Alpha1NamespacedMachineAccountResponse =
  DeleteIamMiloapisComV1Alpha1NamespacedMachineAccountResponses[keyof DeleteIamMiloapisComV1Alpha1NamespacedMachineAccountResponses];

export type ReadIamMiloapisComV1Alpha1NamespacedMachineAccountData = {
  body?: never;
  path: {
    /**
     * name of the MachineAccount
     */
    name: string;
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersion?: string;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/namespaces/{namespace}/machineaccounts/{name}';
};

export type ReadIamMiloapisComV1Alpha1NamespacedMachineAccountErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type ReadIamMiloapisComV1Alpha1NamespacedMachineAccountResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1MachineAccount;
};

export type ReadIamMiloapisComV1Alpha1NamespacedMachineAccountResponse =
  ReadIamMiloapisComV1Alpha1NamespacedMachineAccountResponses[keyof ReadIamMiloapisComV1Alpha1NamespacedMachineAccountResponses];

export type PatchIamMiloapisComV1Alpha1NamespacedMachineAccountData = {
  body: IoK8sApimachineryPkgApisMetaV1Patch;
  path: {
    /**
     * name of the MachineAccount
     */
    name: string;
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string;
    /**
     * fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
     */
    fieldManager?: string;
    /**
     * fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     */
    fieldValidation?: string;
    /**
     * Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.
     */
    force?: boolean;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/namespaces/{namespace}/machineaccounts/{name}';
};

export type PatchIamMiloapisComV1Alpha1NamespacedMachineAccountErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type PatchIamMiloapisComV1Alpha1NamespacedMachineAccountResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1MachineAccount;
};

export type PatchIamMiloapisComV1Alpha1NamespacedMachineAccountResponse =
  PatchIamMiloapisComV1Alpha1NamespacedMachineAccountResponses[keyof PatchIamMiloapisComV1Alpha1NamespacedMachineAccountResponses];

export type ReplaceIamMiloapisComV1Alpha1NamespacedMachineAccountData = {
  body: ComMiloapisIamV1Alpha1MachineAccount;
  path: {
    /**
     * name of the MachineAccount
     */
    name: string;
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string;
    /**
     * fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
     */
    fieldManager?: string;
    /**
     * fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     */
    fieldValidation?: string;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/namespaces/{namespace}/machineaccounts/{name}';
};

export type ReplaceIamMiloapisComV1Alpha1NamespacedMachineAccountErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type ReplaceIamMiloapisComV1Alpha1NamespacedMachineAccountResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1MachineAccount;
  /**
   * Created
   */
  201: ComMiloapisIamV1Alpha1MachineAccount;
};

export type ReplaceIamMiloapisComV1Alpha1NamespacedMachineAccountResponse =
  ReplaceIamMiloapisComV1Alpha1NamespacedMachineAccountResponses[keyof ReplaceIamMiloapisComV1Alpha1NamespacedMachineAccountResponses];

export type ReadIamMiloapisComV1Alpha1NamespacedMachineAccountStatusData = {
  body?: never;
  path: {
    /**
     * name of the MachineAccount
     */
    name: string;
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersion?: string;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/namespaces/{namespace}/machineaccounts/{name}/status';
};

export type ReadIamMiloapisComV1Alpha1NamespacedMachineAccountStatusErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type ReadIamMiloapisComV1Alpha1NamespacedMachineAccountStatusResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1MachineAccount;
};

export type ReadIamMiloapisComV1Alpha1NamespacedMachineAccountStatusResponse =
  ReadIamMiloapisComV1Alpha1NamespacedMachineAccountStatusResponses[keyof ReadIamMiloapisComV1Alpha1NamespacedMachineAccountStatusResponses];

export type PatchIamMiloapisComV1Alpha1NamespacedMachineAccountStatusData = {
  body: IoK8sApimachineryPkgApisMetaV1Patch;
  path: {
    /**
     * name of the MachineAccount
     */
    name: string;
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string;
    /**
     * fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
     */
    fieldManager?: string;
    /**
     * fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     */
    fieldValidation?: string;
    /**
     * Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.
     */
    force?: boolean;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/namespaces/{namespace}/machineaccounts/{name}/status';
};

export type PatchIamMiloapisComV1Alpha1NamespacedMachineAccountStatusErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type PatchIamMiloapisComV1Alpha1NamespacedMachineAccountStatusResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1MachineAccount;
};

export type PatchIamMiloapisComV1Alpha1NamespacedMachineAccountStatusResponse =
  PatchIamMiloapisComV1Alpha1NamespacedMachineAccountStatusResponses[keyof PatchIamMiloapisComV1Alpha1NamespacedMachineAccountStatusResponses];

export type ReplaceIamMiloapisComV1Alpha1NamespacedMachineAccountStatusData = {
  body: ComMiloapisIamV1Alpha1MachineAccount;
  path: {
    /**
     * name of the MachineAccount
     */
    name: string;
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string;
    /**
     * fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
     */
    fieldManager?: string;
    /**
     * fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     */
    fieldValidation?: string;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/namespaces/{namespace}/machineaccounts/{name}/status';
};

export type ReplaceIamMiloapisComV1Alpha1NamespacedMachineAccountStatusErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type ReplaceIamMiloapisComV1Alpha1NamespacedMachineAccountStatusResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1MachineAccount;
  /**
   * Created
   */
  201: ComMiloapisIamV1Alpha1MachineAccount;
};

export type ReplaceIamMiloapisComV1Alpha1NamespacedMachineAccountStatusResponse =
  ReplaceIamMiloapisComV1Alpha1NamespacedMachineAccountStatusResponses[keyof ReplaceIamMiloapisComV1Alpha1NamespacedMachineAccountStatusResponses];

export type DeleteIamMiloapisComV1Alpha1CollectionNamespacedPolicyBindingData = {
  body?: never;
  path: {
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.
     */
    allowWatchBookmarks?: boolean;
    /**
     * The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
     *
     * This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
     */
    continue?: string;
    /**
     * A selector to restrict the list of returned objects by their fields. Defaults to everything.
     */
    fieldSelector?: string;
    /**
     * A selector to restrict the list of returned objects by their labels. Defaults to everything.
     */
    labelSelector?: string;
    /**
     * limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
     *
     * The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
     */
    limit?: number;
    /**
     * resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersion?: string;
    /**
     * resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersionMatch?: string;
    /**
     * `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
     *
     * When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
     * is interpreted as "data at least as new as the provided `resourceVersion`"
     * and the bookmark event is send when the state is synced
     * to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
     * If `resourceVersion` is unset, this is interpreted as "consistent read" and the
     * bookmark event is send when the state is synced at least to the moment
     * when request started being processed.
     * - `resourceVersionMatch` set to any other value or unset
     * Invalid error is returned.
     *
     * Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise.
     */
    sendInitialEvents?: boolean;
    /**
     * Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
     */
    timeoutSeconds?: number;
    /**
     * Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
     */
    watch?: boolean;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/namespaces/{namespace}/policybindings';
};

export type DeleteIamMiloapisComV1Alpha1CollectionNamespacedPolicyBindingErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type DeleteIamMiloapisComV1Alpha1CollectionNamespacedPolicyBindingResponses = {
  /**
   * OK
   */
  200: IoK8sApimachineryPkgApisMetaV1Status;
};

export type DeleteIamMiloapisComV1Alpha1CollectionNamespacedPolicyBindingResponse =
  DeleteIamMiloapisComV1Alpha1CollectionNamespacedPolicyBindingResponses[keyof DeleteIamMiloapisComV1Alpha1CollectionNamespacedPolicyBindingResponses];

export type ListIamMiloapisComV1Alpha1NamespacedPolicyBindingData = {
  body?: never;
  path: {
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.
     */
    allowWatchBookmarks?: boolean;
    /**
     * The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
     *
     * This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
     */
    continue?: string;
    /**
     * A selector to restrict the list of returned objects by their fields. Defaults to everything.
     */
    fieldSelector?: string;
    /**
     * A selector to restrict the list of returned objects by their labels. Defaults to everything.
     */
    labelSelector?: string;
    /**
     * limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
     *
     * The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
     */
    limit?: number;
    /**
     * resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersion?: string;
    /**
     * resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersionMatch?: string;
    /**
     * `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
     *
     * When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
     * is interpreted as "data at least as new as the provided `resourceVersion`"
     * and the bookmark event is send when the state is synced
     * to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
     * If `resourceVersion` is unset, this is interpreted as "consistent read" and the
     * bookmark event is send when the state is synced at least to the moment
     * when request started being processed.
     * - `resourceVersionMatch` set to any other value or unset
     * Invalid error is returned.
     *
     * Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise.
     */
    sendInitialEvents?: boolean;
    /**
     * Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
     */
    timeoutSeconds?: number;
    /**
     * Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
     */
    watch?: boolean;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/namespaces/{namespace}/policybindings';
};

export type ListIamMiloapisComV1Alpha1NamespacedPolicyBindingErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type ListIamMiloapisComV1Alpha1NamespacedPolicyBindingResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1PolicyBindingList;
};

export type ListIamMiloapisComV1Alpha1NamespacedPolicyBindingResponse =
  ListIamMiloapisComV1Alpha1NamespacedPolicyBindingResponses[keyof ListIamMiloapisComV1Alpha1NamespacedPolicyBindingResponses];

export type CreateIamMiloapisComV1Alpha1NamespacedPolicyBindingData = {
  body: ComMiloapisIamV1Alpha1PolicyBinding;
  path: {
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string;
    /**
     * fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
     */
    fieldManager?: string;
    /**
     * fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     */
    fieldValidation?: string;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/namespaces/{namespace}/policybindings';
};

export type CreateIamMiloapisComV1Alpha1NamespacedPolicyBindingErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type CreateIamMiloapisComV1Alpha1NamespacedPolicyBindingResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1PolicyBinding;
  /**
   * Created
   */
  201: ComMiloapisIamV1Alpha1PolicyBinding;
  /**
   * Accepted
   */
  202: ComMiloapisIamV1Alpha1PolicyBinding;
};

export type CreateIamMiloapisComV1Alpha1NamespacedPolicyBindingResponse =
  CreateIamMiloapisComV1Alpha1NamespacedPolicyBindingResponses[keyof CreateIamMiloapisComV1Alpha1NamespacedPolicyBindingResponses];

export type DeleteIamMiloapisComV1Alpha1NamespacedPolicyBindingData = {
  body?: IoK8sApimachineryPkgApisMetaV1DeleteOptions;
  path: {
    /**
     * name of the PolicyBinding
     */
    name: string;
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string;
    /**
     * The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
     */
    gracePeriodSeconds?: number;
    /**
     * if set to true, it will trigger an unsafe deletion of the resource in case the normal deletion flow fails with a corrupt object error. A resource is considered corrupt if it can not be retrieved from the underlying storage successfully because of a) its data can not be transformed e.g. decryption failure, or b) it fails to decode into an object. NOTE: unsafe deletion ignores finalizer constraints, skips precondition checks, and removes the object from the storage. WARNING: This may potentially break the cluster if the workload associated with the resource being unsafe-deleted relies on normal deletion flow. Use only if you REALLY know what you are doing. The default value is false, and the user must opt in to enable it
     */
    ignoreStoreReadErrorWithClusterBreakingPotential?: boolean;
    /**
     * Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
     */
    orphanDependents?: boolean;
    /**
     * Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
     */
    propagationPolicy?: string;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/namespaces/{namespace}/policybindings/{name}';
};

export type DeleteIamMiloapisComV1Alpha1NamespacedPolicyBindingErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type DeleteIamMiloapisComV1Alpha1NamespacedPolicyBindingResponses = {
  /**
   * OK
   */
  200: IoK8sApimachineryPkgApisMetaV1Status;
  /**
   * Accepted
   */
  202: IoK8sApimachineryPkgApisMetaV1Status;
};

export type DeleteIamMiloapisComV1Alpha1NamespacedPolicyBindingResponse =
  DeleteIamMiloapisComV1Alpha1NamespacedPolicyBindingResponses[keyof DeleteIamMiloapisComV1Alpha1NamespacedPolicyBindingResponses];

export type ReadIamMiloapisComV1Alpha1NamespacedPolicyBindingData = {
  body?: never;
  path: {
    /**
     * name of the PolicyBinding
     */
    name: string;
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersion?: string;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/namespaces/{namespace}/policybindings/{name}';
};

export type ReadIamMiloapisComV1Alpha1NamespacedPolicyBindingErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type ReadIamMiloapisComV1Alpha1NamespacedPolicyBindingResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1PolicyBinding;
};

export type ReadIamMiloapisComV1Alpha1NamespacedPolicyBindingResponse =
  ReadIamMiloapisComV1Alpha1NamespacedPolicyBindingResponses[keyof ReadIamMiloapisComV1Alpha1NamespacedPolicyBindingResponses];

export type PatchIamMiloapisComV1Alpha1NamespacedPolicyBindingData = {
  body: IoK8sApimachineryPkgApisMetaV1Patch;
  path: {
    /**
     * name of the PolicyBinding
     */
    name: string;
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string;
    /**
     * fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
     */
    fieldManager?: string;
    /**
     * fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     */
    fieldValidation?: string;
    /**
     * Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.
     */
    force?: boolean;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/namespaces/{namespace}/policybindings/{name}';
};

export type PatchIamMiloapisComV1Alpha1NamespacedPolicyBindingErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type PatchIamMiloapisComV1Alpha1NamespacedPolicyBindingResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1PolicyBinding;
};

export type PatchIamMiloapisComV1Alpha1NamespacedPolicyBindingResponse =
  PatchIamMiloapisComV1Alpha1NamespacedPolicyBindingResponses[keyof PatchIamMiloapisComV1Alpha1NamespacedPolicyBindingResponses];

export type ReplaceIamMiloapisComV1Alpha1NamespacedPolicyBindingData = {
  body: ComMiloapisIamV1Alpha1PolicyBinding;
  path: {
    /**
     * name of the PolicyBinding
     */
    name: string;
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string;
    /**
     * fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
     */
    fieldManager?: string;
    /**
     * fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     */
    fieldValidation?: string;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/namespaces/{namespace}/policybindings/{name}';
};

export type ReplaceIamMiloapisComV1Alpha1NamespacedPolicyBindingErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type ReplaceIamMiloapisComV1Alpha1NamespacedPolicyBindingResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1PolicyBinding;
  /**
   * Created
   */
  201: ComMiloapisIamV1Alpha1PolicyBinding;
};

export type ReplaceIamMiloapisComV1Alpha1NamespacedPolicyBindingResponse =
  ReplaceIamMiloapisComV1Alpha1NamespacedPolicyBindingResponses[keyof ReplaceIamMiloapisComV1Alpha1NamespacedPolicyBindingResponses];

export type ReadIamMiloapisComV1Alpha1NamespacedPolicyBindingStatusData = {
  body?: never;
  path: {
    /**
     * name of the PolicyBinding
     */
    name: string;
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersion?: string;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/namespaces/{namespace}/policybindings/{name}/status';
};

export type ReadIamMiloapisComV1Alpha1NamespacedPolicyBindingStatusErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type ReadIamMiloapisComV1Alpha1NamespacedPolicyBindingStatusResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1PolicyBinding;
};

export type ReadIamMiloapisComV1Alpha1NamespacedPolicyBindingStatusResponse =
  ReadIamMiloapisComV1Alpha1NamespacedPolicyBindingStatusResponses[keyof ReadIamMiloapisComV1Alpha1NamespacedPolicyBindingStatusResponses];

export type PatchIamMiloapisComV1Alpha1NamespacedPolicyBindingStatusData = {
  body: IoK8sApimachineryPkgApisMetaV1Patch;
  path: {
    /**
     * name of the PolicyBinding
     */
    name: string;
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string;
    /**
     * fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
     */
    fieldManager?: string;
    /**
     * fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     */
    fieldValidation?: string;
    /**
     * Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.
     */
    force?: boolean;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/namespaces/{namespace}/policybindings/{name}/status';
};

export type PatchIamMiloapisComV1Alpha1NamespacedPolicyBindingStatusErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type PatchIamMiloapisComV1Alpha1NamespacedPolicyBindingStatusResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1PolicyBinding;
};

export type PatchIamMiloapisComV1Alpha1NamespacedPolicyBindingStatusResponse =
  PatchIamMiloapisComV1Alpha1NamespacedPolicyBindingStatusResponses[keyof PatchIamMiloapisComV1Alpha1NamespacedPolicyBindingStatusResponses];

export type ReplaceIamMiloapisComV1Alpha1NamespacedPolicyBindingStatusData = {
  body: ComMiloapisIamV1Alpha1PolicyBinding;
  path: {
    /**
     * name of the PolicyBinding
     */
    name: string;
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string;
    /**
     * fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
     */
    fieldManager?: string;
    /**
     * fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     */
    fieldValidation?: string;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/namespaces/{namespace}/policybindings/{name}/status';
};

export type ReplaceIamMiloapisComV1Alpha1NamespacedPolicyBindingStatusErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type ReplaceIamMiloapisComV1Alpha1NamespacedPolicyBindingStatusResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1PolicyBinding;
  /**
   * Created
   */
  201: ComMiloapisIamV1Alpha1PolicyBinding;
};

export type ReplaceIamMiloapisComV1Alpha1NamespacedPolicyBindingStatusResponse =
  ReplaceIamMiloapisComV1Alpha1NamespacedPolicyBindingStatusResponses[keyof ReplaceIamMiloapisComV1Alpha1NamespacedPolicyBindingStatusResponses];

export type DeleteIamMiloapisComV1Alpha1CollectionNamespacedRoleData = {
  body?: never;
  path: {
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.
     */
    allowWatchBookmarks?: boolean;
    /**
     * The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
     *
     * This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
     */
    continue?: string;
    /**
     * A selector to restrict the list of returned objects by their fields. Defaults to everything.
     */
    fieldSelector?: string;
    /**
     * A selector to restrict the list of returned objects by their labels. Defaults to everything.
     */
    labelSelector?: string;
    /**
     * limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
     *
     * The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
     */
    limit?: number;
    /**
     * resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersion?: string;
    /**
     * resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersionMatch?: string;
    /**
     * `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
     *
     * When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
     * is interpreted as "data at least as new as the provided `resourceVersion`"
     * and the bookmark event is send when the state is synced
     * to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
     * If `resourceVersion` is unset, this is interpreted as "consistent read" and the
     * bookmark event is send when the state is synced at least to the moment
     * when request started being processed.
     * - `resourceVersionMatch` set to any other value or unset
     * Invalid error is returned.
     *
     * Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise.
     */
    sendInitialEvents?: boolean;
    /**
     * Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
     */
    timeoutSeconds?: number;
    /**
     * Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
     */
    watch?: boolean;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/namespaces/{namespace}/roles';
};

export type DeleteIamMiloapisComV1Alpha1CollectionNamespacedRoleErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type DeleteIamMiloapisComV1Alpha1CollectionNamespacedRoleResponses = {
  /**
   * OK
   */
  200: IoK8sApimachineryPkgApisMetaV1Status;
};

export type DeleteIamMiloapisComV1Alpha1CollectionNamespacedRoleResponse =
  DeleteIamMiloapisComV1Alpha1CollectionNamespacedRoleResponses[keyof DeleteIamMiloapisComV1Alpha1CollectionNamespacedRoleResponses];

export type ListIamMiloapisComV1Alpha1NamespacedRoleData = {
  body?: never;
  path: {
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.
     */
    allowWatchBookmarks?: boolean;
    /**
     * The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
     *
     * This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
     */
    continue?: string;
    /**
     * A selector to restrict the list of returned objects by their fields. Defaults to everything.
     */
    fieldSelector?: string;
    /**
     * A selector to restrict the list of returned objects by their labels. Defaults to everything.
     */
    labelSelector?: string;
    /**
     * limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
     *
     * The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
     */
    limit?: number;
    /**
     * resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersion?: string;
    /**
     * resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersionMatch?: string;
    /**
     * `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
     *
     * When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
     * is interpreted as "data at least as new as the provided `resourceVersion`"
     * and the bookmark event is send when the state is synced
     * to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
     * If `resourceVersion` is unset, this is interpreted as "consistent read" and the
     * bookmark event is send when the state is synced at least to the moment
     * when request started being processed.
     * - `resourceVersionMatch` set to any other value or unset
     * Invalid error is returned.
     *
     * Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise.
     */
    sendInitialEvents?: boolean;
    /**
     * Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
     */
    timeoutSeconds?: number;
    /**
     * Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
     */
    watch?: boolean;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/namespaces/{namespace}/roles';
};

export type ListIamMiloapisComV1Alpha1NamespacedRoleErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type ListIamMiloapisComV1Alpha1NamespacedRoleResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1RoleList;
};

export type ListIamMiloapisComV1Alpha1NamespacedRoleResponse =
  ListIamMiloapisComV1Alpha1NamespacedRoleResponses[keyof ListIamMiloapisComV1Alpha1NamespacedRoleResponses];

export type CreateIamMiloapisComV1Alpha1NamespacedRoleData = {
  body: ComMiloapisIamV1Alpha1Role;
  path: {
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string;
    /**
     * fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
     */
    fieldManager?: string;
    /**
     * fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     */
    fieldValidation?: string;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/namespaces/{namespace}/roles';
};

export type CreateIamMiloapisComV1Alpha1NamespacedRoleErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type CreateIamMiloapisComV1Alpha1NamespacedRoleResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1Role;
  /**
   * Created
   */
  201: ComMiloapisIamV1Alpha1Role;
  /**
   * Accepted
   */
  202: ComMiloapisIamV1Alpha1Role;
};

export type CreateIamMiloapisComV1Alpha1NamespacedRoleResponse =
  CreateIamMiloapisComV1Alpha1NamespacedRoleResponses[keyof CreateIamMiloapisComV1Alpha1NamespacedRoleResponses];

export type DeleteIamMiloapisComV1Alpha1NamespacedRoleData = {
  body?: IoK8sApimachineryPkgApisMetaV1DeleteOptions;
  path: {
    /**
     * name of the Role
     */
    name: string;
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string;
    /**
     * The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
     */
    gracePeriodSeconds?: number;
    /**
     * if set to true, it will trigger an unsafe deletion of the resource in case the normal deletion flow fails with a corrupt object error. A resource is considered corrupt if it can not be retrieved from the underlying storage successfully because of a) its data can not be transformed e.g. decryption failure, or b) it fails to decode into an object. NOTE: unsafe deletion ignores finalizer constraints, skips precondition checks, and removes the object from the storage. WARNING: This may potentially break the cluster if the workload associated with the resource being unsafe-deleted relies on normal deletion flow. Use only if you REALLY know what you are doing. The default value is false, and the user must opt in to enable it
     */
    ignoreStoreReadErrorWithClusterBreakingPotential?: boolean;
    /**
     * Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
     */
    orphanDependents?: boolean;
    /**
     * Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
     */
    propagationPolicy?: string;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/namespaces/{namespace}/roles/{name}';
};

export type DeleteIamMiloapisComV1Alpha1NamespacedRoleErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type DeleteIamMiloapisComV1Alpha1NamespacedRoleResponses = {
  /**
   * OK
   */
  200: IoK8sApimachineryPkgApisMetaV1Status;
  /**
   * Accepted
   */
  202: IoK8sApimachineryPkgApisMetaV1Status;
};

export type DeleteIamMiloapisComV1Alpha1NamespacedRoleResponse =
  DeleteIamMiloapisComV1Alpha1NamespacedRoleResponses[keyof DeleteIamMiloapisComV1Alpha1NamespacedRoleResponses];

export type ReadIamMiloapisComV1Alpha1NamespacedRoleData = {
  body?: never;
  path: {
    /**
     * name of the Role
     */
    name: string;
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersion?: string;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/namespaces/{namespace}/roles/{name}';
};

export type ReadIamMiloapisComV1Alpha1NamespacedRoleErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type ReadIamMiloapisComV1Alpha1NamespacedRoleResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1Role;
};

export type ReadIamMiloapisComV1Alpha1NamespacedRoleResponse =
  ReadIamMiloapisComV1Alpha1NamespacedRoleResponses[keyof ReadIamMiloapisComV1Alpha1NamespacedRoleResponses];

export type PatchIamMiloapisComV1Alpha1NamespacedRoleData = {
  body: IoK8sApimachineryPkgApisMetaV1Patch;
  path: {
    /**
     * name of the Role
     */
    name: string;
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string;
    /**
     * fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
     */
    fieldManager?: string;
    /**
     * fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     */
    fieldValidation?: string;
    /**
     * Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.
     */
    force?: boolean;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/namespaces/{namespace}/roles/{name}';
};

export type PatchIamMiloapisComV1Alpha1NamespacedRoleErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type PatchIamMiloapisComV1Alpha1NamespacedRoleResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1Role;
};

export type PatchIamMiloapisComV1Alpha1NamespacedRoleResponse =
  PatchIamMiloapisComV1Alpha1NamespacedRoleResponses[keyof PatchIamMiloapisComV1Alpha1NamespacedRoleResponses];

export type ReplaceIamMiloapisComV1Alpha1NamespacedRoleData = {
  body: ComMiloapisIamV1Alpha1Role;
  path: {
    /**
     * name of the Role
     */
    name: string;
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string;
    /**
     * fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
     */
    fieldManager?: string;
    /**
     * fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     */
    fieldValidation?: string;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/namespaces/{namespace}/roles/{name}';
};

export type ReplaceIamMiloapisComV1Alpha1NamespacedRoleErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type ReplaceIamMiloapisComV1Alpha1NamespacedRoleResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1Role;
  /**
   * Created
   */
  201: ComMiloapisIamV1Alpha1Role;
};

export type ReplaceIamMiloapisComV1Alpha1NamespacedRoleResponse =
  ReplaceIamMiloapisComV1Alpha1NamespacedRoleResponses[keyof ReplaceIamMiloapisComV1Alpha1NamespacedRoleResponses];

export type ReadIamMiloapisComV1Alpha1NamespacedRoleStatusData = {
  body?: never;
  path: {
    /**
     * name of the Role
     */
    name: string;
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersion?: string;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/namespaces/{namespace}/roles/{name}/status';
};

export type ReadIamMiloapisComV1Alpha1NamespacedRoleStatusErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type ReadIamMiloapisComV1Alpha1NamespacedRoleStatusResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1Role;
};

export type ReadIamMiloapisComV1Alpha1NamespacedRoleStatusResponse =
  ReadIamMiloapisComV1Alpha1NamespacedRoleStatusResponses[keyof ReadIamMiloapisComV1Alpha1NamespacedRoleStatusResponses];

export type PatchIamMiloapisComV1Alpha1NamespacedRoleStatusData = {
  body: IoK8sApimachineryPkgApisMetaV1Patch;
  path: {
    /**
     * name of the Role
     */
    name: string;
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string;
    /**
     * fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
     */
    fieldManager?: string;
    /**
     * fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     */
    fieldValidation?: string;
    /**
     * Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.
     */
    force?: boolean;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/namespaces/{namespace}/roles/{name}/status';
};

export type PatchIamMiloapisComV1Alpha1NamespacedRoleStatusErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type PatchIamMiloapisComV1Alpha1NamespacedRoleStatusResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1Role;
};

export type PatchIamMiloapisComV1Alpha1NamespacedRoleStatusResponse =
  PatchIamMiloapisComV1Alpha1NamespacedRoleStatusResponses[keyof PatchIamMiloapisComV1Alpha1NamespacedRoleStatusResponses];

export type ReplaceIamMiloapisComV1Alpha1NamespacedRoleStatusData = {
  body: ComMiloapisIamV1Alpha1Role;
  path: {
    /**
     * name of the Role
     */
    name: string;
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string;
    /**
     * fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
     */
    fieldManager?: string;
    /**
     * fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     */
    fieldValidation?: string;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/namespaces/{namespace}/roles/{name}/status';
};

export type ReplaceIamMiloapisComV1Alpha1NamespacedRoleStatusErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type ReplaceIamMiloapisComV1Alpha1NamespacedRoleStatusResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1Role;
  /**
   * Created
   */
  201: ComMiloapisIamV1Alpha1Role;
};

export type ReplaceIamMiloapisComV1Alpha1NamespacedRoleStatusResponse =
  ReplaceIamMiloapisComV1Alpha1NamespacedRoleStatusResponses[keyof ReplaceIamMiloapisComV1Alpha1NamespacedRoleStatusResponses];

export type DeleteIamMiloapisComV1Alpha1CollectionNamespacedUserInvitationData = {
  body?: never;
  path: {
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.
     */
    allowWatchBookmarks?: boolean;
    /**
     * The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
     *
     * This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
     */
    continue?: string;
    /**
     * A selector to restrict the list of returned objects by their fields. Defaults to everything.
     */
    fieldSelector?: string;
    /**
     * A selector to restrict the list of returned objects by their labels. Defaults to everything.
     */
    labelSelector?: string;
    /**
     * limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
     *
     * The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
     */
    limit?: number;
    /**
     * resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersion?: string;
    /**
     * resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersionMatch?: string;
    /**
     * `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
     *
     * When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
     * is interpreted as "data at least as new as the provided `resourceVersion`"
     * and the bookmark event is send when the state is synced
     * to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
     * If `resourceVersion` is unset, this is interpreted as "consistent read" and the
     * bookmark event is send when the state is synced at least to the moment
     * when request started being processed.
     * - `resourceVersionMatch` set to any other value or unset
     * Invalid error is returned.
     *
     * Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise.
     */
    sendInitialEvents?: boolean;
    /**
     * Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
     */
    timeoutSeconds?: number;
    /**
     * Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
     */
    watch?: boolean;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/namespaces/{namespace}/userinvitations';
};

export type DeleteIamMiloapisComV1Alpha1CollectionNamespacedUserInvitationErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type DeleteIamMiloapisComV1Alpha1CollectionNamespacedUserInvitationResponses = {
  /**
   * OK
   */
  200: IoK8sApimachineryPkgApisMetaV1Status;
};

export type DeleteIamMiloapisComV1Alpha1CollectionNamespacedUserInvitationResponse =
  DeleteIamMiloapisComV1Alpha1CollectionNamespacedUserInvitationResponses[keyof DeleteIamMiloapisComV1Alpha1CollectionNamespacedUserInvitationResponses];

export type ListIamMiloapisComV1Alpha1NamespacedUserInvitationData = {
  body?: never;
  path: {
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.
     */
    allowWatchBookmarks?: boolean;
    /**
     * The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
     *
     * This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
     */
    continue?: string;
    /**
     * A selector to restrict the list of returned objects by their fields. Defaults to everything.
     */
    fieldSelector?: string;
    /**
     * A selector to restrict the list of returned objects by their labels. Defaults to everything.
     */
    labelSelector?: string;
    /**
     * limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
     *
     * The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
     */
    limit?: number;
    /**
     * resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersion?: string;
    /**
     * resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersionMatch?: string;
    /**
     * `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
     *
     * When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
     * is interpreted as "data at least as new as the provided `resourceVersion`"
     * and the bookmark event is send when the state is synced
     * to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
     * If `resourceVersion` is unset, this is interpreted as "consistent read" and the
     * bookmark event is send when the state is synced at least to the moment
     * when request started being processed.
     * - `resourceVersionMatch` set to any other value or unset
     * Invalid error is returned.
     *
     * Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise.
     */
    sendInitialEvents?: boolean;
    /**
     * Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
     */
    timeoutSeconds?: number;
    /**
     * Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
     */
    watch?: boolean;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/namespaces/{namespace}/userinvitations';
};

export type ListIamMiloapisComV1Alpha1NamespacedUserInvitationErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type ListIamMiloapisComV1Alpha1NamespacedUserInvitationResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1UserInvitationList;
};

export type ListIamMiloapisComV1Alpha1NamespacedUserInvitationResponse =
  ListIamMiloapisComV1Alpha1NamespacedUserInvitationResponses[keyof ListIamMiloapisComV1Alpha1NamespacedUserInvitationResponses];

export type CreateIamMiloapisComV1Alpha1NamespacedUserInvitationData = {
  body: ComMiloapisIamV1Alpha1UserInvitation;
  path: {
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string;
    /**
     * fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
     */
    fieldManager?: string;
    /**
     * fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     */
    fieldValidation?: string;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/namespaces/{namespace}/userinvitations';
};

export type CreateIamMiloapisComV1Alpha1NamespacedUserInvitationErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type CreateIamMiloapisComV1Alpha1NamespacedUserInvitationResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1UserInvitation;
  /**
   * Created
   */
  201: ComMiloapisIamV1Alpha1UserInvitation;
  /**
   * Accepted
   */
  202: ComMiloapisIamV1Alpha1UserInvitation;
};

export type CreateIamMiloapisComV1Alpha1NamespacedUserInvitationResponse =
  CreateIamMiloapisComV1Alpha1NamespacedUserInvitationResponses[keyof CreateIamMiloapisComV1Alpha1NamespacedUserInvitationResponses];

export type DeleteIamMiloapisComV1Alpha1NamespacedUserInvitationData = {
  body?: IoK8sApimachineryPkgApisMetaV1DeleteOptions;
  path: {
    /**
     * name of the UserInvitation
     */
    name: string;
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string;
    /**
     * The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
     */
    gracePeriodSeconds?: number;
    /**
     * if set to true, it will trigger an unsafe deletion of the resource in case the normal deletion flow fails with a corrupt object error. A resource is considered corrupt if it can not be retrieved from the underlying storage successfully because of a) its data can not be transformed e.g. decryption failure, or b) it fails to decode into an object. NOTE: unsafe deletion ignores finalizer constraints, skips precondition checks, and removes the object from the storage. WARNING: This may potentially break the cluster if the workload associated with the resource being unsafe-deleted relies on normal deletion flow. Use only if you REALLY know what you are doing. The default value is false, and the user must opt in to enable it
     */
    ignoreStoreReadErrorWithClusterBreakingPotential?: boolean;
    /**
     * Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
     */
    orphanDependents?: boolean;
    /**
     * Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
     */
    propagationPolicy?: string;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/namespaces/{namespace}/userinvitations/{name}';
};

export type DeleteIamMiloapisComV1Alpha1NamespacedUserInvitationErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type DeleteIamMiloapisComV1Alpha1NamespacedUserInvitationResponses = {
  /**
   * OK
   */
  200: IoK8sApimachineryPkgApisMetaV1Status;
  /**
   * Accepted
   */
  202: IoK8sApimachineryPkgApisMetaV1Status;
};

export type DeleteIamMiloapisComV1Alpha1NamespacedUserInvitationResponse =
  DeleteIamMiloapisComV1Alpha1NamespacedUserInvitationResponses[keyof DeleteIamMiloapisComV1Alpha1NamespacedUserInvitationResponses];

export type ReadIamMiloapisComV1Alpha1NamespacedUserInvitationData = {
  body?: never;
  path: {
    /**
     * name of the UserInvitation
     */
    name: string;
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersion?: string;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/namespaces/{namespace}/userinvitations/{name}';
};

export type ReadIamMiloapisComV1Alpha1NamespacedUserInvitationErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type ReadIamMiloapisComV1Alpha1NamespacedUserInvitationResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1UserInvitation;
};

export type ReadIamMiloapisComV1Alpha1NamespacedUserInvitationResponse =
  ReadIamMiloapisComV1Alpha1NamespacedUserInvitationResponses[keyof ReadIamMiloapisComV1Alpha1NamespacedUserInvitationResponses];

export type PatchIamMiloapisComV1Alpha1NamespacedUserInvitationData = {
  body: IoK8sApimachineryPkgApisMetaV1Patch;
  path: {
    /**
     * name of the UserInvitation
     */
    name: string;
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string;
    /**
     * fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
     */
    fieldManager?: string;
    /**
     * fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     */
    fieldValidation?: string;
    /**
     * Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.
     */
    force?: boolean;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/namespaces/{namespace}/userinvitations/{name}';
};

export type PatchIamMiloapisComV1Alpha1NamespacedUserInvitationErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type PatchIamMiloapisComV1Alpha1NamespacedUserInvitationResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1UserInvitation;
};

export type PatchIamMiloapisComV1Alpha1NamespacedUserInvitationResponse =
  PatchIamMiloapisComV1Alpha1NamespacedUserInvitationResponses[keyof PatchIamMiloapisComV1Alpha1NamespacedUserInvitationResponses];

export type ReplaceIamMiloapisComV1Alpha1NamespacedUserInvitationData = {
  body: ComMiloapisIamV1Alpha1UserInvitation;
  path: {
    /**
     * name of the UserInvitation
     */
    name: string;
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string;
    /**
     * fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
     */
    fieldManager?: string;
    /**
     * fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     */
    fieldValidation?: string;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/namespaces/{namespace}/userinvitations/{name}';
};

export type ReplaceIamMiloapisComV1Alpha1NamespacedUserInvitationErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type ReplaceIamMiloapisComV1Alpha1NamespacedUserInvitationResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1UserInvitation;
  /**
   * Created
   */
  201: ComMiloapisIamV1Alpha1UserInvitation;
};

export type ReplaceIamMiloapisComV1Alpha1NamespacedUserInvitationResponse =
  ReplaceIamMiloapisComV1Alpha1NamespacedUserInvitationResponses[keyof ReplaceIamMiloapisComV1Alpha1NamespacedUserInvitationResponses];

export type ReadIamMiloapisComV1Alpha1NamespacedUserInvitationStatusData = {
  body?: never;
  path: {
    /**
     * name of the UserInvitation
     */
    name: string;
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersion?: string;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/namespaces/{namespace}/userinvitations/{name}/status';
};

export type ReadIamMiloapisComV1Alpha1NamespacedUserInvitationStatusErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type ReadIamMiloapisComV1Alpha1NamespacedUserInvitationStatusResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1UserInvitation;
};

export type ReadIamMiloapisComV1Alpha1NamespacedUserInvitationStatusResponse =
  ReadIamMiloapisComV1Alpha1NamespacedUserInvitationStatusResponses[keyof ReadIamMiloapisComV1Alpha1NamespacedUserInvitationStatusResponses];

export type PatchIamMiloapisComV1Alpha1NamespacedUserInvitationStatusData = {
  body: IoK8sApimachineryPkgApisMetaV1Patch;
  path: {
    /**
     * name of the UserInvitation
     */
    name: string;
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string;
    /**
     * fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
     */
    fieldManager?: string;
    /**
     * fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     */
    fieldValidation?: string;
    /**
     * Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.
     */
    force?: boolean;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/namespaces/{namespace}/userinvitations/{name}/status';
};

export type PatchIamMiloapisComV1Alpha1NamespacedUserInvitationStatusErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type PatchIamMiloapisComV1Alpha1NamespacedUserInvitationStatusResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1UserInvitation;
};

export type PatchIamMiloapisComV1Alpha1NamespacedUserInvitationStatusResponse =
  PatchIamMiloapisComV1Alpha1NamespacedUserInvitationStatusResponses[keyof PatchIamMiloapisComV1Alpha1NamespacedUserInvitationStatusResponses];

export type ReplaceIamMiloapisComV1Alpha1NamespacedUserInvitationStatusData = {
  body: ComMiloapisIamV1Alpha1UserInvitation;
  path: {
    /**
     * name of the UserInvitation
     */
    name: string;
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string;
    /**
     * fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
     */
    fieldManager?: string;
    /**
     * fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     */
    fieldValidation?: string;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/namespaces/{namespace}/userinvitations/{name}/status';
};

export type ReplaceIamMiloapisComV1Alpha1NamespacedUserInvitationStatusErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type ReplaceIamMiloapisComV1Alpha1NamespacedUserInvitationStatusResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1UserInvitation;
  /**
   * Created
   */
  201: ComMiloapisIamV1Alpha1UserInvitation;
};

export type ReplaceIamMiloapisComV1Alpha1NamespacedUserInvitationStatusResponse =
  ReplaceIamMiloapisComV1Alpha1NamespacedUserInvitationStatusResponses[keyof ReplaceIamMiloapisComV1Alpha1NamespacedUserInvitationStatusResponses];

export type ListIamMiloapisComV1Alpha1PolicyBindingForAllNamespacesData = {
  body?: never;
  path?: never;
  query?: {
    /**
     * allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.
     */
    allowWatchBookmarks?: boolean;
    /**
     * The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
     *
     * This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
     */
    continue?: string;
    /**
     * A selector to restrict the list of returned objects by their fields. Defaults to everything.
     */
    fieldSelector?: string;
    /**
     * A selector to restrict the list of returned objects by their labels. Defaults to everything.
     */
    labelSelector?: string;
    /**
     * limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
     *
     * The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
     */
    limit?: number;
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersion?: string;
    /**
     * resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersionMatch?: string;
    /**
     * `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
     *
     * When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
     * is interpreted as "data at least as new as the provided `resourceVersion`"
     * and the bookmark event is send when the state is synced
     * to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
     * If `resourceVersion` is unset, this is interpreted as "consistent read" and the
     * bookmark event is send when the state is synced at least to the moment
     * when request started being processed.
     * - `resourceVersionMatch` set to any other value or unset
     * Invalid error is returned.
     *
     * Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise.
     */
    sendInitialEvents?: boolean;
    /**
     * Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
     */
    timeoutSeconds?: number;
    /**
     * Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
     */
    watch?: boolean;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/policybindings';
};

export type ListIamMiloapisComV1Alpha1PolicyBindingForAllNamespacesErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type ListIamMiloapisComV1Alpha1PolicyBindingForAllNamespacesResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1PolicyBindingList;
};

export type ListIamMiloapisComV1Alpha1PolicyBindingForAllNamespacesResponse =
  ListIamMiloapisComV1Alpha1PolicyBindingForAllNamespacesResponses[keyof ListIamMiloapisComV1Alpha1PolicyBindingForAllNamespacesResponses];

export type DeleteIamMiloapisComV1Alpha1CollectionProtectedResourceData = {
  body?: never;
  path?: never;
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.
     */
    allowWatchBookmarks?: boolean;
    /**
     * The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
     *
     * This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
     */
    continue?: string;
    /**
     * A selector to restrict the list of returned objects by their fields. Defaults to everything.
     */
    fieldSelector?: string;
    /**
     * A selector to restrict the list of returned objects by their labels. Defaults to everything.
     */
    labelSelector?: string;
    /**
     * limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
     *
     * The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
     */
    limit?: number;
    /**
     * resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersion?: string;
    /**
     * resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersionMatch?: string;
    /**
     * `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
     *
     * When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
     * is interpreted as "data at least as new as the provided `resourceVersion`"
     * and the bookmark event is send when the state is synced
     * to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
     * If `resourceVersion` is unset, this is interpreted as "consistent read" and the
     * bookmark event is send when the state is synced at least to the moment
     * when request started being processed.
     * - `resourceVersionMatch` set to any other value or unset
     * Invalid error is returned.
     *
     * Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise.
     */
    sendInitialEvents?: boolean;
    /**
     * Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
     */
    timeoutSeconds?: number;
    /**
     * Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
     */
    watch?: boolean;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/protectedresources';
};

export type DeleteIamMiloapisComV1Alpha1CollectionProtectedResourceErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type DeleteIamMiloapisComV1Alpha1CollectionProtectedResourceResponses = {
  /**
   * OK
   */
  200: IoK8sApimachineryPkgApisMetaV1Status;
};

export type DeleteIamMiloapisComV1Alpha1CollectionProtectedResourceResponse =
  DeleteIamMiloapisComV1Alpha1CollectionProtectedResourceResponses[keyof DeleteIamMiloapisComV1Alpha1CollectionProtectedResourceResponses];

export type ListIamMiloapisComV1Alpha1ProtectedResourceData = {
  body?: never;
  path?: never;
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.
     */
    allowWatchBookmarks?: boolean;
    /**
     * The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
     *
     * This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
     */
    continue?: string;
    /**
     * A selector to restrict the list of returned objects by their fields. Defaults to everything.
     */
    fieldSelector?: string;
    /**
     * A selector to restrict the list of returned objects by their labels. Defaults to everything.
     */
    labelSelector?: string;
    /**
     * limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
     *
     * The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
     */
    limit?: number;
    /**
     * resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersion?: string;
    /**
     * resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersionMatch?: string;
    /**
     * `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
     *
     * When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
     * is interpreted as "data at least as new as the provided `resourceVersion`"
     * and the bookmark event is send when the state is synced
     * to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
     * If `resourceVersion` is unset, this is interpreted as "consistent read" and the
     * bookmark event is send when the state is synced at least to the moment
     * when request started being processed.
     * - `resourceVersionMatch` set to any other value or unset
     * Invalid error is returned.
     *
     * Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise.
     */
    sendInitialEvents?: boolean;
    /**
     * Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
     */
    timeoutSeconds?: number;
    /**
     * Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
     */
    watch?: boolean;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/protectedresources';
};

export type ListIamMiloapisComV1Alpha1ProtectedResourceErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type ListIamMiloapisComV1Alpha1ProtectedResourceResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1ProtectedResourceList;
};

export type ListIamMiloapisComV1Alpha1ProtectedResourceResponse =
  ListIamMiloapisComV1Alpha1ProtectedResourceResponses[keyof ListIamMiloapisComV1Alpha1ProtectedResourceResponses];

export type CreateIamMiloapisComV1Alpha1ProtectedResourceData = {
  body: ComMiloapisIamV1Alpha1ProtectedResource;
  path?: never;
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string;
    /**
     * fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
     */
    fieldManager?: string;
    /**
     * fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     */
    fieldValidation?: string;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/protectedresources';
};

export type CreateIamMiloapisComV1Alpha1ProtectedResourceErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type CreateIamMiloapisComV1Alpha1ProtectedResourceResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1ProtectedResource;
  /**
   * Created
   */
  201: ComMiloapisIamV1Alpha1ProtectedResource;
  /**
   * Accepted
   */
  202: ComMiloapisIamV1Alpha1ProtectedResource;
};

export type CreateIamMiloapisComV1Alpha1ProtectedResourceResponse =
  CreateIamMiloapisComV1Alpha1ProtectedResourceResponses[keyof CreateIamMiloapisComV1Alpha1ProtectedResourceResponses];

export type DeleteIamMiloapisComV1Alpha1ProtectedResourceData = {
  body?: IoK8sApimachineryPkgApisMetaV1DeleteOptions;
  path: {
    /**
     * name of the ProtectedResource
     */
    name: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string;
    /**
     * The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
     */
    gracePeriodSeconds?: number;
    /**
     * if set to true, it will trigger an unsafe deletion of the resource in case the normal deletion flow fails with a corrupt object error. A resource is considered corrupt if it can not be retrieved from the underlying storage successfully because of a) its data can not be transformed e.g. decryption failure, or b) it fails to decode into an object. NOTE: unsafe deletion ignores finalizer constraints, skips precondition checks, and removes the object from the storage. WARNING: This may potentially break the cluster if the workload associated with the resource being unsafe-deleted relies on normal deletion flow. Use only if you REALLY know what you are doing. The default value is false, and the user must opt in to enable it
     */
    ignoreStoreReadErrorWithClusterBreakingPotential?: boolean;
    /**
     * Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
     */
    orphanDependents?: boolean;
    /**
     * Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
     */
    propagationPolicy?: string;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/protectedresources/{name}';
};

export type DeleteIamMiloapisComV1Alpha1ProtectedResourceErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type DeleteIamMiloapisComV1Alpha1ProtectedResourceResponses = {
  /**
   * OK
   */
  200: IoK8sApimachineryPkgApisMetaV1Status;
  /**
   * Accepted
   */
  202: IoK8sApimachineryPkgApisMetaV1Status;
};

export type DeleteIamMiloapisComV1Alpha1ProtectedResourceResponse =
  DeleteIamMiloapisComV1Alpha1ProtectedResourceResponses[keyof DeleteIamMiloapisComV1Alpha1ProtectedResourceResponses];

export type ReadIamMiloapisComV1Alpha1ProtectedResourceData = {
  body?: never;
  path: {
    /**
     * name of the ProtectedResource
     */
    name: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersion?: string;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/protectedresources/{name}';
};

export type ReadIamMiloapisComV1Alpha1ProtectedResourceErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type ReadIamMiloapisComV1Alpha1ProtectedResourceResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1ProtectedResource;
};

export type ReadIamMiloapisComV1Alpha1ProtectedResourceResponse =
  ReadIamMiloapisComV1Alpha1ProtectedResourceResponses[keyof ReadIamMiloapisComV1Alpha1ProtectedResourceResponses];

export type PatchIamMiloapisComV1Alpha1ProtectedResourceData = {
  body: IoK8sApimachineryPkgApisMetaV1Patch;
  path: {
    /**
     * name of the ProtectedResource
     */
    name: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string;
    /**
     * fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
     */
    fieldManager?: string;
    /**
     * fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     */
    fieldValidation?: string;
    /**
     * Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.
     */
    force?: boolean;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/protectedresources/{name}';
};

export type PatchIamMiloapisComV1Alpha1ProtectedResourceErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type PatchIamMiloapisComV1Alpha1ProtectedResourceResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1ProtectedResource;
};

export type PatchIamMiloapisComV1Alpha1ProtectedResourceResponse =
  PatchIamMiloapisComV1Alpha1ProtectedResourceResponses[keyof PatchIamMiloapisComV1Alpha1ProtectedResourceResponses];

export type ReplaceIamMiloapisComV1Alpha1ProtectedResourceData = {
  body: ComMiloapisIamV1Alpha1ProtectedResource;
  path: {
    /**
     * name of the ProtectedResource
     */
    name: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string;
    /**
     * fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
     */
    fieldManager?: string;
    /**
     * fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     */
    fieldValidation?: string;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/protectedresources/{name}';
};

export type ReplaceIamMiloapisComV1Alpha1ProtectedResourceErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type ReplaceIamMiloapisComV1Alpha1ProtectedResourceResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1ProtectedResource;
  /**
   * Created
   */
  201: ComMiloapisIamV1Alpha1ProtectedResource;
};

export type ReplaceIamMiloapisComV1Alpha1ProtectedResourceResponse =
  ReplaceIamMiloapisComV1Alpha1ProtectedResourceResponses[keyof ReplaceIamMiloapisComV1Alpha1ProtectedResourceResponses];

export type ReadIamMiloapisComV1Alpha1ProtectedResourceStatusData = {
  body?: never;
  path: {
    /**
     * name of the ProtectedResource
     */
    name: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersion?: string;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/protectedresources/{name}/status';
};

export type ReadIamMiloapisComV1Alpha1ProtectedResourceStatusErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type ReadIamMiloapisComV1Alpha1ProtectedResourceStatusResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1ProtectedResource;
};

export type ReadIamMiloapisComV1Alpha1ProtectedResourceStatusResponse =
  ReadIamMiloapisComV1Alpha1ProtectedResourceStatusResponses[keyof ReadIamMiloapisComV1Alpha1ProtectedResourceStatusResponses];

export type PatchIamMiloapisComV1Alpha1ProtectedResourceStatusData = {
  body: IoK8sApimachineryPkgApisMetaV1Patch;
  path: {
    /**
     * name of the ProtectedResource
     */
    name: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string;
    /**
     * fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
     */
    fieldManager?: string;
    /**
     * fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     */
    fieldValidation?: string;
    /**
     * Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.
     */
    force?: boolean;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/protectedresources/{name}/status';
};

export type PatchIamMiloapisComV1Alpha1ProtectedResourceStatusErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type PatchIamMiloapisComV1Alpha1ProtectedResourceStatusResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1ProtectedResource;
};

export type PatchIamMiloapisComV1Alpha1ProtectedResourceStatusResponse =
  PatchIamMiloapisComV1Alpha1ProtectedResourceStatusResponses[keyof PatchIamMiloapisComV1Alpha1ProtectedResourceStatusResponses];

export type ReplaceIamMiloapisComV1Alpha1ProtectedResourceStatusData = {
  body: ComMiloapisIamV1Alpha1ProtectedResource;
  path: {
    /**
     * name of the ProtectedResource
     */
    name: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string;
    /**
     * fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
     */
    fieldManager?: string;
    /**
     * fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     */
    fieldValidation?: string;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/protectedresources/{name}/status';
};

export type ReplaceIamMiloapisComV1Alpha1ProtectedResourceStatusErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type ReplaceIamMiloapisComV1Alpha1ProtectedResourceStatusResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1ProtectedResource;
  /**
   * Created
   */
  201: ComMiloapisIamV1Alpha1ProtectedResource;
};

export type ReplaceIamMiloapisComV1Alpha1ProtectedResourceStatusResponse =
  ReplaceIamMiloapisComV1Alpha1ProtectedResourceStatusResponses[keyof ReplaceIamMiloapisComV1Alpha1ProtectedResourceStatusResponses];

export type ListIamMiloapisComV1Alpha1RoleForAllNamespacesData = {
  body?: never;
  path?: never;
  query?: {
    /**
     * allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.
     */
    allowWatchBookmarks?: boolean;
    /**
     * The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
     *
     * This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
     */
    continue?: string;
    /**
     * A selector to restrict the list of returned objects by their fields. Defaults to everything.
     */
    fieldSelector?: string;
    /**
     * A selector to restrict the list of returned objects by their labels. Defaults to everything.
     */
    labelSelector?: string;
    /**
     * limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
     *
     * The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
     */
    limit?: number;
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersion?: string;
    /**
     * resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersionMatch?: string;
    /**
     * `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
     *
     * When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
     * is interpreted as "data at least as new as the provided `resourceVersion`"
     * and the bookmark event is send when the state is synced
     * to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
     * If `resourceVersion` is unset, this is interpreted as "consistent read" and the
     * bookmark event is send when the state is synced at least to the moment
     * when request started being processed.
     * - `resourceVersionMatch` set to any other value or unset
     * Invalid error is returned.
     *
     * Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise.
     */
    sendInitialEvents?: boolean;
    /**
     * Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
     */
    timeoutSeconds?: number;
    /**
     * Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
     */
    watch?: boolean;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/roles';
};

export type ListIamMiloapisComV1Alpha1RoleForAllNamespacesErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type ListIamMiloapisComV1Alpha1RoleForAllNamespacesResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1RoleList;
};

export type ListIamMiloapisComV1Alpha1RoleForAllNamespacesResponse =
  ListIamMiloapisComV1Alpha1RoleForAllNamespacesResponses[keyof ListIamMiloapisComV1Alpha1RoleForAllNamespacesResponses];

export type DeleteIamMiloapisComV1Alpha1CollectionUserDeactivationData = {
  body?: never;
  path?: never;
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.
     */
    allowWatchBookmarks?: boolean;
    /**
     * The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
     *
     * This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
     */
    continue?: string;
    /**
     * A selector to restrict the list of returned objects by their fields. Defaults to everything.
     */
    fieldSelector?: string;
    /**
     * A selector to restrict the list of returned objects by their labels. Defaults to everything.
     */
    labelSelector?: string;
    /**
     * limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
     *
     * The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
     */
    limit?: number;
    /**
     * resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersion?: string;
    /**
     * resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersionMatch?: string;
    /**
     * `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
     *
     * When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
     * is interpreted as "data at least as new as the provided `resourceVersion`"
     * and the bookmark event is send when the state is synced
     * to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
     * If `resourceVersion` is unset, this is interpreted as "consistent read" and the
     * bookmark event is send when the state is synced at least to the moment
     * when request started being processed.
     * - `resourceVersionMatch` set to any other value or unset
     * Invalid error is returned.
     *
     * Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise.
     */
    sendInitialEvents?: boolean;
    /**
     * Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
     */
    timeoutSeconds?: number;
    /**
     * Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
     */
    watch?: boolean;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/userdeactivations';
};

export type DeleteIamMiloapisComV1Alpha1CollectionUserDeactivationErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type DeleteIamMiloapisComV1Alpha1CollectionUserDeactivationResponses = {
  /**
   * OK
   */
  200: IoK8sApimachineryPkgApisMetaV1Status;
};

export type DeleteIamMiloapisComV1Alpha1CollectionUserDeactivationResponse =
  DeleteIamMiloapisComV1Alpha1CollectionUserDeactivationResponses[keyof DeleteIamMiloapisComV1Alpha1CollectionUserDeactivationResponses];

export type ListIamMiloapisComV1Alpha1UserDeactivationData = {
  body?: never;
  path?: never;
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.
     */
    allowWatchBookmarks?: boolean;
    /**
     * The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
     *
     * This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
     */
    continue?: string;
    /**
     * A selector to restrict the list of returned objects by their fields. Defaults to everything.
     */
    fieldSelector?: string;
    /**
     * A selector to restrict the list of returned objects by their labels. Defaults to everything.
     */
    labelSelector?: string;
    /**
     * limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
     *
     * The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
     */
    limit?: number;
    /**
     * resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersion?: string;
    /**
     * resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersionMatch?: string;
    /**
     * `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
     *
     * When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
     * is interpreted as "data at least as new as the provided `resourceVersion`"
     * and the bookmark event is send when the state is synced
     * to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
     * If `resourceVersion` is unset, this is interpreted as "consistent read" and the
     * bookmark event is send when the state is synced at least to the moment
     * when request started being processed.
     * - `resourceVersionMatch` set to any other value or unset
     * Invalid error is returned.
     *
     * Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise.
     */
    sendInitialEvents?: boolean;
    /**
     * Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
     */
    timeoutSeconds?: number;
    /**
     * Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
     */
    watch?: boolean;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/userdeactivations';
};

export type ListIamMiloapisComV1Alpha1UserDeactivationErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type ListIamMiloapisComV1Alpha1UserDeactivationResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1UserDeactivationList;
};

export type ListIamMiloapisComV1Alpha1UserDeactivationResponse =
  ListIamMiloapisComV1Alpha1UserDeactivationResponses[keyof ListIamMiloapisComV1Alpha1UserDeactivationResponses];

export type CreateIamMiloapisComV1Alpha1UserDeactivationData = {
  body: ComMiloapisIamV1Alpha1UserDeactivation;
  path?: never;
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string;
    /**
     * fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
     */
    fieldManager?: string;
    /**
     * fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     */
    fieldValidation?: string;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/userdeactivations';
};

export type CreateIamMiloapisComV1Alpha1UserDeactivationErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type CreateIamMiloapisComV1Alpha1UserDeactivationResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1UserDeactivation;
  /**
   * Created
   */
  201: ComMiloapisIamV1Alpha1UserDeactivation;
  /**
   * Accepted
   */
  202: ComMiloapisIamV1Alpha1UserDeactivation;
};

export type CreateIamMiloapisComV1Alpha1UserDeactivationResponse =
  CreateIamMiloapisComV1Alpha1UserDeactivationResponses[keyof CreateIamMiloapisComV1Alpha1UserDeactivationResponses];

export type DeleteIamMiloapisComV1Alpha1UserDeactivationData = {
  body?: IoK8sApimachineryPkgApisMetaV1DeleteOptions;
  path: {
    /**
     * name of the UserDeactivation
     */
    name: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string;
    /**
     * The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
     */
    gracePeriodSeconds?: number;
    /**
     * if set to true, it will trigger an unsafe deletion of the resource in case the normal deletion flow fails with a corrupt object error. A resource is considered corrupt if it can not be retrieved from the underlying storage successfully because of a) its data can not be transformed e.g. decryption failure, or b) it fails to decode into an object. NOTE: unsafe deletion ignores finalizer constraints, skips precondition checks, and removes the object from the storage. WARNING: This may potentially break the cluster if the workload associated with the resource being unsafe-deleted relies on normal deletion flow. Use only if you REALLY know what you are doing. The default value is false, and the user must opt in to enable it
     */
    ignoreStoreReadErrorWithClusterBreakingPotential?: boolean;
    /**
     * Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
     */
    orphanDependents?: boolean;
    /**
     * Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
     */
    propagationPolicy?: string;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/userdeactivations/{name}';
};

export type DeleteIamMiloapisComV1Alpha1UserDeactivationErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type DeleteIamMiloapisComV1Alpha1UserDeactivationResponses = {
  /**
   * OK
   */
  200: IoK8sApimachineryPkgApisMetaV1Status;
  /**
   * Accepted
   */
  202: IoK8sApimachineryPkgApisMetaV1Status;
};

export type DeleteIamMiloapisComV1Alpha1UserDeactivationResponse =
  DeleteIamMiloapisComV1Alpha1UserDeactivationResponses[keyof DeleteIamMiloapisComV1Alpha1UserDeactivationResponses];

export type ReadIamMiloapisComV1Alpha1UserDeactivationData = {
  body?: never;
  path: {
    /**
     * name of the UserDeactivation
     */
    name: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersion?: string;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/userdeactivations/{name}';
};

export type ReadIamMiloapisComV1Alpha1UserDeactivationErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type ReadIamMiloapisComV1Alpha1UserDeactivationResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1UserDeactivation;
};

export type ReadIamMiloapisComV1Alpha1UserDeactivationResponse =
  ReadIamMiloapisComV1Alpha1UserDeactivationResponses[keyof ReadIamMiloapisComV1Alpha1UserDeactivationResponses];

export type PatchIamMiloapisComV1Alpha1UserDeactivationData = {
  body: IoK8sApimachineryPkgApisMetaV1Patch;
  path: {
    /**
     * name of the UserDeactivation
     */
    name: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string;
    /**
     * fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
     */
    fieldManager?: string;
    /**
     * fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     */
    fieldValidation?: string;
    /**
     * Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.
     */
    force?: boolean;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/userdeactivations/{name}';
};

export type PatchIamMiloapisComV1Alpha1UserDeactivationErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type PatchIamMiloapisComV1Alpha1UserDeactivationResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1UserDeactivation;
};

export type PatchIamMiloapisComV1Alpha1UserDeactivationResponse =
  PatchIamMiloapisComV1Alpha1UserDeactivationResponses[keyof PatchIamMiloapisComV1Alpha1UserDeactivationResponses];

export type ReplaceIamMiloapisComV1Alpha1UserDeactivationData = {
  body: ComMiloapisIamV1Alpha1UserDeactivation;
  path: {
    /**
     * name of the UserDeactivation
     */
    name: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string;
    /**
     * fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
     */
    fieldManager?: string;
    /**
     * fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     */
    fieldValidation?: string;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/userdeactivations/{name}';
};

export type ReplaceIamMiloapisComV1Alpha1UserDeactivationErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type ReplaceIamMiloapisComV1Alpha1UserDeactivationResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1UserDeactivation;
  /**
   * Created
   */
  201: ComMiloapisIamV1Alpha1UserDeactivation;
};

export type ReplaceIamMiloapisComV1Alpha1UserDeactivationResponse =
  ReplaceIamMiloapisComV1Alpha1UserDeactivationResponses[keyof ReplaceIamMiloapisComV1Alpha1UserDeactivationResponses];

export type ReadIamMiloapisComV1Alpha1UserDeactivationStatusData = {
  body?: never;
  path: {
    /**
     * name of the UserDeactivation
     */
    name: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersion?: string;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/userdeactivations/{name}/status';
};

export type ReadIamMiloapisComV1Alpha1UserDeactivationStatusErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type ReadIamMiloapisComV1Alpha1UserDeactivationStatusResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1UserDeactivation;
};

export type ReadIamMiloapisComV1Alpha1UserDeactivationStatusResponse =
  ReadIamMiloapisComV1Alpha1UserDeactivationStatusResponses[keyof ReadIamMiloapisComV1Alpha1UserDeactivationStatusResponses];

export type PatchIamMiloapisComV1Alpha1UserDeactivationStatusData = {
  body: IoK8sApimachineryPkgApisMetaV1Patch;
  path: {
    /**
     * name of the UserDeactivation
     */
    name: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string;
    /**
     * fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
     */
    fieldManager?: string;
    /**
     * fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     */
    fieldValidation?: string;
    /**
     * Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.
     */
    force?: boolean;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/userdeactivations/{name}/status';
};

export type PatchIamMiloapisComV1Alpha1UserDeactivationStatusErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type PatchIamMiloapisComV1Alpha1UserDeactivationStatusResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1UserDeactivation;
};

export type PatchIamMiloapisComV1Alpha1UserDeactivationStatusResponse =
  PatchIamMiloapisComV1Alpha1UserDeactivationStatusResponses[keyof PatchIamMiloapisComV1Alpha1UserDeactivationStatusResponses];

export type ReplaceIamMiloapisComV1Alpha1UserDeactivationStatusData = {
  body: ComMiloapisIamV1Alpha1UserDeactivation;
  path: {
    /**
     * name of the UserDeactivation
     */
    name: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string;
    /**
     * fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
     */
    fieldManager?: string;
    /**
     * fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     */
    fieldValidation?: string;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/userdeactivations/{name}/status';
};

export type ReplaceIamMiloapisComV1Alpha1UserDeactivationStatusErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type ReplaceIamMiloapisComV1Alpha1UserDeactivationStatusResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1UserDeactivation;
  /**
   * Created
   */
  201: ComMiloapisIamV1Alpha1UserDeactivation;
};

export type ReplaceIamMiloapisComV1Alpha1UserDeactivationStatusResponse =
  ReplaceIamMiloapisComV1Alpha1UserDeactivationStatusResponses[keyof ReplaceIamMiloapisComV1Alpha1UserDeactivationStatusResponses];

export type ListIamMiloapisComV1Alpha1UserInvitationForAllNamespacesData = {
  body?: never;
  path?: never;
  query?: {
    /**
     * allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.
     */
    allowWatchBookmarks?: boolean;
    /**
     * The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
     *
     * This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
     */
    continue?: string;
    /**
     * A selector to restrict the list of returned objects by their fields. Defaults to everything.
     */
    fieldSelector?: string;
    /**
     * A selector to restrict the list of returned objects by their labels. Defaults to everything.
     */
    labelSelector?: string;
    /**
     * limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
     *
     * The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
     */
    limit?: number;
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersion?: string;
    /**
     * resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersionMatch?: string;
    /**
     * `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
     *
     * When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
     * is interpreted as "data at least as new as the provided `resourceVersion`"
     * and the bookmark event is send when the state is synced
     * to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
     * If `resourceVersion` is unset, this is interpreted as "consistent read" and the
     * bookmark event is send when the state is synced at least to the moment
     * when request started being processed.
     * - `resourceVersionMatch` set to any other value or unset
     * Invalid error is returned.
     *
     * Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise.
     */
    sendInitialEvents?: boolean;
    /**
     * Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
     */
    timeoutSeconds?: number;
    /**
     * Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
     */
    watch?: boolean;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/userinvitations';
};

export type ListIamMiloapisComV1Alpha1UserInvitationForAllNamespacesErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type ListIamMiloapisComV1Alpha1UserInvitationForAllNamespacesResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1UserInvitationList;
};

export type ListIamMiloapisComV1Alpha1UserInvitationForAllNamespacesResponse =
  ListIamMiloapisComV1Alpha1UserInvitationForAllNamespacesResponses[keyof ListIamMiloapisComV1Alpha1UserInvitationForAllNamespacesResponses];

export type DeleteIamMiloapisComV1Alpha1CollectionUserPreferenceData = {
  body?: never;
  path?: never;
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.
     */
    allowWatchBookmarks?: boolean;
    /**
     * The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
     *
     * This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
     */
    continue?: string;
    /**
     * A selector to restrict the list of returned objects by their fields. Defaults to everything.
     */
    fieldSelector?: string;
    /**
     * A selector to restrict the list of returned objects by their labels. Defaults to everything.
     */
    labelSelector?: string;
    /**
     * limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
     *
     * The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
     */
    limit?: number;
    /**
     * resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersion?: string;
    /**
     * resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersionMatch?: string;
    /**
     * `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
     *
     * When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
     * is interpreted as "data at least as new as the provided `resourceVersion`"
     * and the bookmark event is send when the state is synced
     * to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
     * If `resourceVersion` is unset, this is interpreted as "consistent read" and the
     * bookmark event is send when the state is synced at least to the moment
     * when request started being processed.
     * - `resourceVersionMatch` set to any other value or unset
     * Invalid error is returned.
     *
     * Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise.
     */
    sendInitialEvents?: boolean;
    /**
     * Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
     */
    timeoutSeconds?: number;
    /**
     * Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
     */
    watch?: boolean;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/userpreferences';
};

export type DeleteIamMiloapisComV1Alpha1CollectionUserPreferenceErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type DeleteIamMiloapisComV1Alpha1CollectionUserPreferenceResponses = {
  /**
   * OK
   */
  200: IoK8sApimachineryPkgApisMetaV1Status;
};

export type DeleteIamMiloapisComV1Alpha1CollectionUserPreferenceResponse =
  DeleteIamMiloapisComV1Alpha1CollectionUserPreferenceResponses[keyof DeleteIamMiloapisComV1Alpha1CollectionUserPreferenceResponses];

export type ListIamMiloapisComV1Alpha1UserPreferenceData = {
  body?: never;
  path?: never;
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.
     */
    allowWatchBookmarks?: boolean;
    /**
     * The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
     *
     * This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
     */
    continue?: string;
    /**
     * A selector to restrict the list of returned objects by their fields. Defaults to everything.
     */
    fieldSelector?: string;
    /**
     * A selector to restrict the list of returned objects by their labels. Defaults to everything.
     */
    labelSelector?: string;
    /**
     * limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
     *
     * The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
     */
    limit?: number;
    /**
     * resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersion?: string;
    /**
     * resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersionMatch?: string;
    /**
     * `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
     *
     * When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
     * is interpreted as "data at least as new as the provided `resourceVersion`"
     * and the bookmark event is send when the state is synced
     * to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
     * If `resourceVersion` is unset, this is interpreted as "consistent read" and the
     * bookmark event is send when the state is synced at least to the moment
     * when request started being processed.
     * - `resourceVersionMatch` set to any other value or unset
     * Invalid error is returned.
     *
     * Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise.
     */
    sendInitialEvents?: boolean;
    /**
     * Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
     */
    timeoutSeconds?: number;
    /**
     * Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
     */
    watch?: boolean;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/userpreferences';
};

export type ListIamMiloapisComV1Alpha1UserPreferenceErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type ListIamMiloapisComV1Alpha1UserPreferenceResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1UserPreferenceList;
};

export type ListIamMiloapisComV1Alpha1UserPreferenceResponse =
  ListIamMiloapisComV1Alpha1UserPreferenceResponses[keyof ListIamMiloapisComV1Alpha1UserPreferenceResponses];

export type CreateIamMiloapisComV1Alpha1UserPreferenceData = {
  body: ComMiloapisIamV1Alpha1UserPreference;
  path?: never;
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string;
    /**
     * fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
     */
    fieldManager?: string;
    /**
     * fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     */
    fieldValidation?: string;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/userpreferences';
};

export type CreateIamMiloapisComV1Alpha1UserPreferenceErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type CreateIamMiloapisComV1Alpha1UserPreferenceResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1UserPreference;
  /**
   * Created
   */
  201: ComMiloapisIamV1Alpha1UserPreference;
  /**
   * Accepted
   */
  202: ComMiloapisIamV1Alpha1UserPreference;
};

export type CreateIamMiloapisComV1Alpha1UserPreferenceResponse =
  CreateIamMiloapisComV1Alpha1UserPreferenceResponses[keyof CreateIamMiloapisComV1Alpha1UserPreferenceResponses];

export type DeleteIamMiloapisComV1Alpha1UserPreferenceData = {
  body?: IoK8sApimachineryPkgApisMetaV1DeleteOptions;
  path: {
    /**
     * name of the UserPreference
     */
    name: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string;
    /**
     * The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
     */
    gracePeriodSeconds?: number;
    /**
     * if set to true, it will trigger an unsafe deletion of the resource in case the normal deletion flow fails with a corrupt object error. A resource is considered corrupt if it can not be retrieved from the underlying storage successfully because of a) its data can not be transformed e.g. decryption failure, or b) it fails to decode into an object. NOTE: unsafe deletion ignores finalizer constraints, skips precondition checks, and removes the object from the storage. WARNING: This may potentially break the cluster if the workload associated with the resource being unsafe-deleted relies on normal deletion flow. Use only if you REALLY know what you are doing. The default value is false, and the user must opt in to enable it
     */
    ignoreStoreReadErrorWithClusterBreakingPotential?: boolean;
    /**
     * Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
     */
    orphanDependents?: boolean;
    /**
     * Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
     */
    propagationPolicy?: string;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/userpreferences/{name}';
};

export type DeleteIamMiloapisComV1Alpha1UserPreferenceErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type DeleteIamMiloapisComV1Alpha1UserPreferenceResponses = {
  /**
   * OK
   */
  200: IoK8sApimachineryPkgApisMetaV1Status;
  /**
   * Accepted
   */
  202: IoK8sApimachineryPkgApisMetaV1Status;
};

export type DeleteIamMiloapisComV1Alpha1UserPreferenceResponse =
  DeleteIamMiloapisComV1Alpha1UserPreferenceResponses[keyof DeleteIamMiloapisComV1Alpha1UserPreferenceResponses];

export type ReadIamMiloapisComV1Alpha1UserPreferenceData = {
  body?: never;
  path: {
    /**
     * name of the UserPreference
     */
    name: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersion?: string;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/userpreferences/{name}';
};

export type ReadIamMiloapisComV1Alpha1UserPreferenceErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type ReadIamMiloapisComV1Alpha1UserPreferenceResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1UserPreference;
};

export type ReadIamMiloapisComV1Alpha1UserPreferenceResponse =
  ReadIamMiloapisComV1Alpha1UserPreferenceResponses[keyof ReadIamMiloapisComV1Alpha1UserPreferenceResponses];

export type PatchIamMiloapisComV1Alpha1UserPreferenceData = {
  body: IoK8sApimachineryPkgApisMetaV1Patch;
  path: {
    /**
     * name of the UserPreference
     */
    name: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string;
    /**
     * fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
     */
    fieldManager?: string;
    /**
     * fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     */
    fieldValidation?: string;
    /**
     * Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.
     */
    force?: boolean;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/userpreferences/{name}';
};

export type PatchIamMiloapisComV1Alpha1UserPreferenceErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type PatchIamMiloapisComV1Alpha1UserPreferenceResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1UserPreference;
};

export type PatchIamMiloapisComV1Alpha1UserPreferenceResponse =
  PatchIamMiloapisComV1Alpha1UserPreferenceResponses[keyof PatchIamMiloapisComV1Alpha1UserPreferenceResponses];

export type ReplaceIamMiloapisComV1Alpha1UserPreferenceData = {
  body: ComMiloapisIamV1Alpha1UserPreference;
  path: {
    /**
     * name of the UserPreference
     */
    name: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string;
    /**
     * fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
     */
    fieldManager?: string;
    /**
     * fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     */
    fieldValidation?: string;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/userpreferences/{name}';
};

export type ReplaceIamMiloapisComV1Alpha1UserPreferenceErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type ReplaceIamMiloapisComV1Alpha1UserPreferenceResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1UserPreference;
  /**
   * Created
   */
  201: ComMiloapisIamV1Alpha1UserPreference;
};

export type ReplaceIamMiloapisComV1Alpha1UserPreferenceResponse =
  ReplaceIamMiloapisComV1Alpha1UserPreferenceResponses[keyof ReplaceIamMiloapisComV1Alpha1UserPreferenceResponses];

export type ReadIamMiloapisComV1Alpha1UserPreferenceStatusData = {
  body?: never;
  path: {
    /**
     * name of the UserPreference
     */
    name: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersion?: string;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/userpreferences/{name}/status';
};

export type ReadIamMiloapisComV1Alpha1UserPreferenceStatusErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type ReadIamMiloapisComV1Alpha1UserPreferenceStatusResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1UserPreference;
};

export type ReadIamMiloapisComV1Alpha1UserPreferenceStatusResponse =
  ReadIamMiloapisComV1Alpha1UserPreferenceStatusResponses[keyof ReadIamMiloapisComV1Alpha1UserPreferenceStatusResponses];

export type PatchIamMiloapisComV1Alpha1UserPreferenceStatusData = {
  body: IoK8sApimachineryPkgApisMetaV1Patch;
  path: {
    /**
     * name of the UserPreference
     */
    name: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string;
    /**
     * fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
     */
    fieldManager?: string;
    /**
     * fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     */
    fieldValidation?: string;
    /**
     * Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.
     */
    force?: boolean;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/userpreferences/{name}/status';
};

export type PatchIamMiloapisComV1Alpha1UserPreferenceStatusErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type PatchIamMiloapisComV1Alpha1UserPreferenceStatusResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1UserPreference;
};

export type PatchIamMiloapisComV1Alpha1UserPreferenceStatusResponse =
  PatchIamMiloapisComV1Alpha1UserPreferenceStatusResponses[keyof PatchIamMiloapisComV1Alpha1UserPreferenceStatusResponses];

export type ReplaceIamMiloapisComV1Alpha1UserPreferenceStatusData = {
  body: ComMiloapisIamV1Alpha1UserPreference;
  path: {
    /**
     * name of the UserPreference
     */
    name: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string;
    /**
     * fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
     */
    fieldManager?: string;
    /**
     * fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     */
    fieldValidation?: string;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/userpreferences/{name}/status';
};

export type ReplaceIamMiloapisComV1Alpha1UserPreferenceStatusErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type ReplaceIamMiloapisComV1Alpha1UserPreferenceStatusResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1UserPreference;
  /**
   * Created
   */
  201: ComMiloapisIamV1Alpha1UserPreference;
};

export type ReplaceIamMiloapisComV1Alpha1UserPreferenceStatusResponse =
  ReplaceIamMiloapisComV1Alpha1UserPreferenceStatusResponses[keyof ReplaceIamMiloapisComV1Alpha1UserPreferenceStatusResponses];

export type DeleteIamMiloapisComV1Alpha1CollectionUserData = {
  body?: never;
  path?: never;
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.
     */
    allowWatchBookmarks?: boolean;
    /**
     * The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
     *
     * This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
     */
    continue?: string;
    /**
     * A selector to restrict the list of returned objects by their fields. Defaults to everything.
     */
    fieldSelector?: string;
    /**
     * A selector to restrict the list of returned objects by their labels. Defaults to everything.
     */
    labelSelector?: string;
    /**
     * limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
     *
     * The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
     */
    limit?: number;
    /**
     * resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersion?: string;
    /**
     * resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersionMatch?: string;
    /**
     * `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
     *
     * When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
     * is interpreted as "data at least as new as the provided `resourceVersion`"
     * and the bookmark event is send when the state is synced
     * to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
     * If `resourceVersion` is unset, this is interpreted as "consistent read" and the
     * bookmark event is send when the state is synced at least to the moment
     * when request started being processed.
     * - `resourceVersionMatch` set to any other value or unset
     * Invalid error is returned.
     *
     * Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise.
     */
    sendInitialEvents?: boolean;
    /**
     * Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
     */
    timeoutSeconds?: number;
    /**
     * Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
     */
    watch?: boolean;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/users';
};

export type DeleteIamMiloapisComV1Alpha1CollectionUserErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type DeleteIamMiloapisComV1Alpha1CollectionUserResponses = {
  /**
   * OK
   */
  200: IoK8sApimachineryPkgApisMetaV1Status;
};

export type DeleteIamMiloapisComV1Alpha1CollectionUserResponse =
  DeleteIamMiloapisComV1Alpha1CollectionUserResponses[keyof DeleteIamMiloapisComV1Alpha1CollectionUserResponses];

export type ListIamMiloapisComV1Alpha1UserData = {
  body?: never;
  path?: never;
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.
     */
    allowWatchBookmarks?: boolean;
    /**
     * The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
     *
     * This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
     */
    continue?: string;
    /**
     * A selector to restrict the list of returned objects by their fields. Defaults to everything.
     */
    fieldSelector?: string;
    /**
     * A selector to restrict the list of returned objects by their labels. Defaults to everything.
     */
    labelSelector?: string;
    /**
     * limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
     *
     * The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
     */
    limit?: number;
    /**
     * resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersion?: string;
    /**
     * resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersionMatch?: string;
    /**
     * `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
     *
     * When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
     * is interpreted as "data at least as new as the provided `resourceVersion`"
     * and the bookmark event is send when the state is synced
     * to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
     * If `resourceVersion` is unset, this is interpreted as "consistent read" and the
     * bookmark event is send when the state is synced at least to the moment
     * when request started being processed.
     * - `resourceVersionMatch` set to any other value or unset
     * Invalid error is returned.
     *
     * Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise.
     */
    sendInitialEvents?: boolean;
    /**
     * Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
     */
    timeoutSeconds?: number;
    /**
     * Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
     */
    watch?: boolean;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/users';
};

export type ListIamMiloapisComV1Alpha1UserErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type ListIamMiloapisComV1Alpha1UserResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1UserList;
};

export type ListIamMiloapisComV1Alpha1UserResponse =
  ListIamMiloapisComV1Alpha1UserResponses[keyof ListIamMiloapisComV1Alpha1UserResponses];

export type CreateIamMiloapisComV1Alpha1UserData = {
  body: ComMiloapisIamV1Alpha1User;
  path?: never;
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string;
    /**
     * fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
     */
    fieldManager?: string;
    /**
     * fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     */
    fieldValidation?: string;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/users';
};

export type CreateIamMiloapisComV1Alpha1UserErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type CreateIamMiloapisComV1Alpha1UserResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1User;
  /**
   * Created
   */
  201: ComMiloapisIamV1Alpha1User;
  /**
   * Accepted
   */
  202: ComMiloapisIamV1Alpha1User;
};

export type CreateIamMiloapisComV1Alpha1UserResponse =
  CreateIamMiloapisComV1Alpha1UserResponses[keyof CreateIamMiloapisComV1Alpha1UserResponses];

export type DeleteIamMiloapisComV1Alpha1UserData = {
  body?: IoK8sApimachineryPkgApisMetaV1DeleteOptions;
  path: {
    /**
     * name of the User
     */
    name: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string;
    /**
     * The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
     */
    gracePeriodSeconds?: number;
    /**
     * if set to true, it will trigger an unsafe deletion of the resource in case the normal deletion flow fails with a corrupt object error. A resource is considered corrupt if it can not be retrieved from the underlying storage successfully because of a) its data can not be transformed e.g. decryption failure, or b) it fails to decode into an object. NOTE: unsafe deletion ignores finalizer constraints, skips precondition checks, and removes the object from the storage. WARNING: This may potentially break the cluster if the workload associated with the resource being unsafe-deleted relies on normal deletion flow. Use only if you REALLY know what you are doing. The default value is false, and the user must opt in to enable it
     */
    ignoreStoreReadErrorWithClusterBreakingPotential?: boolean;
    /**
     * Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
     */
    orphanDependents?: boolean;
    /**
     * Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
     */
    propagationPolicy?: string;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/users/{name}';
};

export type DeleteIamMiloapisComV1Alpha1UserErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type DeleteIamMiloapisComV1Alpha1UserResponses = {
  /**
   * OK
   */
  200: IoK8sApimachineryPkgApisMetaV1Status;
  /**
   * Accepted
   */
  202: IoK8sApimachineryPkgApisMetaV1Status;
};

export type DeleteIamMiloapisComV1Alpha1UserResponse =
  DeleteIamMiloapisComV1Alpha1UserResponses[keyof DeleteIamMiloapisComV1Alpha1UserResponses];

export type ReadIamMiloapisComV1Alpha1UserData = {
  body?: never;
  path: {
    /**
     * name of the User
     */
    name: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersion?: string;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/users/{name}';
};

export type ReadIamMiloapisComV1Alpha1UserErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type ReadIamMiloapisComV1Alpha1UserResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1User;
};

export type ReadIamMiloapisComV1Alpha1UserResponse =
  ReadIamMiloapisComV1Alpha1UserResponses[keyof ReadIamMiloapisComV1Alpha1UserResponses];

export type PatchIamMiloapisComV1Alpha1UserData = {
  body: IoK8sApimachineryPkgApisMetaV1Patch;
  path: {
    /**
     * name of the User
     */
    name: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string;
    /**
     * fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
     */
    fieldManager?: string;
    /**
     * fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     */
    fieldValidation?: string;
    /**
     * Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.
     */
    force?: boolean;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/users/{name}';
};

export type PatchIamMiloapisComV1Alpha1UserErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type PatchIamMiloapisComV1Alpha1UserResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1User;
};

export type PatchIamMiloapisComV1Alpha1UserResponse =
  PatchIamMiloapisComV1Alpha1UserResponses[keyof PatchIamMiloapisComV1Alpha1UserResponses];

export type ReplaceIamMiloapisComV1Alpha1UserData = {
  body: ComMiloapisIamV1Alpha1User;
  path: {
    /**
     * name of the User
     */
    name: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string;
    /**
     * fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
     */
    fieldManager?: string;
    /**
     * fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     */
    fieldValidation?: string;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/users/{name}';
};

export type ReplaceIamMiloapisComV1Alpha1UserErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type ReplaceIamMiloapisComV1Alpha1UserResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1User;
  /**
   * Created
   */
  201: ComMiloapisIamV1Alpha1User;
};

export type ReplaceIamMiloapisComV1Alpha1UserResponse =
  ReplaceIamMiloapisComV1Alpha1UserResponses[keyof ReplaceIamMiloapisComV1Alpha1UserResponses];

export type ReadIamMiloapisComV1Alpha1UserStatusData = {
  body?: never;
  path: {
    /**
     * name of the User
     */
    name: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersion?: string;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/users/{name}/status';
};

export type ReadIamMiloapisComV1Alpha1UserStatusErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type ReadIamMiloapisComV1Alpha1UserStatusResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1User;
};

export type ReadIamMiloapisComV1Alpha1UserStatusResponse =
  ReadIamMiloapisComV1Alpha1UserStatusResponses[keyof ReadIamMiloapisComV1Alpha1UserStatusResponses];

export type PatchIamMiloapisComV1Alpha1UserStatusData = {
  body: IoK8sApimachineryPkgApisMetaV1Patch;
  path: {
    /**
     * name of the User
     */
    name: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string;
    /**
     * fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
     */
    fieldManager?: string;
    /**
     * fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     */
    fieldValidation?: string;
    /**
     * Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.
     */
    force?: boolean;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/users/{name}/status';
};

export type PatchIamMiloapisComV1Alpha1UserStatusErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type PatchIamMiloapisComV1Alpha1UserStatusResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1User;
};

export type PatchIamMiloapisComV1Alpha1UserStatusResponse =
  PatchIamMiloapisComV1Alpha1UserStatusResponses[keyof PatchIamMiloapisComV1Alpha1UserStatusResponses];

export type ReplaceIamMiloapisComV1Alpha1UserStatusData = {
  body: ComMiloapisIamV1Alpha1User;
  path: {
    /**
     * name of the User
     */
    name: string;
  };
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string;
    /**
     * fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
     */
    fieldManager?: string;
    /**
     * fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     */
    fieldValidation?: string;
  };
  url: '/apis/iam.miloapis.com/v1alpha1/users/{name}/status';
};

export type ReplaceIamMiloapisComV1Alpha1UserStatusErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
};

export type ReplaceIamMiloapisComV1Alpha1UserStatusResponses = {
  /**
   * OK
   */
  200: ComMiloapisIamV1Alpha1User;
  /**
   * Created
   */
  201: ComMiloapisIamV1Alpha1User;
};

export type ReplaceIamMiloapisComV1Alpha1UserStatusResponse =
  ReplaceIamMiloapisComV1Alpha1UserStatusResponses[keyof ReplaceIamMiloapisComV1Alpha1UserStatusResponses];

export type ClientOptions = {
  baseURL: `${string}://${string}` | (string & {});
};
