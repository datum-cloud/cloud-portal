// This file is auto-generated by @hey-api/openapi-ts
import { client as _heyApiClient } from './client.gen';
import type {
  CreateNetworkingDatumapisComV1AlphaNamespacedLocationData,
  CreateNetworkingDatumapisComV1AlphaNamespacedLocationResponse,
  CreateNetworkingDatumapisComV1AlphaNamespacedNetworkBindingData,
  CreateNetworkingDatumapisComV1AlphaNamespacedNetworkBindingResponse,
  CreateNetworkingDatumapisComV1AlphaNamespacedNetworkContextData,
  CreateNetworkingDatumapisComV1AlphaNamespacedNetworkContextResponse,
  CreateNetworkingDatumapisComV1AlphaNamespacedNetworkData,
  CreateNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyData,
  CreateNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyResponse,
  CreateNetworkingDatumapisComV1AlphaNamespacedNetworkResponse,
  CreateNetworkingDatumapisComV1AlphaNamespacedSubnetClaimData,
  CreateNetworkingDatumapisComV1AlphaNamespacedSubnetClaimResponse,
  CreateNetworkingDatumapisComV1AlphaNamespacedSubnetData,
  CreateNetworkingDatumapisComV1AlphaNamespacedSubnetResponse,
  DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedLocationData,
  DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedLocationResponse,
  DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedNetworkBindingData,
  DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedNetworkBindingResponse,
  DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedNetworkContextData,
  DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedNetworkContextResponse,
  DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedNetworkData,
  DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedNetworkPolicyData,
  DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedNetworkPolicyResponse,
  DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedNetworkResponse,
  DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedSubnetClaimData,
  DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedSubnetClaimResponse,
  DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedSubnetData,
  DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedSubnetResponse,
  DeleteNetworkingDatumapisComV1AlphaNamespacedLocationData,
  DeleteNetworkingDatumapisComV1AlphaNamespacedLocationResponse,
  DeleteNetworkingDatumapisComV1AlphaNamespacedNetworkBindingData,
  DeleteNetworkingDatumapisComV1AlphaNamespacedNetworkBindingResponse,
  DeleteNetworkingDatumapisComV1AlphaNamespacedNetworkContextData,
  DeleteNetworkingDatumapisComV1AlphaNamespacedNetworkContextResponse,
  DeleteNetworkingDatumapisComV1AlphaNamespacedNetworkData,
  DeleteNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyData,
  DeleteNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyResponse,
  DeleteNetworkingDatumapisComV1AlphaNamespacedNetworkResponse,
  DeleteNetworkingDatumapisComV1AlphaNamespacedSubnetClaimData,
  DeleteNetworkingDatumapisComV1AlphaNamespacedSubnetClaimResponse,
  DeleteNetworkingDatumapisComV1AlphaNamespacedSubnetData,
  DeleteNetworkingDatumapisComV1AlphaNamespacedSubnetResponse,
  ListNetworkingDatumapisComV1AlphaLocationForAllNamespacesData,
  ListNetworkingDatumapisComV1AlphaLocationForAllNamespacesResponse,
  ListNetworkingDatumapisComV1AlphaNamespacedLocationData,
  ListNetworkingDatumapisComV1AlphaNamespacedLocationResponse,
  ListNetworkingDatumapisComV1AlphaNamespacedNetworkBindingData,
  ListNetworkingDatumapisComV1AlphaNamespacedNetworkBindingResponse,
  ListNetworkingDatumapisComV1AlphaNamespacedNetworkContextData,
  ListNetworkingDatumapisComV1AlphaNamespacedNetworkContextResponse,
  ListNetworkingDatumapisComV1AlphaNamespacedNetworkData,
  ListNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyData,
  ListNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyResponse,
  ListNetworkingDatumapisComV1AlphaNamespacedNetworkResponse,
  ListNetworkingDatumapisComV1AlphaNamespacedSubnetClaimData,
  ListNetworkingDatumapisComV1AlphaNamespacedSubnetClaimResponse,
  ListNetworkingDatumapisComV1AlphaNamespacedSubnetData,
  ListNetworkingDatumapisComV1AlphaNamespacedSubnetResponse,
  ListNetworkingDatumapisComV1AlphaNetworkBindingForAllNamespacesData,
  ListNetworkingDatumapisComV1AlphaNetworkBindingForAllNamespacesResponse,
  ListNetworkingDatumapisComV1AlphaNetworkContextForAllNamespacesData,
  ListNetworkingDatumapisComV1AlphaNetworkContextForAllNamespacesResponse,
  ListNetworkingDatumapisComV1AlphaNetworkForAllNamespacesData,
  ListNetworkingDatumapisComV1AlphaNetworkForAllNamespacesResponse,
  ListNetworkingDatumapisComV1AlphaNetworkPolicyForAllNamespacesData,
  ListNetworkingDatumapisComV1AlphaNetworkPolicyForAllNamespacesResponse,
  ListNetworkingDatumapisComV1AlphaSubnetClaimForAllNamespacesData,
  ListNetworkingDatumapisComV1AlphaSubnetClaimForAllNamespacesResponse,
  ListNetworkingDatumapisComV1AlphaSubnetForAllNamespacesData,
  ListNetworkingDatumapisComV1AlphaSubnetForAllNamespacesResponse,
  PatchNetworkingDatumapisComV1AlphaNamespacedLocationData,
  PatchNetworkingDatumapisComV1AlphaNamespacedLocationResponse,
  PatchNetworkingDatumapisComV1AlphaNamespacedLocationStatusData,
  PatchNetworkingDatumapisComV1AlphaNamespacedLocationStatusResponse,
  PatchNetworkingDatumapisComV1AlphaNamespacedNetworkBindingData,
  PatchNetworkingDatumapisComV1AlphaNamespacedNetworkBindingResponse,
  PatchNetworkingDatumapisComV1AlphaNamespacedNetworkBindingStatusData,
  PatchNetworkingDatumapisComV1AlphaNamespacedNetworkBindingStatusResponse,
  PatchNetworkingDatumapisComV1AlphaNamespacedNetworkContextData,
  PatchNetworkingDatumapisComV1AlphaNamespacedNetworkContextResponse,
  PatchNetworkingDatumapisComV1AlphaNamespacedNetworkContextStatusData,
  PatchNetworkingDatumapisComV1AlphaNamespacedNetworkContextStatusResponse,
  PatchNetworkingDatumapisComV1AlphaNamespacedNetworkData,
  PatchNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyData,
  PatchNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyResponse,
  PatchNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyStatusData,
  PatchNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyStatusResponse,
  PatchNetworkingDatumapisComV1AlphaNamespacedNetworkResponse,
  PatchNetworkingDatumapisComV1AlphaNamespacedNetworkStatusData,
  PatchNetworkingDatumapisComV1AlphaNamespacedNetworkStatusResponse,
  PatchNetworkingDatumapisComV1AlphaNamespacedSubnetClaimData,
  PatchNetworkingDatumapisComV1AlphaNamespacedSubnetClaimResponse,
  PatchNetworkingDatumapisComV1AlphaNamespacedSubnetClaimStatusData,
  PatchNetworkingDatumapisComV1AlphaNamespacedSubnetClaimStatusResponse,
  PatchNetworkingDatumapisComV1AlphaNamespacedSubnetData,
  PatchNetworkingDatumapisComV1AlphaNamespacedSubnetResponse,
  PatchNetworkingDatumapisComV1AlphaNamespacedSubnetStatusData,
  PatchNetworkingDatumapisComV1AlphaNamespacedSubnetStatusResponse,
  ReadNetworkingDatumapisComV1AlphaNamespacedLocationData,
  ReadNetworkingDatumapisComV1AlphaNamespacedLocationResponse,
  ReadNetworkingDatumapisComV1AlphaNamespacedLocationStatusData,
  ReadNetworkingDatumapisComV1AlphaNamespacedLocationStatusResponse,
  ReadNetworkingDatumapisComV1AlphaNamespacedNetworkBindingData,
  ReadNetworkingDatumapisComV1AlphaNamespacedNetworkBindingResponse,
  ReadNetworkingDatumapisComV1AlphaNamespacedNetworkBindingStatusData,
  ReadNetworkingDatumapisComV1AlphaNamespacedNetworkBindingStatusResponse,
  ReadNetworkingDatumapisComV1AlphaNamespacedNetworkContextData,
  ReadNetworkingDatumapisComV1AlphaNamespacedNetworkContextResponse,
  ReadNetworkingDatumapisComV1AlphaNamespacedNetworkContextStatusData,
  ReadNetworkingDatumapisComV1AlphaNamespacedNetworkContextStatusResponse,
  ReadNetworkingDatumapisComV1AlphaNamespacedNetworkData,
  ReadNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyData,
  ReadNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyResponse,
  ReadNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyStatusData,
  ReadNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyStatusResponse,
  ReadNetworkingDatumapisComV1AlphaNamespacedNetworkResponse,
  ReadNetworkingDatumapisComV1AlphaNamespacedNetworkStatusData,
  ReadNetworkingDatumapisComV1AlphaNamespacedNetworkStatusResponse,
  ReadNetworkingDatumapisComV1AlphaNamespacedSubnetClaimData,
  ReadNetworkingDatumapisComV1AlphaNamespacedSubnetClaimResponse,
  ReadNetworkingDatumapisComV1AlphaNamespacedSubnetClaimStatusData,
  ReadNetworkingDatumapisComV1AlphaNamespacedSubnetClaimStatusResponse,
  ReadNetworkingDatumapisComV1AlphaNamespacedSubnetData,
  ReadNetworkingDatumapisComV1AlphaNamespacedSubnetResponse,
  ReadNetworkingDatumapisComV1AlphaNamespacedSubnetStatusData,
  ReadNetworkingDatumapisComV1AlphaNamespacedSubnetStatusResponse,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedLocationData,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedLocationResponse,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedLocationStatusData,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedLocationStatusResponse,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkBindingData,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkBindingResponse,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkBindingStatusData,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkBindingStatusResponse,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkContextData,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkContextResponse,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkContextStatusData,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkContextStatusResponse,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkData,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyData,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyResponse,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyStatusData,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyStatusResponse,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkResponse,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkStatusData,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkStatusResponse,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedSubnetClaimData,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedSubnetClaimResponse,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedSubnetClaimStatusData,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedSubnetClaimStatusResponse,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedSubnetData,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedSubnetResponse,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedSubnetStatusData,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedSubnetStatusResponse,
} from './types.gen';
import type { Client, Options as ClientOptions, TDataShape } from '@hey-api/client-axios';

export type Options<
  TData extends TDataShape = TDataShape,
  ThrowOnError extends boolean = boolean,
> = ClientOptions<TData, ThrowOnError> & {
  /**
   * You can provide a client instance returned by `createClient()` instead of
   * individual options. This might be also useful if you want to implement a
   * custom client.
   */
  client?: Client;
  /**
   * You can pass arbitrary values through the `meta` object. This can be
   * used to access values that aren't defined as part of the SDK function.
   */
  meta?: Record<string, unknown>;
};

/**
 * list objects of kind Location
 */
export const listNetworkingDatumapisComV1AlphaLocationForAllNamespaces = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<ListNetworkingDatumapisComV1AlphaLocationForAllNamespacesData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    ListNetworkingDatumapisComV1AlphaLocationForAllNamespacesResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/locations',
    ...options,
  });
};

/**
 * delete collection of Location
 */
export const deleteNetworkingDatumapisComV1AlphaCollectionNamespacedLocation = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedLocationData,
    ThrowOnError
  >
) => {
  return (options.client ?? _heyApiClient).delete<
    DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedLocationResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/locations',
    ...options,
  });
};

/**
 * list objects of kind Location
 */
export const listNetworkingDatumapisComV1AlphaNamespacedLocation = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ListNetworkingDatumapisComV1AlphaNamespacedLocationData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    ListNetworkingDatumapisComV1AlphaNamespacedLocationResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/locations',
    ...options,
  });
};

/**
 * create a Location
 */
export const createNetworkingDatumapisComV1AlphaNamespacedLocation = <
  ThrowOnError extends boolean = false,
>(
  options: Options<CreateNetworkingDatumapisComV1AlphaNamespacedLocationData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    CreateNetworkingDatumapisComV1AlphaNamespacedLocationResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/locations',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

/**
 * delete a Location
 */
export const deleteNetworkingDatumapisComV1AlphaNamespacedLocation = <
  ThrowOnError extends boolean = false,
>(
  options: Options<DeleteNetworkingDatumapisComV1AlphaNamespacedLocationData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).delete<
    DeleteNetworkingDatumapisComV1AlphaNamespacedLocationResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/locations/{name}',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

/**
 * read the specified Location
 */
export const readNetworkingDatumapisComV1AlphaNamespacedLocation = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ReadNetworkingDatumapisComV1AlphaNamespacedLocationData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    ReadNetworkingDatumapisComV1AlphaNamespacedLocationResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/locations/{name}',
    ...options,
  });
};

/**
 * partially update the specified Location
 */
export const patchNetworkingDatumapisComV1AlphaNamespacedLocation = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PatchNetworkingDatumapisComV1AlphaNamespacedLocationData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).patch<
    PatchNetworkingDatumapisComV1AlphaNamespacedLocationResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/locations/{name}',
    ...options,
    headers: {
      'Content-Type': 'application/apply-patch+yaml',
      ...options?.headers,
    },
  });
};

/**
 * replace the specified Location
 */
export const replaceNetworkingDatumapisComV1AlphaNamespacedLocation = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ReplaceNetworkingDatumapisComV1AlphaNamespacedLocationData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).put<
    ReplaceNetworkingDatumapisComV1AlphaNamespacedLocationResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/locations/{name}',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

/**
 * read status of the specified Location
 */
export const readNetworkingDatumapisComV1AlphaNamespacedLocationStatus = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ReadNetworkingDatumapisComV1AlphaNamespacedLocationStatusData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    ReadNetworkingDatumapisComV1AlphaNamespacedLocationStatusResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/locations/{name}/status',
    ...options,
  });
};

/**
 * partially update status of the specified Location
 */
export const patchNetworkingDatumapisComV1AlphaNamespacedLocationStatus = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PatchNetworkingDatumapisComV1AlphaNamespacedLocationStatusData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).patch<
    PatchNetworkingDatumapisComV1AlphaNamespacedLocationStatusResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/locations/{name}/status',
    ...options,
    headers: {
      'Content-Type': 'application/apply-patch+yaml',
      ...options?.headers,
    },
  });
};

/**
 * replace status of the specified Location
 */
export const replaceNetworkingDatumapisComV1AlphaNamespacedLocationStatus = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ReplaceNetworkingDatumapisComV1AlphaNamespacedLocationStatusData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).put<
    ReplaceNetworkingDatumapisComV1AlphaNamespacedLocationStatusResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/locations/{name}/status',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

/**
 * delete collection of NetworkBinding
 */
export const deleteNetworkingDatumapisComV1AlphaCollectionNamespacedNetworkBinding = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedNetworkBindingData,
    ThrowOnError
  >
) => {
  return (options.client ?? _heyApiClient).delete<
    DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedNetworkBindingResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networkbindings',
    ...options,
  });
};

/**
 * list objects of kind NetworkBinding
 */
export const listNetworkingDatumapisComV1AlphaNamespacedNetworkBinding = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ListNetworkingDatumapisComV1AlphaNamespacedNetworkBindingData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    ListNetworkingDatumapisComV1AlphaNamespacedNetworkBindingResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networkbindings',
    ...options,
  });
};

/**
 * create a NetworkBinding
 */
export const createNetworkingDatumapisComV1AlphaNamespacedNetworkBinding = <
  ThrowOnError extends boolean = false,
>(
  options: Options<CreateNetworkingDatumapisComV1AlphaNamespacedNetworkBindingData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    CreateNetworkingDatumapisComV1AlphaNamespacedNetworkBindingResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networkbindings',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

/**
 * delete a NetworkBinding
 */
export const deleteNetworkingDatumapisComV1AlphaNamespacedNetworkBinding = <
  ThrowOnError extends boolean = false,
>(
  options: Options<DeleteNetworkingDatumapisComV1AlphaNamespacedNetworkBindingData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).delete<
    DeleteNetworkingDatumapisComV1AlphaNamespacedNetworkBindingResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networkbindings/{name}',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

/**
 * read the specified NetworkBinding
 */
export const readNetworkingDatumapisComV1AlphaNamespacedNetworkBinding = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ReadNetworkingDatumapisComV1AlphaNamespacedNetworkBindingData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    ReadNetworkingDatumapisComV1AlphaNamespacedNetworkBindingResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networkbindings/{name}',
    ...options,
  });
};

/**
 * partially update the specified NetworkBinding
 */
export const patchNetworkingDatumapisComV1AlphaNamespacedNetworkBinding = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PatchNetworkingDatumapisComV1AlphaNamespacedNetworkBindingData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).patch<
    PatchNetworkingDatumapisComV1AlphaNamespacedNetworkBindingResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networkbindings/{name}',
    ...options,
    headers: {
      'Content-Type': 'application/apply-patch+yaml',
      ...options?.headers,
    },
  });
};

/**
 * replace the specified NetworkBinding
 */
export const replaceNetworkingDatumapisComV1AlphaNamespacedNetworkBinding = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkBindingData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).put<
    ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkBindingResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networkbindings/{name}',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

/**
 * read status of the specified NetworkBinding
 */
export const readNetworkingDatumapisComV1AlphaNamespacedNetworkBindingStatus = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    ReadNetworkingDatumapisComV1AlphaNamespacedNetworkBindingStatusData,
    ThrowOnError
  >
) => {
  return (options.client ?? _heyApiClient).get<
    ReadNetworkingDatumapisComV1AlphaNamespacedNetworkBindingStatusResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networkbindings/{name}/status',
    ...options,
  });
};

/**
 * partially update status of the specified NetworkBinding
 */
export const patchNetworkingDatumapisComV1AlphaNamespacedNetworkBindingStatus = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    PatchNetworkingDatumapisComV1AlphaNamespacedNetworkBindingStatusData,
    ThrowOnError
  >
) => {
  return (options.client ?? _heyApiClient).patch<
    PatchNetworkingDatumapisComV1AlphaNamespacedNetworkBindingStatusResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networkbindings/{name}/status',
    ...options,
    headers: {
      'Content-Type': 'application/apply-patch+yaml',
      ...options?.headers,
    },
  });
};

/**
 * replace status of the specified NetworkBinding
 */
export const replaceNetworkingDatumapisComV1AlphaNamespacedNetworkBindingStatus = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkBindingStatusData,
    ThrowOnError
  >
) => {
  return (options.client ?? _heyApiClient).put<
    ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkBindingStatusResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networkbindings/{name}/status',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

/**
 * delete collection of NetworkContext
 */
export const deleteNetworkingDatumapisComV1AlphaCollectionNamespacedNetworkContext = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedNetworkContextData,
    ThrowOnError
  >
) => {
  return (options.client ?? _heyApiClient).delete<
    DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedNetworkContextResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networkcontexts',
    ...options,
  });
};

/**
 * list objects of kind NetworkContext
 */
export const listNetworkingDatumapisComV1AlphaNamespacedNetworkContext = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ListNetworkingDatumapisComV1AlphaNamespacedNetworkContextData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    ListNetworkingDatumapisComV1AlphaNamespacedNetworkContextResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networkcontexts',
    ...options,
  });
};

/**
 * create a NetworkContext
 */
export const createNetworkingDatumapisComV1AlphaNamespacedNetworkContext = <
  ThrowOnError extends boolean = false,
>(
  options: Options<CreateNetworkingDatumapisComV1AlphaNamespacedNetworkContextData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    CreateNetworkingDatumapisComV1AlphaNamespacedNetworkContextResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networkcontexts',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

/**
 * delete a NetworkContext
 */
export const deleteNetworkingDatumapisComV1AlphaNamespacedNetworkContext = <
  ThrowOnError extends boolean = false,
>(
  options: Options<DeleteNetworkingDatumapisComV1AlphaNamespacedNetworkContextData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).delete<
    DeleteNetworkingDatumapisComV1AlphaNamespacedNetworkContextResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networkcontexts/{name}',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

/**
 * read the specified NetworkContext
 */
export const readNetworkingDatumapisComV1AlphaNamespacedNetworkContext = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ReadNetworkingDatumapisComV1AlphaNamespacedNetworkContextData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    ReadNetworkingDatumapisComV1AlphaNamespacedNetworkContextResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networkcontexts/{name}',
    ...options,
  });
};

/**
 * partially update the specified NetworkContext
 */
export const patchNetworkingDatumapisComV1AlphaNamespacedNetworkContext = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PatchNetworkingDatumapisComV1AlphaNamespacedNetworkContextData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).patch<
    PatchNetworkingDatumapisComV1AlphaNamespacedNetworkContextResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networkcontexts/{name}',
    ...options,
    headers: {
      'Content-Type': 'application/apply-patch+yaml',
      ...options?.headers,
    },
  });
};

/**
 * replace the specified NetworkContext
 */
export const replaceNetworkingDatumapisComV1AlphaNamespacedNetworkContext = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkContextData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).put<
    ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkContextResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networkcontexts/{name}',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

/**
 * read status of the specified NetworkContext
 */
export const readNetworkingDatumapisComV1AlphaNamespacedNetworkContextStatus = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    ReadNetworkingDatumapisComV1AlphaNamespacedNetworkContextStatusData,
    ThrowOnError
  >
) => {
  return (options.client ?? _heyApiClient).get<
    ReadNetworkingDatumapisComV1AlphaNamespacedNetworkContextStatusResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networkcontexts/{name}/status',
    ...options,
  });
};

/**
 * partially update status of the specified NetworkContext
 */
export const patchNetworkingDatumapisComV1AlphaNamespacedNetworkContextStatus = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    PatchNetworkingDatumapisComV1AlphaNamespacedNetworkContextStatusData,
    ThrowOnError
  >
) => {
  return (options.client ?? _heyApiClient).patch<
    PatchNetworkingDatumapisComV1AlphaNamespacedNetworkContextStatusResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networkcontexts/{name}/status',
    ...options,
    headers: {
      'Content-Type': 'application/apply-patch+yaml',
      ...options?.headers,
    },
  });
};

/**
 * replace status of the specified NetworkContext
 */
export const replaceNetworkingDatumapisComV1AlphaNamespacedNetworkContextStatus = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkContextStatusData,
    ThrowOnError
  >
) => {
  return (options.client ?? _heyApiClient).put<
    ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkContextStatusResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networkcontexts/{name}/status',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

/**
 * delete collection of NetworkPolicy
 */
export const deleteNetworkingDatumapisComV1AlphaCollectionNamespacedNetworkPolicy = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedNetworkPolicyData,
    ThrowOnError
  >
) => {
  return (options.client ?? _heyApiClient).delete<
    DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedNetworkPolicyResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networkpolicies',
    ...options,
  });
};

/**
 * list objects of kind NetworkPolicy
 */
export const listNetworkingDatumapisComV1AlphaNamespacedNetworkPolicy = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ListNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    ListNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networkpolicies',
    ...options,
  });
};

/**
 * create a NetworkPolicy
 */
export const createNetworkingDatumapisComV1AlphaNamespacedNetworkPolicy = <
  ThrowOnError extends boolean = false,
>(
  options: Options<CreateNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    CreateNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networkpolicies',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

/**
 * delete a NetworkPolicy
 */
export const deleteNetworkingDatumapisComV1AlphaNamespacedNetworkPolicy = <
  ThrowOnError extends boolean = false,
>(
  options: Options<DeleteNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).delete<
    DeleteNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networkpolicies/{name}',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

/**
 * read the specified NetworkPolicy
 */
export const readNetworkingDatumapisComV1AlphaNamespacedNetworkPolicy = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ReadNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    ReadNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networkpolicies/{name}',
    ...options,
  });
};

/**
 * partially update the specified NetworkPolicy
 */
export const patchNetworkingDatumapisComV1AlphaNamespacedNetworkPolicy = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PatchNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).patch<
    PatchNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networkpolicies/{name}',
    ...options,
    headers: {
      'Content-Type': 'application/apply-patch+yaml',
      ...options?.headers,
    },
  });
};

/**
 * replace the specified NetworkPolicy
 */
export const replaceNetworkingDatumapisComV1AlphaNamespacedNetworkPolicy = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).put<
    ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networkpolicies/{name}',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

/**
 * read status of the specified NetworkPolicy
 */
export const readNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyStatus = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ReadNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyStatusData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    ReadNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyStatusResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networkpolicies/{name}/status',
    ...options,
  });
};

/**
 * partially update status of the specified NetworkPolicy
 */
export const patchNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyStatus = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    PatchNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyStatusData,
    ThrowOnError
  >
) => {
  return (options.client ?? _heyApiClient).patch<
    PatchNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyStatusResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networkpolicies/{name}/status',
    ...options,
    headers: {
      'Content-Type': 'application/apply-patch+yaml',
      ...options?.headers,
    },
  });
};

/**
 * replace status of the specified NetworkPolicy
 */
export const replaceNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyStatus = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyStatusData,
    ThrowOnError
  >
) => {
  return (options.client ?? _heyApiClient).put<
    ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyStatusResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networkpolicies/{name}/status',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

/**
 * delete collection of Network
 */
export const deleteNetworkingDatumapisComV1AlphaCollectionNamespacedNetwork = <
  ThrowOnError extends boolean = false,
>(
  options: Options<DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedNetworkData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).delete<
    DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedNetworkResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networks',
    ...options,
  });
};

/**
 * list objects of kind Network
 */
export const listNetworkingDatumapisComV1AlphaNamespacedNetwork = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ListNetworkingDatumapisComV1AlphaNamespacedNetworkData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    ListNetworkingDatumapisComV1AlphaNamespacedNetworkResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networks',
    ...options,
  });
};

/**
 * create a Network
 */
export const createNetworkingDatumapisComV1AlphaNamespacedNetwork = <
  ThrowOnError extends boolean = false,
>(
  options: Options<CreateNetworkingDatumapisComV1AlphaNamespacedNetworkData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    CreateNetworkingDatumapisComV1AlphaNamespacedNetworkResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networks',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

/**
 * delete a Network
 */
export const deleteNetworkingDatumapisComV1AlphaNamespacedNetwork = <
  ThrowOnError extends boolean = false,
>(
  options: Options<DeleteNetworkingDatumapisComV1AlphaNamespacedNetworkData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).delete<
    DeleteNetworkingDatumapisComV1AlphaNamespacedNetworkResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networks/{name}',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

/**
 * read the specified Network
 */
export const readNetworkingDatumapisComV1AlphaNamespacedNetwork = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ReadNetworkingDatumapisComV1AlphaNamespacedNetworkData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    ReadNetworkingDatumapisComV1AlphaNamespacedNetworkResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networks/{name}',
    ...options,
  });
};

/**
 * partially update the specified Network
 */
export const patchNetworkingDatumapisComV1AlphaNamespacedNetwork = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PatchNetworkingDatumapisComV1AlphaNamespacedNetworkData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).patch<
    PatchNetworkingDatumapisComV1AlphaNamespacedNetworkResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networks/{name}',
    ...options,
    headers: {
      'Content-Type': 'application/apply-patch+yaml',
      ...options?.headers,
    },
  });
};

/**
 * replace the specified Network
 */
export const replaceNetworkingDatumapisComV1AlphaNamespacedNetwork = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).put<
    ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networks/{name}',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

/**
 * read status of the specified Network
 */
export const readNetworkingDatumapisComV1AlphaNamespacedNetworkStatus = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ReadNetworkingDatumapisComV1AlphaNamespacedNetworkStatusData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    ReadNetworkingDatumapisComV1AlphaNamespacedNetworkStatusResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networks/{name}/status',
    ...options,
  });
};

/**
 * partially update status of the specified Network
 */
export const patchNetworkingDatumapisComV1AlphaNamespacedNetworkStatus = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PatchNetworkingDatumapisComV1AlphaNamespacedNetworkStatusData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).patch<
    PatchNetworkingDatumapisComV1AlphaNamespacedNetworkStatusResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networks/{name}/status',
    ...options,
    headers: {
      'Content-Type': 'application/apply-patch+yaml',
      ...options?.headers,
    },
  });
};

/**
 * replace status of the specified Network
 */
export const replaceNetworkingDatumapisComV1AlphaNamespacedNetworkStatus = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkStatusData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).put<
    ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkStatusResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networks/{name}/status',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

/**
 * delete collection of SubnetClaim
 */
export const deleteNetworkingDatumapisComV1AlphaCollectionNamespacedSubnetClaim = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedSubnetClaimData,
    ThrowOnError
  >
) => {
  return (options.client ?? _heyApiClient).delete<
    DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedSubnetClaimResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/subnetclaims',
    ...options,
  });
};

/**
 * list objects of kind SubnetClaim
 */
export const listNetworkingDatumapisComV1AlphaNamespacedSubnetClaim = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ListNetworkingDatumapisComV1AlphaNamespacedSubnetClaimData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    ListNetworkingDatumapisComV1AlphaNamespacedSubnetClaimResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/subnetclaims',
    ...options,
  });
};

/**
 * create a SubnetClaim
 */
export const createNetworkingDatumapisComV1AlphaNamespacedSubnetClaim = <
  ThrowOnError extends boolean = false,
>(
  options: Options<CreateNetworkingDatumapisComV1AlphaNamespacedSubnetClaimData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    CreateNetworkingDatumapisComV1AlphaNamespacedSubnetClaimResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/subnetclaims',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

/**
 * delete a SubnetClaim
 */
export const deleteNetworkingDatumapisComV1AlphaNamespacedSubnetClaim = <
  ThrowOnError extends boolean = false,
>(
  options: Options<DeleteNetworkingDatumapisComV1AlphaNamespacedSubnetClaimData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).delete<
    DeleteNetworkingDatumapisComV1AlphaNamespacedSubnetClaimResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/subnetclaims/{name}',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

/**
 * read the specified SubnetClaim
 */
export const readNetworkingDatumapisComV1AlphaNamespacedSubnetClaim = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ReadNetworkingDatumapisComV1AlphaNamespacedSubnetClaimData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    ReadNetworkingDatumapisComV1AlphaNamespacedSubnetClaimResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/subnetclaims/{name}',
    ...options,
  });
};

/**
 * partially update the specified SubnetClaim
 */
export const patchNetworkingDatumapisComV1AlphaNamespacedSubnetClaim = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PatchNetworkingDatumapisComV1AlphaNamespacedSubnetClaimData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).patch<
    PatchNetworkingDatumapisComV1AlphaNamespacedSubnetClaimResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/subnetclaims/{name}',
    ...options,
    headers: {
      'Content-Type': 'application/apply-patch+yaml',
      ...options?.headers,
    },
  });
};

/**
 * replace the specified SubnetClaim
 */
export const replaceNetworkingDatumapisComV1AlphaNamespacedSubnetClaim = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ReplaceNetworkingDatumapisComV1AlphaNamespacedSubnetClaimData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).put<
    ReplaceNetworkingDatumapisComV1AlphaNamespacedSubnetClaimResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/subnetclaims/{name}',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

/**
 * read status of the specified SubnetClaim
 */
export const readNetworkingDatumapisComV1AlphaNamespacedSubnetClaimStatus = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ReadNetworkingDatumapisComV1AlphaNamespacedSubnetClaimStatusData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    ReadNetworkingDatumapisComV1AlphaNamespacedSubnetClaimStatusResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/subnetclaims/{name}/status',
    ...options,
  });
};

/**
 * partially update status of the specified SubnetClaim
 */
export const patchNetworkingDatumapisComV1AlphaNamespacedSubnetClaimStatus = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PatchNetworkingDatumapisComV1AlphaNamespacedSubnetClaimStatusData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).patch<
    PatchNetworkingDatumapisComV1AlphaNamespacedSubnetClaimStatusResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/subnetclaims/{name}/status',
    ...options,
    headers: {
      'Content-Type': 'application/apply-patch+yaml',
      ...options?.headers,
    },
  });
};

/**
 * replace status of the specified SubnetClaim
 */
export const replaceNetworkingDatumapisComV1AlphaNamespacedSubnetClaimStatus = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    ReplaceNetworkingDatumapisComV1AlphaNamespacedSubnetClaimStatusData,
    ThrowOnError
  >
) => {
  return (options.client ?? _heyApiClient).put<
    ReplaceNetworkingDatumapisComV1AlphaNamespacedSubnetClaimStatusResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/subnetclaims/{name}/status',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

/**
 * delete collection of Subnet
 */
export const deleteNetworkingDatumapisComV1AlphaCollectionNamespacedSubnet = <
  ThrowOnError extends boolean = false,
>(
  options: Options<DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedSubnetData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).delete<
    DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedSubnetResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/subnets',
    ...options,
  });
};

/**
 * list objects of kind Subnet
 */
export const listNetworkingDatumapisComV1AlphaNamespacedSubnet = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ListNetworkingDatumapisComV1AlphaNamespacedSubnetData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    ListNetworkingDatumapisComV1AlphaNamespacedSubnetResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/subnets',
    ...options,
  });
};

/**
 * create a Subnet
 */
export const createNetworkingDatumapisComV1AlphaNamespacedSubnet = <
  ThrowOnError extends boolean = false,
>(
  options: Options<CreateNetworkingDatumapisComV1AlphaNamespacedSubnetData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    CreateNetworkingDatumapisComV1AlphaNamespacedSubnetResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/subnets',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

/**
 * delete a Subnet
 */
export const deleteNetworkingDatumapisComV1AlphaNamespacedSubnet = <
  ThrowOnError extends boolean = false,
>(
  options: Options<DeleteNetworkingDatumapisComV1AlphaNamespacedSubnetData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).delete<
    DeleteNetworkingDatumapisComV1AlphaNamespacedSubnetResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/subnets/{name}',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

/**
 * read the specified Subnet
 */
export const readNetworkingDatumapisComV1AlphaNamespacedSubnet = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ReadNetworkingDatumapisComV1AlphaNamespacedSubnetData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    ReadNetworkingDatumapisComV1AlphaNamespacedSubnetResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/subnets/{name}',
    ...options,
  });
};

/**
 * partially update the specified Subnet
 */
export const patchNetworkingDatumapisComV1AlphaNamespacedSubnet = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PatchNetworkingDatumapisComV1AlphaNamespacedSubnetData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).patch<
    PatchNetworkingDatumapisComV1AlphaNamespacedSubnetResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/subnets/{name}',
    ...options,
    headers: {
      'Content-Type': 'application/apply-patch+yaml',
      ...options?.headers,
    },
  });
};

/**
 * replace the specified Subnet
 */
export const replaceNetworkingDatumapisComV1AlphaNamespacedSubnet = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ReplaceNetworkingDatumapisComV1AlphaNamespacedSubnetData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).put<
    ReplaceNetworkingDatumapisComV1AlphaNamespacedSubnetResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/subnets/{name}',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

/**
 * read status of the specified Subnet
 */
export const readNetworkingDatumapisComV1AlphaNamespacedSubnetStatus = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ReadNetworkingDatumapisComV1AlphaNamespacedSubnetStatusData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    ReadNetworkingDatumapisComV1AlphaNamespacedSubnetStatusResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/subnets/{name}/status',
    ...options,
  });
};

/**
 * partially update status of the specified Subnet
 */
export const patchNetworkingDatumapisComV1AlphaNamespacedSubnetStatus = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PatchNetworkingDatumapisComV1AlphaNamespacedSubnetStatusData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).patch<
    PatchNetworkingDatumapisComV1AlphaNamespacedSubnetStatusResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/subnets/{name}/status',
    ...options,
    headers: {
      'Content-Type': 'application/apply-patch+yaml',
      ...options?.headers,
    },
  });
};

/**
 * replace status of the specified Subnet
 */
export const replaceNetworkingDatumapisComV1AlphaNamespacedSubnetStatus = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ReplaceNetworkingDatumapisComV1AlphaNamespacedSubnetStatusData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).put<
    ReplaceNetworkingDatumapisComV1AlphaNamespacedSubnetStatusResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/subnets/{name}/status',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

/**
 * list objects of kind NetworkBinding
 */
export const listNetworkingDatumapisComV1AlphaNetworkBindingForAllNamespaces = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<
    ListNetworkingDatumapisComV1AlphaNetworkBindingForAllNamespacesData,
    ThrowOnError
  >
) => {
  return (options?.client ?? _heyApiClient).get<
    ListNetworkingDatumapisComV1AlphaNetworkBindingForAllNamespacesResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/networkbindings',
    ...options,
  });
};

/**
 * list objects of kind NetworkContext
 */
export const listNetworkingDatumapisComV1AlphaNetworkContextForAllNamespaces = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<
    ListNetworkingDatumapisComV1AlphaNetworkContextForAllNamespacesData,
    ThrowOnError
  >
) => {
  return (options?.client ?? _heyApiClient).get<
    ListNetworkingDatumapisComV1AlphaNetworkContextForAllNamespacesResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/networkcontexts',
    ...options,
  });
};

/**
 * list objects of kind NetworkPolicy
 */
export const listNetworkingDatumapisComV1AlphaNetworkPolicyForAllNamespaces = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<
    ListNetworkingDatumapisComV1AlphaNetworkPolicyForAllNamespacesData,
    ThrowOnError
  >
) => {
  return (options?.client ?? _heyApiClient).get<
    ListNetworkingDatumapisComV1AlphaNetworkPolicyForAllNamespacesResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/networkpolicies',
    ...options,
  });
};

/**
 * list objects of kind Network
 */
export const listNetworkingDatumapisComV1AlphaNetworkForAllNamespaces = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<ListNetworkingDatumapisComV1AlphaNetworkForAllNamespacesData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    ListNetworkingDatumapisComV1AlphaNetworkForAllNamespacesResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/networks',
    ...options,
  });
};

/**
 * list objects of kind SubnetClaim
 */
export const listNetworkingDatumapisComV1AlphaSubnetClaimForAllNamespaces = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<ListNetworkingDatumapisComV1AlphaSubnetClaimForAllNamespacesData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    ListNetworkingDatumapisComV1AlphaSubnetClaimForAllNamespacesResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/subnetclaims',
    ...options,
  });
};

/**
 * list objects of kind Subnet
 */
export const listNetworkingDatumapisComV1AlphaSubnetForAllNamespaces = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<ListNetworkingDatumapisComV1AlphaSubnetForAllNamespacesData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    ListNetworkingDatumapisComV1AlphaSubnetForAllNamespacesResponse,
    unknown,
    ThrowOnError
  >({
    url: '/apis/networking.datumapis.com/v1alpha/subnets',
    ...options,
  });
};
