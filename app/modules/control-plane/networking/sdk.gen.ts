// This file is auto-generated by @hey-api/openapi-ts
import { client as _heyApiClient } from './client.gen';
import type {
  ListNetworkingDatumapisComV1AlphaDomainForAllNamespacesData,
  ListNetworkingDatumapisComV1AlphaDomainForAllNamespacesResponses,
  ListNetworkingDatumapisComV1AlphaDomainForAllNamespacesErrors,
  ListNetworkingDatumapisComV1AlphaHttpProxyForAllNamespacesData,
  ListNetworkingDatumapisComV1AlphaHttpProxyForAllNamespacesResponses,
  ListNetworkingDatumapisComV1AlphaHttpProxyForAllNamespacesErrors,
  ListNetworkingDatumapisComV1AlphaLocationForAllNamespacesData,
  ListNetworkingDatumapisComV1AlphaLocationForAllNamespacesResponses,
  ListNetworkingDatumapisComV1AlphaLocationForAllNamespacesErrors,
  DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedDomainData,
  DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedDomainResponses,
  DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedDomainErrors,
  ListNetworkingDatumapisComV1AlphaNamespacedDomainData,
  ListNetworkingDatumapisComV1AlphaNamespacedDomainResponses,
  ListNetworkingDatumapisComV1AlphaNamespacedDomainErrors,
  CreateNetworkingDatumapisComV1AlphaNamespacedDomainData,
  CreateNetworkingDatumapisComV1AlphaNamespacedDomainResponses,
  CreateNetworkingDatumapisComV1AlphaNamespacedDomainErrors,
  DeleteNetworkingDatumapisComV1AlphaNamespacedDomainData,
  DeleteNetworkingDatumapisComV1AlphaNamespacedDomainResponses,
  DeleteNetworkingDatumapisComV1AlphaNamespacedDomainErrors,
  ReadNetworkingDatumapisComV1AlphaNamespacedDomainData,
  ReadNetworkingDatumapisComV1AlphaNamespacedDomainResponses,
  ReadNetworkingDatumapisComV1AlphaNamespacedDomainErrors,
  PatchNetworkingDatumapisComV1AlphaNamespacedDomainData,
  PatchNetworkingDatumapisComV1AlphaNamespacedDomainResponses,
  PatchNetworkingDatumapisComV1AlphaNamespacedDomainErrors,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedDomainData,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedDomainResponses,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedDomainErrors,
  ReadNetworkingDatumapisComV1AlphaNamespacedDomainStatusData,
  ReadNetworkingDatumapisComV1AlphaNamespacedDomainStatusResponses,
  ReadNetworkingDatumapisComV1AlphaNamespacedDomainStatusErrors,
  PatchNetworkingDatumapisComV1AlphaNamespacedDomainStatusData,
  PatchNetworkingDatumapisComV1AlphaNamespacedDomainStatusResponses,
  PatchNetworkingDatumapisComV1AlphaNamespacedDomainStatusErrors,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedDomainStatusData,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedDomainStatusResponses,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedDomainStatusErrors,
  DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedHttpProxyData,
  DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedHttpProxyResponses,
  DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedHttpProxyErrors,
  ListNetworkingDatumapisComV1AlphaNamespacedHttpProxyData,
  ListNetworkingDatumapisComV1AlphaNamespacedHttpProxyResponses,
  ListNetworkingDatumapisComV1AlphaNamespacedHttpProxyErrors,
  CreateNetworkingDatumapisComV1AlphaNamespacedHttpProxyData,
  CreateNetworkingDatumapisComV1AlphaNamespacedHttpProxyResponses,
  CreateNetworkingDatumapisComV1AlphaNamespacedHttpProxyErrors,
  DeleteNetworkingDatumapisComV1AlphaNamespacedHttpProxyData,
  DeleteNetworkingDatumapisComV1AlphaNamespacedHttpProxyResponses,
  DeleteNetworkingDatumapisComV1AlphaNamespacedHttpProxyErrors,
  ReadNetworkingDatumapisComV1AlphaNamespacedHttpProxyData,
  ReadNetworkingDatumapisComV1AlphaNamespacedHttpProxyResponses,
  ReadNetworkingDatumapisComV1AlphaNamespacedHttpProxyErrors,
  PatchNetworkingDatumapisComV1AlphaNamespacedHttpProxyData,
  PatchNetworkingDatumapisComV1AlphaNamespacedHttpProxyResponses,
  PatchNetworkingDatumapisComV1AlphaNamespacedHttpProxyErrors,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedHttpProxyData,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedHttpProxyResponses,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedHttpProxyErrors,
  ReadNetworkingDatumapisComV1AlphaNamespacedHttpProxyStatusData,
  ReadNetworkingDatumapisComV1AlphaNamespacedHttpProxyStatusResponses,
  ReadNetworkingDatumapisComV1AlphaNamespacedHttpProxyStatusErrors,
  PatchNetworkingDatumapisComV1AlphaNamespacedHttpProxyStatusData,
  PatchNetworkingDatumapisComV1AlphaNamespacedHttpProxyStatusResponses,
  PatchNetworkingDatumapisComV1AlphaNamespacedHttpProxyStatusErrors,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedHttpProxyStatusData,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedHttpProxyStatusResponses,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedHttpProxyStatusErrors,
  DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedLocationData,
  DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedLocationResponses,
  DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedLocationErrors,
  ListNetworkingDatumapisComV1AlphaNamespacedLocationData,
  ListNetworkingDatumapisComV1AlphaNamespacedLocationResponses,
  ListNetworkingDatumapisComV1AlphaNamespacedLocationErrors,
  CreateNetworkingDatumapisComV1AlphaNamespacedLocationData,
  CreateNetworkingDatumapisComV1AlphaNamespacedLocationResponses,
  CreateNetworkingDatumapisComV1AlphaNamespacedLocationErrors,
  DeleteNetworkingDatumapisComV1AlphaNamespacedLocationData,
  DeleteNetworkingDatumapisComV1AlphaNamespacedLocationResponses,
  DeleteNetworkingDatumapisComV1AlphaNamespacedLocationErrors,
  ReadNetworkingDatumapisComV1AlphaNamespacedLocationData,
  ReadNetworkingDatumapisComV1AlphaNamespacedLocationResponses,
  ReadNetworkingDatumapisComV1AlphaNamespacedLocationErrors,
  PatchNetworkingDatumapisComV1AlphaNamespacedLocationData,
  PatchNetworkingDatumapisComV1AlphaNamespacedLocationResponses,
  PatchNetworkingDatumapisComV1AlphaNamespacedLocationErrors,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedLocationData,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedLocationResponses,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedLocationErrors,
  ReadNetworkingDatumapisComV1AlphaNamespacedLocationStatusData,
  ReadNetworkingDatumapisComV1AlphaNamespacedLocationStatusResponses,
  ReadNetworkingDatumapisComV1AlphaNamespacedLocationStatusErrors,
  PatchNetworkingDatumapisComV1AlphaNamespacedLocationStatusData,
  PatchNetworkingDatumapisComV1AlphaNamespacedLocationStatusResponses,
  PatchNetworkingDatumapisComV1AlphaNamespacedLocationStatusErrors,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedLocationStatusData,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedLocationStatusResponses,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedLocationStatusErrors,
  DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedNetworkBindingData,
  DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedNetworkBindingResponses,
  DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedNetworkBindingErrors,
  ListNetworkingDatumapisComV1AlphaNamespacedNetworkBindingData,
  ListNetworkingDatumapisComV1AlphaNamespacedNetworkBindingResponses,
  ListNetworkingDatumapisComV1AlphaNamespacedNetworkBindingErrors,
  CreateNetworkingDatumapisComV1AlphaNamespacedNetworkBindingData,
  CreateNetworkingDatumapisComV1AlphaNamespacedNetworkBindingResponses,
  CreateNetworkingDatumapisComV1AlphaNamespacedNetworkBindingErrors,
  DeleteNetworkingDatumapisComV1AlphaNamespacedNetworkBindingData,
  DeleteNetworkingDatumapisComV1AlphaNamespacedNetworkBindingResponses,
  DeleteNetworkingDatumapisComV1AlphaNamespacedNetworkBindingErrors,
  ReadNetworkingDatumapisComV1AlphaNamespacedNetworkBindingData,
  ReadNetworkingDatumapisComV1AlphaNamespacedNetworkBindingResponses,
  ReadNetworkingDatumapisComV1AlphaNamespacedNetworkBindingErrors,
  PatchNetworkingDatumapisComV1AlphaNamespacedNetworkBindingData,
  PatchNetworkingDatumapisComV1AlphaNamespacedNetworkBindingResponses,
  PatchNetworkingDatumapisComV1AlphaNamespacedNetworkBindingErrors,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkBindingData,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkBindingResponses,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkBindingErrors,
  ReadNetworkingDatumapisComV1AlphaNamespacedNetworkBindingStatusData,
  ReadNetworkingDatumapisComV1AlphaNamespacedNetworkBindingStatusResponses,
  ReadNetworkingDatumapisComV1AlphaNamespacedNetworkBindingStatusErrors,
  PatchNetworkingDatumapisComV1AlphaNamespacedNetworkBindingStatusData,
  PatchNetworkingDatumapisComV1AlphaNamespacedNetworkBindingStatusResponses,
  PatchNetworkingDatumapisComV1AlphaNamespacedNetworkBindingStatusErrors,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkBindingStatusData,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkBindingStatusResponses,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkBindingStatusErrors,
  DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedNetworkContextData,
  DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedNetworkContextResponses,
  DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedNetworkContextErrors,
  ListNetworkingDatumapisComV1AlphaNamespacedNetworkContextData,
  ListNetworkingDatumapisComV1AlphaNamespacedNetworkContextResponses,
  ListNetworkingDatumapisComV1AlphaNamespacedNetworkContextErrors,
  CreateNetworkingDatumapisComV1AlphaNamespacedNetworkContextData,
  CreateNetworkingDatumapisComV1AlphaNamespacedNetworkContextResponses,
  CreateNetworkingDatumapisComV1AlphaNamespacedNetworkContextErrors,
  DeleteNetworkingDatumapisComV1AlphaNamespacedNetworkContextData,
  DeleteNetworkingDatumapisComV1AlphaNamespacedNetworkContextResponses,
  DeleteNetworkingDatumapisComV1AlphaNamespacedNetworkContextErrors,
  ReadNetworkingDatumapisComV1AlphaNamespacedNetworkContextData,
  ReadNetworkingDatumapisComV1AlphaNamespacedNetworkContextResponses,
  ReadNetworkingDatumapisComV1AlphaNamespacedNetworkContextErrors,
  PatchNetworkingDatumapisComV1AlphaNamespacedNetworkContextData,
  PatchNetworkingDatumapisComV1AlphaNamespacedNetworkContextResponses,
  PatchNetworkingDatumapisComV1AlphaNamespacedNetworkContextErrors,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkContextData,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkContextResponses,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkContextErrors,
  ReadNetworkingDatumapisComV1AlphaNamespacedNetworkContextStatusData,
  ReadNetworkingDatumapisComV1AlphaNamespacedNetworkContextStatusResponses,
  ReadNetworkingDatumapisComV1AlphaNamespacedNetworkContextStatusErrors,
  PatchNetworkingDatumapisComV1AlphaNamespacedNetworkContextStatusData,
  PatchNetworkingDatumapisComV1AlphaNamespacedNetworkContextStatusResponses,
  PatchNetworkingDatumapisComV1AlphaNamespacedNetworkContextStatusErrors,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkContextStatusData,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkContextStatusResponses,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkContextStatusErrors,
  DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedNetworkPolicyData,
  DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedNetworkPolicyResponses,
  DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedNetworkPolicyErrors,
  ListNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyData,
  ListNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyResponses,
  ListNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyErrors,
  CreateNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyData,
  CreateNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyResponses,
  CreateNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyErrors,
  DeleteNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyData,
  DeleteNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyResponses,
  DeleteNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyErrors,
  ReadNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyData,
  ReadNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyResponses,
  ReadNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyErrors,
  PatchNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyData,
  PatchNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyResponses,
  PatchNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyErrors,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyData,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyResponses,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyErrors,
  ReadNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyStatusData,
  ReadNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyStatusResponses,
  ReadNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyStatusErrors,
  PatchNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyStatusData,
  PatchNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyStatusResponses,
  PatchNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyStatusErrors,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyStatusData,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyStatusResponses,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyStatusErrors,
  DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedNetworkData,
  DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedNetworkResponses,
  DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedNetworkErrors,
  ListNetworkingDatumapisComV1AlphaNamespacedNetworkData,
  ListNetworkingDatumapisComV1AlphaNamespacedNetworkResponses,
  ListNetworkingDatumapisComV1AlphaNamespacedNetworkErrors,
  CreateNetworkingDatumapisComV1AlphaNamespacedNetworkData,
  CreateNetworkingDatumapisComV1AlphaNamespacedNetworkResponses,
  CreateNetworkingDatumapisComV1AlphaNamespacedNetworkErrors,
  DeleteNetworkingDatumapisComV1AlphaNamespacedNetworkData,
  DeleteNetworkingDatumapisComV1AlphaNamespacedNetworkResponses,
  DeleteNetworkingDatumapisComV1AlphaNamespacedNetworkErrors,
  ReadNetworkingDatumapisComV1AlphaNamespacedNetworkData,
  ReadNetworkingDatumapisComV1AlphaNamespacedNetworkResponses,
  ReadNetworkingDatumapisComV1AlphaNamespacedNetworkErrors,
  PatchNetworkingDatumapisComV1AlphaNamespacedNetworkData,
  PatchNetworkingDatumapisComV1AlphaNamespacedNetworkResponses,
  PatchNetworkingDatumapisComV1AlphaNamespacedNetworkErrors,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkData,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkResponses,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkErrors,
  ReadNetworkingDatumapisComV1AlphaNamespacedNetworkStatusData,
  ReadNetworkingDatumapisComV1AlphaNamespacedNetworkStatusResponses,
  ReadNetworkingDatumapisComV1AlphaNamespacedNetworkStatusErrors,
  PatchNetworkingDatumapisComV1AlphaNamespacedNetworkStatusData,
  PatchNetworkingDatumapisComV1AlphaNamespacedNetworkStatusResponses,
  PatchNetworkingDatumapisComV1AlphaNamespacedNetworkStatusErrors,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkStatusData,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkStatusResponses,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkStatusErrors,
  DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedSubnetClaimData,
  DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedSubnetClaimResponses,
  DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedSubnetClaimErrors,
  ListNetworkingDatumapisComV1AlphaNamespacedSubnetClaimData,
  ListNetworkingDatumapisComV1AlphaNamespacedSubnetClaimResponses,
  ListNetworkingDatumapisComV1AlphaNamespacedSubnetClaimErrors,
  CreateNetworkingDatumapisComV1AlphaNamespacedSubnetClaimData,
  CreateNetworkingDatumapisComV1AlphaNamespacedSubnetClaimResponses,
  CreateNetworkingDatumapisComV1AlphaNamespacedSubnetClaimErrors,
  DeleteNetworkingDatumapisComV1AlphaNamespacedSubnetClaimData,
  DeleteNetworkingDatumapisComV1AlphaNamespacedSubnetClaimResponses,
  DeleteNetworkingDatumapisComV1AlphaNamespacedSubnetClaimErrors,
  ReadNetworkingDatumapisComV1AlphaNamespacedSubnetClaimData,
  ReadNetworkingDatumapisComV1AlphaNamespacedSubnetClaimResponses,
  ReadNetworkingDatumapisComV1AlphaNamespacedSubnetClaimErrors,
  PatchNetworkingDatumapisComV1AlphaNamespacedSubnetClaimData,
  PatchNetworkingDatumapisComV1AlphaNamespacedSubnetClaimResponses,
  PatchNetworkingDatumapisComV1AlphaNamespacedSubnetClaimErrors,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedSubnetClaimData,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedSubnetClaimResponses,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedSubnetClaimErrors,
  ReadNetworkingDatumapisComV1AlphaNamespacedSubnetClaimStatusData,
  ReadNetworkingDatumapisComV1AlphaNamespacedSubnetClaimStatusResponses,
  ReadNetworkingDatumapisComV1AlphaNamespacedSubnetClaimStatusErrors,
  PatchNetworkingDatumapisComV1AlphaNamespacedSubnetClaimStatusData,
  PatchNetworkingDatumapisComV1AlphaNamespacedSubnetClaimStatusResponses,
  PatchNetworkingDatumapisComV1AlphaNamespacedSubnetClaimStatusErrors,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedSubnetClaimStatusData,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedSubnetClaimStatusResponses,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedSubnetClaimStatusErrors,
  DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedSubnetData,
  DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedSubnetResponses,
  DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedSubnetErrors,
  ListNetworkingDatumapisComV1AlphaNamespacedSubnetData,
  ListNetworkingDatumapisComV1AlphaNamespacedSubnetResponses,
  ListNetworkingDatumapisComV1AlphaNamespacedSubnetErrors,
  CreateNetworkingDatumapisComV1AlphaNamespacedSubnetData,
  CreateNetworkingDatumapisComV1AlphaNamespacedSubnetResponses,
  CreateNetworkingDatumapisComV1AlphaNamespacedSubnetErrors,
  DeleteNetworkingDatumapisComV1AlphaNamespacedSubnetData,
  DeleteNetworkingDatumapisComV1AlphaNamespacedSubnetResponses,
  DeleteNetworkingDatumapisComV1AlphaNamespacedSubnetErrors,
  ReadNetworkingDatumapisComV1AlphaNamespacedSubnetData,
  ReadNetworkingDatumapisComV1AlphaNamespacedSubnetResponses,
  ReadNetworkingDatumapisComV1AlphaNamespacedSubnetErrors,
  PatchNetworkingDatumapisComV1AlphaNamespacedSubnetData,
  PatchNetworkingDatumapisComV1AlphaNamespacedSubnetResponses,
  PatchNetworkingDatumapisComV1AlphaNamespacedSubnetErrors,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedSubnetData,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedSubnetResponses,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedSubnetErrors,
  ReadNetworkingDatumapisComV1AlphaNamespacedSubnetStatusData,
  ReadNetworkingDatumapisComV1AlphaNamespacedSubnetStatusResponses,
  ReadNetworkingDatumapisComV1AlphaNamespacedSubnetStatusErrors,
  PatchNetworkingDatumapisComV1AlphaNamespacedSubnetStatusData,
  PatchNetworkingDatumapisComV1AlphaNamespacedSubnetStatusResponses,
  PatchNetworkingDatumapisComV1AlphaNamespacedSubnetStatusErrors,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedSubnetStatusData,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedSubnetStatusResponses,
  ReplaceNetworkingDatumapisComV1AlphaNamespacedSubnetStatusErrors,
  ListNetworkingDatumapisComV1AlphaNetworkBindingForAllNamespacesData,
  ListNetworkingDatumapisComV1AlphaNetworkBindingForAllNamespacesResponses,
  ListNetworkingDatumapisComV1AlphaNetworkBindingForAllNamespacesErrors,
  ListNetworkingDatumapisComV1AlphaNetworkContextForAllNamespacesData,
  ListNetworkingDatumapisComV1AlphaNetworkContextForAllNamespacesResponses,
  ListNetworkingDatumapisComV1AlphaNetworkContextForAllNamespacesErrors,
  ListNetworkingDatumapisComV1AlphaNetworkPolicyForAllNamespacesData,
  ListNetworkingDatumapisComV1AlphaNetworkPolicyForAllNamespacesResponses,
  ListNetworkingDatumapisComV1AlphaNetworkPolicyForAllNamespacesErrors,
  ListNetworkingDatumapisComV1AlphaNetworkForAllNamespacesData,
  ListNetworkingDatumapisComV1AlphaNetworkForAllNamespacesResponses,
  ListNetworkingDatumapisComV1AlphaNetworkForAllNamespacesErrors,
  ListNetworkingDatumapisComV1AlphaSubnetClaimForAllNamespacesData,
  ListNetworkingDatumapisComV1AlphaSubnetClaimForAllNamespacesResponses,
  ListNetworkingDatumapisComV1AlphaSubnetClaimForAllNamespacesErrors,
  ListNetworkingDatumapisComV1AlphaSubnetForAllNamespacesData,
  ListNetworkingDatumapisComV1AlphaSubnetForAllNamespacesResponses,
  ListNetworkingDatumapisComV1AlphaSubnetForAllNamespacesErrors,
} from './types.gen';
import type { Options as ClientOptions, TDataShape, Client } from '@hey-api/client-axios';

export type Options<
  TData extends TDataShape = TDataShape,
  ThrowOnError extends boolean = boolean,
> = ClientOptions<TData, ThrowOnError> & {
  /**
   * You can provide a client instance returned by `createClient()` instead of
   * individual options. This might be also useful if you want to implement a
   * custom client.
   */
  client?: Client;
  /**
   * You can pass arbitrary values through the `meta` object. This can be
   * used to access values that aren't defined as part of the SDK function.
   */
  meta?: Record<string, unknown>;
};

/**
 * list objects of kind Domain
 */
export const listNetworkingDatumapisComV1AlphaDomainForAllNamespaces = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<ListNetworkingDatumapisComV1AlphaDomainForAllNamespacesData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    ListNetworkingDatumapisComV1AlphaDomainForAllNamespacesResponses,
    ListNetworkingDatumapisComV1AlphaDomainForAllNamespacesErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/domains',
    ...options,
  });
};

/**
 * list objects of kind HTTPProxy
 */
export const listNetworkingDatumapisComV1AlphaHttpProxyForAllNamespaces = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<ListNetworkingDatumapisComV1AlphaHttpProxyForAllNamespacesData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    ListNetworkingDatumapisComV1AlphaHttpProxyForAllNamespacesResponses,
    ListNetworkingDatumapisComV1AlphaHttpProxyForAllNamespacesErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/httpproxies',
    ...options,
  });
};

/**
 * list objects of kind Location
 */
export const listNetworkingDatumapisComV1AlphaLocationForAllNamespaces = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<ListNetworkingDatumapisComV1AlphaLocationForAllNamespacesData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    ListNetworkingDatumapisComV1AlphaLocationForAllNamespacesResponses,
    ListNetworkingDatumapisComV1AlphaLocationForAllNamespacesErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/locations',
    ...options,
  });
};

/**
 * delete collection of Domain
 */
export const deleteNetworkingDatumapisComV1AlphaCollectionNamespacedDomain = <
  ThrowOnError extends boolean = false,
>(
  options: Options<DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedDomainData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).delete<
    DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedDomainResponses,
    DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedDomainErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/domains',
    ...options,
  });
};

/**
 * list objects of kind Domain
 */
export const listNetworkingDatumapisComV1AlphaNamespacedDomain = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ListNetworkingDatumapisComV1AlphaNamespacedDomainData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    ListNetworkingDatumapisComV1AlphaNamespacedDomainResponses,
    ListNetworkingDatumapisComV1AlphaNamespacedDomainErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/domains',
    ...options,
  });
};

/**
 * create a Domain
 */
export const createNetworkingDatumapisComV1AlphaNamespacedDomain = <
  ThrowOnError extends boolean = false,
>(
  options: Options<CreateNetworkingDatumapisComV1AlphaNamespacedDomainData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    CreateNetworkingDatumapisComV1AlphaNamespacedDomainResponses,
    CreateNetworkingDatumapisComV1AlphaNamespacedDomainErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/domains',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};

/**
 * delete a Domain
 */
export const deleteNetworkingDatumapisComV1AlphaNamespacedDomain = <
  ThrowOnError extends boolean = false,
>(
  options: Options<DeleteNetworkingDatumapisComV1AlphaNamespacedDomainData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).delete<
    DeleteNetworkingDatumapisComV1AlphaNamespacedDomainResponses,
    DeleteNetworkingDatumapisComV1AlphaNamespacedDomainErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/domains/{name}',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};

/**
 * read the specified Domain
 */
export const readNetworkingDatumapisComV1AlphaNamespacedDomain = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ReadNetworkingDatumapisComV1AlphaNamespacedDomainData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    ReadNetworkingDatumapisComV1AlphaNamespacedDomainResponses,
    ReadNetworkingDatumapisComV1AlphaNamespacedDomainErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/domains/{name}',
    ...options,
  });
};

/**
 * partially update the specified Domain
 */
export const patchNetworkingDatumapisComV1AlphaNamespacedDomain = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PatchNetworkingDatumapisComV1AlphaNamespacedDomainData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).patch<
    PatchNetworkingDatumapisComV1AlphaNamespacedDomainResponses,
    PatchNetworkingDatumapisComV1AlphaNamespacedDomainErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/domains/{name}',
    ...options,
    headers: {
      'Content-Type': 'application/json-patch+json',
      ...options.headers,
    },
  });
};

/**
 * replace the specified Domain
 */
export const replaceNetworkingDatumapisComV1AlphaNamespacedDomain = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ReplaceNetworkingDatumapisComV1AlphaNamespacedDomainData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).put<
    ReplaceNetworkingDatumapisComV1AlphaNamespacedDomainResponses,
    ReplaceNetworkingDatumapisComV1AlphaNamespacedDomainErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/domains/{name}',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};

/**
 * read status of the specified Domain
 */
export const readNetworkingDatumapisComV1AlphaNamespacedDomainStatus = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ReadNetworkingDatumapisComV1AlphaNamespacedDomainStatusData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    ReadNetworkingDatumapisComV1AlphaNamespacedDomainStatusResponses,
    ReadNetworkingDatumapisComV1AlphaNamespacedDomainStatusErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/domains/{name}/status',
    ...options,
  });
};

/**
 * partially update status of the specified Domain
 */
export const patchNetworkingDatumapisComV1AlphaNamespacedDomainStatus = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PatchNetworkingDatumapisComV1AlphaNamespacedDomainStatusData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).patch<
    PatchNetworkingDatumapisComV1AlphaNamespacedDomainStatusResponses,
    PatchNetworkingDatumapisComV1AlphaNamespacedDomainStatusErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/domains/{name}/status',
    ...options,
    headers: {
      'Content-Type': 'application/json-patch+json',
      ...options.headers,
    },
  });
};

/**
 * replace status of the specified Domain
 */
export const replaceNetworkingDatumapisComV1AlphaNamespacedDomainStatus = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ReplaceNetworkingDatumapisComV1AlphaNamespacedDomainStatusData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).put<
    ReplaceNetworkingDatumapisComV1AlphaNamespacedDomainStatusResponses,
    ReplaceNetworkingDatumapisComV1AlphaNamespacedDomainStatusErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/domains/{name}/status',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};

/**
 * delete collection of HTTPProxy
 */
export const deleteNetworkingDatumapisComV1AlphaCollectionNamespacedHttpProxy = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedHttpProxyData,
    ThrowOnError
  >
) => {
  return (options.client ?? _heyApiClient).delete<
    DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedHttpProxyResponses,
    DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedHttpProxyErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/httpproxies',
    ...options,
  });
};

/**
 * list objects of kind HTTPProxy
 */
export const listNetworkingDatumapisComV1AlphaNamespacedHttpProxy = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ListNetworkingDatumapisComV1AlphaNamespacedHttpProxyData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    ListNetworkingDatumapisComV1AlphaNamespacedHttpProxyResponses,
    ListNetworkingDatumapisComV1AlphaNamespacedHttpProxyErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/httpproxies',
    ...options,
  });
};

/**
 * create a HTTPProxy
 */
export const createNetworkingDatumapisComV1AlphaNamespacedHttpProxy = <
  ThrowOnError extends boolean = false,
>(
  options: Options<CreateNetworkingDatumapisComV1AlphaNamespacedHttpProxyData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    CreateNetworkingDatumapisComV1AlphaNamespacedHttpProxyResponses,
    CreateNetworkingDatumapisComV1AlphaNamespacedHttpProxyErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/httpproxies',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};

/**
 * delete a HTTPProxy
 */
export const deleteNetworkingDatumapisComV1AlphaNamespacedHttpProxy = <
  ThrowOnError extends boolean = false,
>(
  options: Options<DeleteNetworkingDatumapisComV1AlphaNamespacedHttpProxyData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).delete<
    DeleteNetworkingDatumapisComV1AlphaNamespacedHttpProxyResponses,
    DeleteNetworkingDatumapisComV1AlphaNamespacedHttpProxyErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/httpproxies/{name}',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};

/**
 * read the specified HTTPProxy
 */
export const readNetworkingDatumapisComV1AlphaNamespacedHttpProxy = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ReadNetworkingDatumapisComV1AlphaNamespacedHttpProxyData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    ReadNetworkingDatumapisComV1AlphaNamespacedHttpProxyResponses,
    ReadNetworkingDatumapisComV1AlphaNamespacedHttpProxyErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/httpproxies/{name}',
    ...options,
  });
};

/**
 * partially update the specified HTTPProxy
 */
export const patchNetworkingDatumapisComV1AlphaNamespacedHttpProxy = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PatchNetworkingDatumapisComV1AlphaNamespacedHttpProxyData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).patch<
    PatchNetworkingDatumapisComV1AlphaNamespacedHttpProxyResponses,
    PatchNetworkingDatumapisComV1AlphaNamespacedHttpProxyErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/httpproxies/{name}',
    ...options,
    headers: {
      'Content-Type': 'application/json-patch+json',
      ...options.headers,
    },
  });
};

/**
 * replace the specified HTTPProxy
 */
export const replaceNetworkingDatumapisComV1AlphaNamespacedHttpProxy = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ReplaceNetworkingDatumapisComV1AlphaNamespacedHttpProxyData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).put<
    ReplaceNetworkingDatumapisComV1AlphaNamespacedHttpProxyResponses,
    ReplaceNetworkingDatumapisComV1AlphaNamespacedHttpProxyErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/httpproxies/{name}',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};

/**
 * read status of the specified HTTPProxy
 */
export const readNetworkingDatumapisComV1AlphaNamespacedHttpProxyStatus = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ReadNetworkingDatumapisComV1AlphaNamespacedHttpProxyStatusData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    ReadNetworkingDatumapisComV1AlphaNamespacedHttpProxyStatusResponses,
    ReadNetworkingDatumapisComV1AlphaNamespacedHttpProxyStatusErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/httpproxies/{name}/status',
    ...options,
  });
};

/**
 * partially update status of the specified HTTPProxy
 */
export const patchNetworkingDatumapisComV1AlphaNamespacedHttpProxyStatus = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PatchNetworkingDatumapisComV1AlphaNamespacedHttpProxyStatusData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).patch<
    PatchNetworkingDatumapisComV1AlphaNamespacedHttpProxyStatusResponses,
    PatchNetworkingDatumapisComV1AlphaNamespacedHttpProxyStatusErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/httpproxies/{name}/status',
    ...options,
    headers: {
      'Content-Type': 'application/json-patch+json',
      ...options.headers,
    },
  });
};

/**
 * replace status of the specified HTTPProxy
 */
export const replaceNetworkingDatumapisComV1AlphaNamespacedHttpProxyStatus = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ReplaceNetworkingDatumapisComV1AlphaNamespacedHttpProxyStatusData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).put<
    ReplaceNetworkingDatumapisComV1AlphaNamespacedHttpProxyStatusResponses,
    ReplaceNetworkingDatumapisComV1AlphaNamespacedHttpProxyStatusErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/httpproxies/{name}/status',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};

/**
 * delete collection of Location
 */
export const deleteNetworkingDatumapisComV1AlphaCollectionNamespacedLocation = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedLocationData,
    ThrowOnError
  >
) => {
  return (options.client ?? _heyApiClient).delete<
    DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedLocationResponses,
    DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedLocationErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/locations',
    ...options,
  });
};

/**
 * list objects of kind Location
 */
export const listNetworkingDatumapisComV1AlphaNamespacedLocation = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ListNetworkingDatumapisComV1AlphaNamespacedLocationData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    ListNetworkingDatumapisComV1AlphaNamespacedLocationResponses,
    ListNetworkingDatumapisComV1AlphaNamespacedLocationErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/locations',
    ...options,
  });
};

/**
 * create a Location
 */
export const createNetworkingDatumapisComV1AlphaNamespacedLocation = <
  ThrowOnError extends boolean = false,
>(
  options: Options<CreateNetworkingDatumapisComV1AlphaNamespacedLocationData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    CreateNetworkingDatumapisComV1AlphaNamespacedLocationResponses,
    CreateNetworkingDatumapisComV1AlphaNamespacedLocationErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/locations',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};

/**
 * delete a Location
 */
export const deleteNetworkingDatumapisComV1AlphaNamespacedLocation = <
  ThrowOnError extends boolean = false,
>(
  options: Options<DeleteNetworkingDatumapisComV1AlphaNamespacedLocationData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).delete<
    DeleteNetworkingDatumapisComV1AlphaNamespacedLocationResponses,
    DeleteNetworkingDatumapisComV1AlphaNamespacedLocationErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/locations/{name}',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};

/**
 * read the specified Location
 */
export const readNetworkingDatumapisComV1AlphaNamespacedLocation = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ReadNetworkingDatumapisComV1AlphaNamespacedLocationData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    ReadNetworkingDatumapisComV1AlphaNamespacedLocationResponses,
    ReadNetworkingDatumapisComV1AlphaNamespacedLocationErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/locations/{name}',
    ...options,
  });
};

/**
 * partially update the specified Location
 */
export const patchNetworkingDatumapisComV1AlphaNamespacedLocation = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PatchNetworkingDatumapisComV1AlphaNamespacedLocationData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).patch<
    PatchNetworkingDatumapisComV1AlphaNamespacedLocationResponses,
    PatchNetworkingDatumapisComV1AlphaNamespacedLocationErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/locations/{name}',
    ...options,
    headers: {
      'Content-Type': 'application/json-patch+json',
      ...options.headers,
    },
  });
};

/**
 * replace the specified Location
 */
export const replaceNetworkingDatumapisComV1AlphaNamespacedLocation = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ReplaceNetworkingDatumapisComV1AlphaNamespacedLocationData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).put<
    ReplaceNetworkingDatumapisComV1AlphaNamespacedLocationResponses,
    ReplaceNetworkingDatumapisComV1AlphaNamespacedLocationErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/locations/{name}',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};

/**
 * read status of the specified Location
 */
export const readNetworkingDatumapisComV1AlphaNamespacedLocationStatus = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ReadNetworkingDatumapisComV1AlphaNamespacedLocationStatusData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    ReadNetworkingDatumapisComV1AlphaNamespacedLocationStatusResponses,
    ReadNetworkingDatumapisComV1AlphaNamespacedLocationStatusErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/locations/{name}/status',
    ...options,
  });
};

/**
 * partially update status of the specified Location
 */
export const patchNetworkingDatumapisComV1AlphaNamespacedLocationStatus = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PatchNetworkingDatumapisComV1AlphaNamespacedLocationStatusData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).patch<
    PatchNetworkingDatumapisComV1AlphaNamespacedLocationStatusResponses,
    PatchNetworkingDatumapisComV1AlphaNamespacedLocationStatusErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/locations/{name}/status',
    ...options,
    headers: {
      'Content-Type': 'application/json-patch+json',
      ...options.headers,
    },
  });
};

/**
 * replace status of the specified Location
 */
export const replaceNetworkingDatumapisComV1AlphaNamespacedLocationStatus = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ReplaceNetworkingDatumapisComV1AlphaNamespacedLocationStatusData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).put<
    ReplaceNetworkingDatumapisComV1AlphaNamespacedLocationStatusResponses,
    ReplaceNetworkingDatumapisComV1AlphaNamespacedLocationStatusErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/locations/{name}/status',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};

/**
 * delete collection of NetworkBinding
 */
export const deleteNetworkingDatumapisComV1AlphaCollectionNamespacedNetworkBinding = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedNetworkBindingData,
    ThrowOnError
  >
) => {
  return (options.client ?? _heyApiClient).delete<
    DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedNetworkBindingResponses,
    DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedNetworkBindingErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networkbindings',
    ...options,
  });
};

/**
 * list objects of kind NetworkBinding
 */
export const listNetworkingDatumapisComV1AlphaNamespacedNetworkBinding = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ListNetworkingDatumapisComV1AlphaNamespacedNetworkBindingData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    ListNetworkingDatumapisComV1AlphaNamespacedNetworkBindingResponses,
    ListNetworkingDatumapisComV1AlphaNamespacedNetworkBindingErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networkbindings',
    ...options,
  });
};

/**
 * create a NetworkBinding
 */
export const createNetworkingDatumapisComV1AlphaNamespacedNetworkBinding = <
  ThrowOnError extends boolean = false,
>(
  options: Options<CreateNetworkingDatumapisComV1AlphaNamespacedNetworkBindingData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    CreateNetworkingDatumapisComV1AlphaNamespacedNetworkBindingResponses,
    CreateNetworkingDatumapisComV1AlphaNamespacedNetworkBindingErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networkbindings',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};

/**
 * delete a NetworkBinding
 */
export const deleteNetworkingDatumapisComV1AlphaNamespacedNetworkBinding = <
  ThrowOnError extends boolean = false,
>(
  options: Options<DeleteNetworkingDatumapisComV1AlphaNamespacedNetworkBindingData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).delete<
    DeleteNetworkingDatumapisComV1AlphaNamespacedNetworkBindingResponses,
    DeleteNetworkingDatumapisComV1AlphaNamespacedNetworkBindingErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networkbindings/{name}',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};

/**
 * read the specified NetworkBinding
 */
export const readNetworkingDatumapisComV1AlphaNamespacedNetworkBinding = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ReadNetworkingDatumapisComV1AlphaNamespacedNetworkBindingData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    ReadNetworkingDatumapisComV1AlphaNamespacedNetworkBindingResponses,
    ReadNetworkingDatumapisComV1AlphaNamespacedNetworkBindingErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networkbindings/{name}',
    ...options,
  });
};

/**
 * partially update the specified NetworkBinding
 */
export const patchNetworkingDatumapisComV1AlphaNamespacedNetworkBinding = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PatchNetworkingDatumapisComV1AlphaNamespacedNetworkBindingData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).patch<
    PatchNetworkingDatumapisComV1AlphaNamespacedNetworkBindingResponses,
    PatchNetworkingDatumapisComV1AlphaNamespacedNetworkBindingErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networkbindings/{name}',
    ...options,
    headers: {
      'Content-Type': 'application/json-patch+json',
      ...options.headers,
    },
  });
};

/**
 * replace the specified NetworkBinding
 */
export const replaceNetworkingDatumapisComV1AlphaNamespacedNetworkBinding = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkBindingData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).put<
    ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkBindingResponses,
    ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkBindingErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networkbindings/{name}',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};

/**
 * read status of the specified NetworkBinding
 */
export const readNetworkingDatumapisComV1AlphaNamespacedNetworkBindingStatus = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    ReadNetworkingDatumapisComV1AlphaNamespacedNetworkBindingStatusData,
    ThrowOnError
  >
) => {
  return (options.client ?? _heyApiClient).get<
    ReadNetworkingDatumapisComV1AlphaNamespacedNetworkBindingStatusResponses,
    ReadNetworkingDatumapisComV1AlphaNamespacedNetworkBindingStatusErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networkbindings/{name}/status',
    ...options,
  });
};

/**
 * partially update status of the specified NetworkBinding
 */
export const patchNetworkingDatumapisComV1AlphaNamespacedNetworkBindingStatus = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    PatchNetworkingDatumapisComV1AlphaNamespacedNetworkBindingStatusData,
    ThrowOnError
  >
) => {
  return (options.client ?? _heyApiClient).patch<
    PatchNetworkingDatumapisComV1AlphaNamespacedNetworkBindingStatusResponses,
    PatchNetworkingDatumapisComV1AlphaNamespacedNetworkBindingStatusErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networkbindings/{name}/status',
    ...options,
    headers: {
      'Content-Type': 'application/json-patch+json',
      ...options.headers,
    },
  });
};

/**
 * replace status of the specified NetworkBinding
 */
export const replaceNetworkingDatumapisComV1AlphaNamespacedNetworkBindingStatus = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkBindingStatusData,
    ThrowOnError
  >
) => {
  return (options.client ?? _heyApiClient).put<
    ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkBindingStatusResponses,
    ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkBindingStatusErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networkbindings/{name}/status',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};

/**
 * delete collection of NetworkContext
 */
export const deleteNetworkingDatumapisComV1AlphaCollectionNamespacedNetworkContext = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedNetworkContextData,
    ThrowOnError
  >
) => {
  return (options.client ?? _heyApiClient).delete<
    DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedNetworkContextResponses,
    DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedNetworkContextErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networkcontexts',
    ...options,
  });
};

/**
 * list objects of kind NetworkContext
 */
export const listNetworkingDatumapisComV1AlphaNamespacedNetworkContext = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ListNetworkingDatumapisComV1AlphaNamespacedNetworkContextData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    ListNetworkingDatumapisComV1AlphaNamespacedNetworkContextResponses,
    ListNetworkingDatumapisComV1AlphaNamespacedNetworkContextErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networkcontexts',
    ...options,
  });
};

/**
 * create a NetworkContext
 */
export const createNetworkingDatumapisComV1AlphaNamespacedNetworkContext = <
  ThrowOnError extends boolean = false,
>(
  options: Options<CreateNetworkingDatumapisComV1AlphaNamespacedNetworkContextData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    CreateNetworkingDatumapisComV1AlphaNamespacedNetworkContextResponses,
    CreateNetworkingDatumapisComV1AlphaNamespacedNetworkContextErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networkcontexts',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};

/**
 * delete a NetworkContext
 */
export const deleteNetworkingDatumapisComV1AlphaNamespacedNetworkContext = <
  ThrowOnError extends boolean = false,
>(
  options: Options<DeleteNetworkingDatumapisComV1AlphaNamespacedNetworkContextData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).delete<
    DeleteNetworkingDatumapisComV1AlphaNamespacedNetworkContextResponses,
    DeleteNetworkingDatumapisComV1AlphaNamespacedNetworkContextErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networkcontexts/{name}',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};

/**
 * read the specified NetworkContext
 */
export const readNetworkingDatumapisComV1AlphaNamespacedNetworkContext = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ReadNetworkingDatumapisComV1AlphaNamespacedNetworkContextData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    ReadNetworkingDatumapisComV1AlphaNamespacedNetworkContextResponses,
    ReadNetworkingDatumapisComV1AlphaNamespacedNetworkContextErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networkcontexts/{name}',
    ...options,
  });
};

/**
 * partially update the specified NetworkContext
 */
export const patchNetworkingDatumapisComV1AlphaNamespacedNetworkContext = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PatchNetworkingDatumapisComV1AlphaNamespacedNetworkContextData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).patch<
    PatchNetworkingDatumapisComV1AlphaNamespacedNetworkContextResponses,
    PatchNetworkingDatumapisComV1AlphaNamespacedNetworkContextErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networkcontexts/{name}',
    ...options,
    headers: {
      'Content-Type': 'application/json-patch+json',
      ...options.headers,
    },
  });
};

/**
 * replace the specified NetworkContext
 */
export const replaceNetworkingDatumapisComV1AlphaNamespacedNetworkContext = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkContextData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).put<
    ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkContextResponses,
    ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkContextErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networkcontexts/{name}',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};

/**
 * read status of the specified NetworkContext
 */
export const readNetworkingDatumapisComV1AlphaNamespacedNetworkContextStatus = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    ReadNetworkingDatumapisComV1AlphaNamespacedNetworkContextStatusData,
    ThrowOnError
  >
) => {
  return (options.client ?? _heyApiClient).get<
    ReadNetworkingDatumapisComV1AlphaNamespacedNetworkContextStatusResponses,
    ReadNetworkingDatumapisComV1AlphaNamespacedNetworkContextStatusErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networkcontexts/{name}/status',
    ...options,
  });
};

/**
 * partially update status of the specified NetworkContext
 */
export const patchNetworkingDatumapisComV1AlphaNamespacedNetworkContextStatus = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    PatchNetworkingDatumapisComV1AlphaNamespacedNetworkContextStatusData,
    ThrowOnError
  >
) => {
  return (options.client ?? _heyApiClient).patch<
    PatchNetworkingDatumapisComV1AlphaNamespacedNetworkContextStatusResponses,
    PatchNetworkingDatumapisComV1AlphaNamespacedNetworkContextStatusErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networkcontexts/{name}/status',
    ...options,
    headers: {
      'Content-Type': 'application/json-patch+json',
      ...options.headers,
    },
  });
};

/**
 * replace status of the specified NetworkContext
 */
export const replaceNetworkingDatumapisComV1AlphaNamespacedNetworkContextStatus = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkContextStatusData,
    ThrowOnError
  >
) => {
  return (options.client ?? _heyApiClient).put<
    ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkContextStatusResponses,
    ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkContextStatusErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networkcontexts/{name}/status',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};

/**
 * delete collection of NetworkPolicy
 */
export const deleteNetworkingDatumapisComV1AlphaCollectionNamespacedNetworkPolicy = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedNetworkPolicyData,
    ThrowOnError
  >
) => {
  return (options.client ?? _heyApiClient).delete<
    DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedNetworkPolicyResponses,
    DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedNetworkPolicyErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networkpolicies',
    ...options,
  });
};

/**
 * list objects of kind NetworkPolicy
 */
export const listNetworkingDatumapisComV1AlphaNamespacedNetworkPolicy = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ListNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    ListNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyResponses,
    ListNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networkpolicies',
    ...options,
  });
};

/**
 * create a NetworkPolicy
 */
export const createNetworkingDatumapisComV1AlphaNamespacedNetworkPolicy = <
  ThrowOnError extends boolean = false,
>(
  options: Options<CreateNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    CreateNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyResponses,
    CreateNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networkpolicies',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};

/**
 * delete a NetworkPolicy
 */
export const deleteNetworkingDatumapisComV1AlphaNamespacedNetworkPolicy = <
  ThrowOnError extends boolean = false,
>(
  options: Options<DeleteNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).delete<
    DeleteNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyResponses,
    DeleteNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networkpolicies/{name}',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};

/**
 * read the specified NetworkPolicy
 */
export const readNetworkingDatumapisComV1AlphaNamespacedNetworkPolicy = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ReadNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    ReadNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyResponses,
    ReadNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networkpolicies/{name}',
    ...options,
  });
};

/**
 * partially update the specified NetworkPolicy
 */
export const patchNetworkingDatumapisComV1AlphaNamespacedNetworkPolicy = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PatchNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).patch<
    PatchNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyResponses,
    PatchNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networkpolicies/{name}',
    ...options,
    headers: {
      'Content-Type': 'application/json-patch+json',
      ...options.headers,
    },
  });
};

/**
 * replace the specified NetworkPolicy
 */
export const replaceNetworkingDatumapisComV1AlphaNamespacedNetworkPolicy = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).put<
    ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyResponses,
    ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networkpolicies/{name}',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};

/**
 * read status of the specified NetworkPolicy
 */
export const readNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyStatus = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ReadNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyStatusData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    ReadNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyStatusResponses,
    ReadNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyStatusErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networkpolicies/{name}/status',
    ...options,
  });
};

/**
 * partially update status of the specified NetworkPolicy
 */
export const patchNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyStatus = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    PatchNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyStatusData,
    ThrowOnError
  >
) => {
  return (options.client ?? _heyApiClient).patch<
    PatchNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyStatusResponses,
    PatchNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyStatusErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networkpolicies/{name}/status',
    ...options,
    headers: {
      'Content-Type': 'application/json-patch+json',
      ...options.headers,
    },
  });
};

/**
 * replace status of the specified NetworkPolicy
 */
export const replaceNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyStatus = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyStatusData,
    ThrowOnError
  >
) => {
  return (options.client ?? _heyApiClient).put<
    ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyStatusResponses,
    ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkPolicyStatusErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networkpolicies/{name}/status',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};

/**
 * delete collection of Network
 */
export const deleteNetworkingDatumapisComV1AlphaCollectionNamespacedNetwork = <
  ThrowOnError extends boolean = false,
>(
  options: Options<DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedNetworkData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).delete<
    DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedNetworkResponses,
    DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedNetworkErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networks',
    ...options,
  });
};

/**
 * list objects of kind Network
 */
export const listNetworkingDatumapisComV1AlphaNamespacedNetwork = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ListNetworkingDatumapisComV1AlphaNamespacedNetworkData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    ListNetworkingDatumapisComV1AlphaNamespacedNetworkResponses,
    ListNetworkingDatumapisComV1AlphaNamespacedNetworkErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networks',
    ...options,
  });
};

/**
 * create a Network
 */
export const createNetworkingDatumapisComV1AlphaNamespacedNetwork = <
  ThrowOnError extends boolean = false,
>(
  options: Options<CreateNetworkingDatumapisComV1AlphaNamespacedNetworkData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    CreateNetworkingDatumapisComV1AlphaNamespacedNetworkResponses,
    CreateNetworkingDatumapisComV1AlphaNamespacedNetworkErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networks',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};

/**
 * delete a Network
 */
export const deleteNetworkingDatumapisComV1AlphaNamespacedNetwork = <
  ThrowOnError extends boolean = false,
>(
  options: Options<DeleteNetworkingDatumapisComV1AlphaNamespacedNetworkData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).delete<
    DeleteNetworkingDatumapisComV1AlphaNamespacedNetworkResponses,
    DeleteNetworkingDatumapisComV1AlphaNamespacedNetworkErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networks/{name}',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};

/**
 * read the specified Network
 */
export const readNetworkingDatumapisComV1AlphaNamespacedNetwork = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ReadNetworkingDatumapisComV1AlphaNamespacedNetworkData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    ReadNetworkingDatumapisComV1AlphaNamespacedNetworkResponses,
    ReadNetworkingDatumapisComV1AlphaNamespacedNetworkErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networks/{name}',
    ...options,
  });
};

/**
 * partially update the specified Network
 */
export const patchNetworkingDatumapisComV1AlphaNamespacedNetwork = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PatchNetworkingDatumapisComV1AlphaNamespacedNetworkData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).patch<
    PatchNetworkingDatumapisComV1AlphaNamespacedNetworkResponses,
    PatchNetworkingDatumapisComV1AlphaNamespacedNetworkErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networks/{name}',
    ...options,
    headers: {
      'Content-Type': 'application/json-patch+json',
      ...options.headers,
    },
  });
};

/**
 * replace the specified Network
 */
export const replaceNetworkingDatumapisComV1AlphaNamespacedNetwork = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).put<
    ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkResponses,
    ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networks/{name}',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};

/**
 * read status of the specified Network
 */
export const readNetworkingDatumapisComV1AlphaNamespacedNetworkStatus = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ReadNetworkingDatumapisComV1AlphaNamespacedNetworkStatusData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    ReadNetworkingDatumapisComV1AlphaNamespacedNetworkStatusResponses,
    ReadNetworkingDatumapisComV1AlphaNamespacedNetworkStatusErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networks/{name}/status',
    ...options,
  });
};

/**
 * partially update status of the specified Network
 */
export const patchNetworkingDatumapisComV1AlphaNamespacedNetworkStatus = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PatchNetworkingDatumapisComV1AlphaNamespacedNetworkStatusData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).patch<
    PatchNetworkingDatumapisComV1AlphaNamespacedNetworkStatusResponses,
    PatchNetworkingDatumapisComV1AlphaNamespacedNetworkStatusErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networks/{name}/status',
    ...options,
    headers: {
      'Content-Type': 'application/json-patch+json',
      ...options.headers,
    },
  });
};

/**
 * replace status of the specified Network
 */
export const replaceNetworkingDatumapisComV1AlphaNamespacedNetworkStatus = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkStatusData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).put<
    ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkStatusResponses,
    ReplaceNetworkingDatumapisComV1AlphaNamespacedNetworkStatusErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/networks/{name}/status',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};

/**
 * delete collection of SubnetClaim
 */
export const deleteNetworkingDatumapisComV1AlphaCollectionNamespacedSubnetClaim = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedSubnetClaimData,
    ThrowOnError
  >
) => {
  return (options.client ?? _heyApiClient).delete<
    DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedSubnetClaimResponses,
    DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedSubnetClaimErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/subnetclaims',
    ...options,
  });
};

/**
 * list objects of kind SubnetClaim
 */
export const listNetworkingDatumapisComV1AlphaNamespacedSubnetClaim = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ListNetworkingDatumapisComV1AlphaNamespacedSubnetClaimData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    ListNetworkingDatumapisComV1AlphaNamespacedSubnetClaimResponses,
    ListNetworkingDatumapisComV1AlphaNamespacedSubnetClaimErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/subnetclaims',
    ...options,
  });
};

/**
 * create a SubnetClaim
 */
export const createNetworkingDatumapisComV1AlphaNamespacedSubnetClaim = <
  ThrowOnError extends boolean = false,
>(
  options: Options<CreateNetworkingDatumapisComV1AlphaNamespacedSubnetClaimData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    CreateNetworkingDatumapisComV1AlphaNamespacedSubnetClaimResponses,
    CreateNetworkingDatumapisComV1AlphaNamespacedSubnetClaimErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/subnetclaims',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};

/**
 * delete a SubnetClaim
 */
export const deleteNetworkingDatumapisComV1AlphaNamespacedSubnetClaim = <
  ThrowOnError extends boolean = false,
>(
  options: Options<DeleteNetworkingDatumapisComV1AlphaNamespacedSubnetClaimData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).delete<
    DeleteNetworkingDatumapisComV1AlphaNamespacedSubnetClaimResponses,
    DeleteNetworkingDatumapisComV1AlphaNamespacedSubnetClaimErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/subnetclaims/{name}',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};

/**
 * read the specified SubnetClaim
 */
export const readNetworkingDatumapisComV1AlphaNamespacedSubnetClaim = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ReadNetworkingDatumapisComV1AlphaNamespacedSubnetClaimData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    ReadNetworkingDatumapisComV1AlphaNamespacedSubnetClaimResponses,
    ReadNetworkingDatumapisComV1AlphaNamespacedSubnetClaimErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/subnetclaims/{name}',
    ...options,
  });
};

/**
 * partially update the specified SubnetClaim
 */
export const patchNetworkingDatumapisComV1AlphaNamespacedSubnetClaim = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PatchNetworkingDatumapisComV1AlphaNamespacedSubnetClaimData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).patch<
    PatchNetworkingDatumapisComV1AlphaNamespacedSubnetClaimResponses,
    PatchNetworkingDatumapisComV1AlphaNamespacedSubnetClaimErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/subnetclaims/{name}',
    ...options,
    headers: {
      'Content-Type': 'application/json-patch+json',
      ...options.headers,
    },
  });
};

/**
 * replace the specified SubnetClaim
 */
export const replaceNetworkingDatumapisComV1AlphaNamespacedSubnetClaim = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ReplaceNetworkingDatumapisComV1AlphaNamespacedSubnetClaimData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).put<
    ReplaceNetworkingDatumapisComV1AlphaNamespacedSubnetClaimResponses,
    ReplaceNetworkingDatumapisComV1AlphaNamespacedSubnetClaimErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/subnetclaims/{name}',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};

/**
 * read status of the specified SubnetClaim
 */
export const readNetworkingDatumapisComV1AlphaNamespacedSubnetClaimStatus = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ReadNetworkingDatumapisComV1AlphaNamespacedSubnetClaimStatusData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    ReadNetworkingDatumapisComV1AlphaNamespacedSubnetClaimStatusResponses,
    ReadNetworkingDatumapisComV1AlphaNamespacedSubnetClaimStatusErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/subnetclaims/{name}/status',
    ...options,
  });
};

/**
 * partially update status of the specified SubnetClaim
 */
export const patchNetworkingDatumapisComV1AlphaNamespacedSubnetClaimStatus = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PatchNetworkingDatumapisComV1AlphaNamespacedSubnetClaimStatusData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).patch<
    PatchNetworkingDatumapisComV1AlphaNamespacedSubnetClaimStatusResponses,
    PatchNetworkingDatumapisComV1AlphaNamespacedSubnetClaimStatusErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/subnetclaims/{name}/status',
    ...options,
    headers: {
      'Content-Type': 'application/json-patch+json',
      ...options.headers,
    },
  });
};

/**
 * replace status of the specified SubnetClaim
 */
export const replaceNetworkingDatumapisComV1AlphaNamespacedSubnetClaimStatus = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    ReplaceNetworkingDatumapisComV1AlphaNamespacedSubnetClaimStatusData,
    ThrowOnError
  >
) => {
  return (options.client ?? _heyApiClient).put<
    ReplaceNetworkingDatumapisComV1AlphaNamespacedSubnetClaimStatusResponses,
    ReplaceNetworkingDatumapisComV1AlphaNamespacedSubnetClaimStatusErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/subnetclaims/{name}/status',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};

/**
 * delete collection of Subnet
 */
export const deleteNetworkingDatumapisComV1AlphaCollectionNamespacedSubnet = <
  ThrowOnError extends boolean = false,
>(
  options: Options<DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedSubnetData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).delete<
    DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedSubnetResponses,
    DeleteNetworkingDatumapisComV1AlphaCollectionNamespacedSubnetErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/subnets',
    ...options,
  });
};

/**
 * list objects of kind Subnet
 */
export const listNetworkingDatumapisComV1AlphaNamespacedSubnet = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ListNetworkingDatumapisComV1AlphaNamespacedSubnetData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    ListNetworkingDatumapisComV1AlphaNamespacedSubnetResponses,
    ListNetworkingDatumapisComV1AlphaNamespacedSubnetErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/subnets',
    ...options,
  });
};

/**
 * create a Subnet
 */
export const createNetworkingDatumapisComV1AlphaNamespacedSubnet = <
  ThrowOnError extends boolean = false,
>(
  options: Options<CreateNetworkingDatumapisComV1AlphaNamespacedSubnetData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    CreateNetworkingDatumapisComV1AlphaNamespacedSubnetResponses,
    CreateNetworkingDatumapisComV1AlphaNamespacedSubnetErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/subnets',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};

/**
 * delete a Subnet
 */
export const deleteNetworkingDatumapisComV1AlphaNamespacedSubnet = <
  ThrowOnError extends boolean = false,
>(
  options: Options<DeleteNetworkingDatumapisComV1AlphaNamespacedSubnetData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).delete<
    DeleteNetworkingDatumapisComV1AlphaNamespacedSubnetResponses,
    DeleteNetworkingDatumapisComV1AlphaNamespacedSubnetErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/subnets/{name}',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};

/**
 * read the specified Subnet
 */
export const readNetworkingDatumapisComV1AlphaNamespacedSubnet = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ReadNetworkingDatumapisComV1AlphaNamespacedSubnetData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    ReadNetworkingDatumapisComV1AlphaNamespacedSubnetResponses,
    ReadNetworkingDatumapisComV1AlphaNamespacedSubnetErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/subnets/{name}',
    ...options,
  });
};

/**
 * partially update the specified Subnet
 */
export const patchNetworkingDatumapisComV1AlphaNamespacedSubnet = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PatchNetworkingDatumapisComV1AlphaNamespacedSubnetData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).patch<
    PatchNetworkingDatumapisComV1AlphaNamespacedSubnetResponses,
    PatchNetworkingDatumapisComV1AlphaNamespacedSubnetErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/subnets/{name}',
    ...options,
    headers: {
      'Content-Type': 'application/json-patch+json',
      ...options.headers,
    },
  });
};

/**
 * replace the specified Subnet
 */
export const replaceNetworkingDatumapisComV1AlphaNamespacedSubnet = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ReplaceNetworkingDatumapisComV1AlphaNamespacedSubnetData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).put<
    ReplaceNetworkingDatumapisComV1AlphaNamespacedSubnetResponses,
    ReplaceNetworkingDatumapisComV1AlphaNamespacedSubnetErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/subnets/{name}',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};

/**
 * read status of the specified Subnet
 */
export const readNetworkingDatumapisComV1AlphaNamespacedSubnetStatus = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ReadNetworkingDatumapisComV1AlphaNamespacedSubnetStatusData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    ReadNetworkingDatumapisComV1AlphaNamespacedSubnetStatusResponses,
    ReadNetworkingDatumapisComV1AlphaNamespacedSubnetStatusErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/subnets/{name}/status',
    ...options,
  });
};

/**
 * partially update status of the specified Subnet
 */
export const patchNetworkingDatumapisComV1AlphaNamespacedSubnetStatus = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PatchNetworkingDatumapisComV1AlphaNamespacedSubnetStatusData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).patch<
    PatchNetworkingDatumapisComV1AlphaNamespacedSubnetStatusResponses,
    PatchNetworkingDatumapisComV1AlphaNamespacedSubnetStatusErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/subnets/{name}/status',
    ...options,
    headers: {
      'Content-Type': 'application/json-patch+json',
      ...options.headers,
    },
  });
};

/**
 * replace status of the specified Subnet
 */
export const replaceNetworkingDatumapisComV1AlphaNamespacedSubnetStatus = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ReplaceNetworkingDatumapisComV1AlphaNamespacedSubnetStatusData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).put<
    ReplaceNetworkingDatumapisComV1AlphaNamespacedSubnetStatusResponses,
    ReplaceNetworkingDatumapisComV1AlphaNamespacedSubnetStatusErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/namespaces/{namespace}/subnets/{name}/status',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};

/**
 * list objects of kind NetworkBinding
 */
export const listNetworkingDatumapisComV1AlphaNetworkBindingForAllNamespaces = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<
    ListNetworkingDatumapisComV1AlphaNetworkBindingForAllNamespacesData,
    ThrowOnError
  >
) => {
  return (options?.client ?? _heyApiClient).get<
    ListNetworkingDatumapisComV1AlphaNetworkBindingForAllNamespacesResponses,
    ListNetworkingDatumapisComV1AlphaNetworkBindingForAllNamespacesErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/networkbindings',
    ...options,
  });
};

/**
 * list objects of kind NetworkContext
 */
export const listNetworkingDatumapisComV1AlphaNetworkContextForAllNamespaces = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<
    ListNetworkingDatumapisComV1AlphaNetworkContextForAllNamespacesData,
    ThrowOnError
  >
) => {
  return (options?.client ?? _heyApiClient).get<
    ListNetworkingDatumapisComV1AlphaNetworkContextForAllNamespacesResponses,
    ListNetworkingDatumapisComV1AlphaNetworkContextForAllNamespacesErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/networkcontexts',
    ...options,
  });
};

/**
 * list objects of kind NetworkPolicy
 */
export const listNetworkingDatumapisComV1AlphaNetworkPolicyForAllNamespaces = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<
    ListNetworkingDatumapisComV1AlphaNetworkPolicyForAllNamespacesData,
    ThrowOnError
  >
) => {
  return (options?.client ?? _heyApiClient).get<
    ListNetworkingDatumapisComV1AlphaNetworkPolicyForAllNamespacesResponses,
    ListNetworkingDatumapisComV1AlphaNetworkPolicyForAllNamespacesErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/networkpolicies',
    ...options,
  });
};

/**
 * list objects of kind Network
 */
export const listNetworkingDatumapisComV1AlphaNetworkForAllNamespaces = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<ListNetworkingDatumapisComV1AlphaNetworkForAllNamespacesData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    ListNetworkingDatumapisComV1AlphaNetworkForAllNamespacesResponses,
    ListNetworkingDatumapisComV1AlphaNetworkForAllNamespacesErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/networks',
    ...options,
  });
};

/**
 * list objects of kind SubnetClaim
 */
export const listNetworkingDatumapisComV1AlphaSubnetClaimForAllNamespaces = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<ListNetworkingDatumapisComV1AlphaSubnetClaimForAllNamespacesData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    ListNetworkingDatumapisComV1AlphaSubnetClaimForAllNamespacesResponses,
    ListNetworkingDatumapisComV1AlphaSubnetClaimForAllNamespacesErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/subnetclaims',
    ...options,
  });
};

/**
 * list objects of kind Subnet
 */
export const listNetworkingDatumapisComV1AlphaSubnetForAllNamespaces = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<ListNetworkingDatumapisComV1AlphaSubnetForAllNamespacesData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    ListNetworkingDatumapisComV1AlphaSubnetForAllNamespacesResponses,
    ListNetworkingDatumapisComV1AlphaSubnetForAllNamespacesErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/networking.datumapis.com/v1alpha/subnets',
    ...options,
  });
};
