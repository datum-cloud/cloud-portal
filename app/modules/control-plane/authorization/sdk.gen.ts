// This file is auto-generated by @hey-api/openapi-ts
import { client as _heyApiClient } from './client.gen';
import type {
  CreateAuthorizationV1NamespacedLocalSubjectAccessReviewData,
  CreateAuthorizationV1NamespacedLocalSubjectAccessReviewErrors,
  CreateAuthorizationV1NamespacedLocalSubjectAccessReviewResponses,
  CreateAuthorizationV1SelfSubjectAccessReviewData,
  CreateAuthorizationV1SelfSubjectAccessReviewErrors,
  CreateAuthorizationV1SelfSubjectAccessReviewResponses,
  CreateAuthorizationV1SelfSubjectRulesReviewData,
  CreateAuthorizationV1SelfSubjectRulesReviewErrors,
  CreateAuthorizationV1SelfSubjectRulesReviewResponses,
  CreateAuthorizationV1SubjectAccessReviewData,
  CreateAuthorizationV1SubjectAccessReviewErrors,
  CreateAuthorizationV1SubjectAccessReviewResponses,
  GetAuthorizationV1ApiResourcesData,
  GetAuthorizationV1ApiResourcesErrors,
  GetAuthorizationV1ApiResourcesResponses,
} from './types.gen';
import type { Options as ClientOptions, TDataShape, Client } from '@hey-api/client-axios';

export type Options<
  TData extends TDataShape = TDataShape,
  ThrowOnError extends boolean = boolean,
> = ClientOptions<TData, ThrowOnError> & {
  /**
   * You can provide a client instance returned by `createClient()` instead of
   * individual options. This might be also useful if you want to implement a
   * custom client.
   */
  client?: Client;
  /**
   * You can pass arbitrary values through the `meta` object. This can be
   * used to access values that aren't defined as part of the SDK function.
   */
  meta?: Record<string, unknown>;
};

/**
 * get available resources
 */
export const getAuthorizationV1ApiResources = <ThrowOnError extends boolean = false>(
  options?: Options<GetAuthorizationV1ApiResourcesData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    GetAuthorizationV1ApiResourcesResponses,
    GetAuthorizationV1ApiResourcesErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/authorization.k8s.io/v1/',
    ...options,
  });
};

/**
 * create a LocalSubjectAccessReview
 */
export const createAuthorizationV1NamespacedLocalSubjectAccessReview = <
  ThrowOnError extends boolean = false,
>(
  options: Options<CreateAuthorizationV1NamespacedLocalSubjectAccessReviewData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    CreateAuthorizationV1NamespacedLocalSubjectAccessReviewResponses,
    CreateAuthorizationV1NamespacedLocalSubjectAccessReviewErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/authorization.k8s.io/v1/namespaces/{namespace}/localsubjectaccessreviews',
    ...options,
    headers: {
      'Content-Type': '*/*',
      ...options.headers,
    },
  });
};

/**
 * create a SelfSubjectAccessReview
 */
export const createAuthorizationV1SelfSubjectAccessReview = <ThrowOnError extends boolean = false>(
  options: Options<CreateAuthorizationV1SelfSubjectAccessReviewData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    CreateAuthorizationV1SelfSubjectAccessReviewResponses,
    CreateAuthorizationV1SelfSubjectAccessReviewErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/authorization.k8s.io/v1/selfsubjectaccessreviews',
    ...options,
    headers: {
      'Content-Type': '*/*',
      ...options.headers,
    },
  });
};

/**
 * create a SelfSubjectRulesReview
 */
export const createAuthorizationV1SelfSubjectRulesReview = <ThrowOnError extends boolean = false>(
  options: Options<CreateAuthorizationV1SelfSubjectRulesReviewData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    CreateAuthorizationV1SelfSubjectRulesReviewResponses,
    CreateAuthorizationV1SelfSubjectRulesReviewErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/authorization.k8s.io/v1/selfsubjectrulesreviews',
    ...options,
    headers: {
      'Content-Type': '*/*',
      ...options.headers,
    },
  });
};

/**
 * create a SubjectAccessReview
 */
export const createAuthorizationV1SubjectAccessReview = <ThrowOnError extends boolean = false>(
  options: Options<CreateAuthorizationV1SubjectAccessReviewData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    CreateAuthorizationV1SubjectAccessReviewResponses,
    CreateAuthorizationV1SubjectAccessReviewErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/apis/authorization.k8s.io/v1/subjectaccessreviews',
    ...options,
    headers: {
      'Content-Type': '*/*',
      ...options.headers,
    },
  });
};
