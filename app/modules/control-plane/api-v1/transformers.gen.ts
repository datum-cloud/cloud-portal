/* eslint-disable @typescript-eslint/no-explicit-any */
// This file is auto-generated by @hey-api/openapi-ts
import type {
  ListCoreV1ConfigMapForAllNamespacesResponse,
  ListCoreV1EventForAllNamespacesResponse,
  ListCoreV1NamespaceResponse,
  CreateCoreV1NamespaceResponse,
  DeleteCoreV1CollectionNamespacedConfigMapResponse,
  ListCoreV1NamespacedConfigMapResponse,
  CreateCoreV1NamespacedConfigMapResponse,
  DeleteCoreV1NamespacedConfigMapResponse,
  ReadCoreV1NamespacedConfigMapResponse,
  PatchCoreV1NamespacedConfigMapResponse,
  ReplaceCoreV1NamespacedConfigMapResponse,
  DeleteCoreV1CollectionNamespacedEventResponse,
  ListCoreV1NamespacedEventResponse,
  CreateCoreV1NamespacedEventResponse,
  DeleteCoreV1NamespacedEventResponse,
  ReadCoreV1NamespacedEventResponse,
  PatchCoreV1NamespacedEventResponse,
  ReplaceCoreV1NamespacedEventResponse,
  DeleteCoreV1CollectionNamespacedResourceQuotaResponse,
  ListCoreV1NamespacedResourceQuotaResponse,
  CreateCoreV1NamespacedResourceQuotaResponse,
  DeleteCoreV1NamespacedResourceQuotaResponse,
  ReadCoreV1NamespacedResourceQuotaResponse,
  PatchCoreV1NamespacedResourceQuotaResponse,
  ReplaceCoreV1NamespacedResourceQuotaResponse,
  ReadCoreV1NamespacedResourceQuotaStatusResponse,
  PatchCoreV1NamespacedResourceQuotaStatusResponse,
  ReplaceCoreV1NamespacedResourceQuotaStatusResponse,
  DeleteCoreV1CollectionNamespacedSecretResponse,
  ListCoreV1NamespacedSecretResponse,
  CreateCoreV1NamespacedSecretResponse,
  DeleteCoreV1NamespacedSecretResponse,
  ReadCoreV1NamespacedSecretResponse,
  PatchCoreV1NamespacedSecretResponse,
  ReplaceCoreV1NamespacedSecretResponse,
  DeleteCoreV1CollectionNamespacedServiceAccountResponse,
  ListCoreV1NamespacedServiceAccountResponse,
  CreateCoreV1NamespacedServiceAccountResponse,
  DeleteCoreV1NamespacedServiceAccountResponse,
  ReadCoreV1NamespacedServiceAccountResponse,
  PatchCoreV1NamespacedServiceAccountResponse,
  ReplaceCoreV1NamespacedServiceAccountResponse,
  CreateCoreV1NamespacedServiceAccountTokenResponse,
  DeleteCoreV1NamespaceResponse,
  ReadCoreV1NamespaceResponse,
  PatchCoreV1NamespaceResponse,
  ReplaceCoreV1NamespaceResponse,
  ReplaceCoreV1NamespaceFinalizeResponse,
  ReadCoreV1NamespaceStatusResponse,
  PatchCoreV1NamespaceStatusResponse,
  ReplaceCoreV1NamespaceStatusResponse,
  ListCoreV1ResourceQuotaForAllNamespacesResponse,
  ListCoreV1SecretForAllNamespacesResponse,
  ListCoreV1ServiceAccountForAllNamespacesResponse,
} from './types.gen'

const ioK8sApimachineryPkgApisMetaV1TimeSchemaResponseTransformer = (data: any) => {
  data = new Date(data)
  return data
}

const ioK8sApimachineryPkgApisMetaV1ManagedFieldsEntrySchemaResponseTransformer = (
  data: any,
) => {
  if (data.time) {
    data.time = ioK8sApimachineryPkgApisMetaV1TimeSchemaResponseTransformer(data.time)
  }
  return data
}

const ioK8sApimachineryPkgApisMetaV1ObjectMetaSchemaResponseTransformer = (data: any) => {
  if (data.creationTimestamp) {
    data.creationTimestamp = ioK8sApimachineryPkgApisMetaV1TimeSchemaResponseTransformer(
      data.creationTimestamp,
    )
  }
  if (data.deletionGracePeriodSeconds) {
    data.deletionGracePeriodSeconds = BigInt(data.deletionGracePeriodSeconds.toString())
  }
  if (data.deletionTimestamp) {
    data.deletionTimestamp = ioK8sApimachineryPkgApisMetaV1TimeSchemaResponseTransformer(
      data.deletionTimestamp,
    )
  }
  if (data.generation) {
    data.generation = BigInt(data.generation.toString())
  }
  if (data.managedFields) {
    data.managedFields = data.managedFields.map((item: any) => {
      return ioK8sApimachineryPkgApisMetaV1ManagedFieldsEntrySchemaResponseTransformer(
        item,
      )
    })
  }
  return data
}

const ioK8sApiCoreV1ConfigMapSchemaResponseTransformer = (data: any) => {
  if (data.metadata) {
    data.metadata = ioK8sApimachineryPkgApisMetaV1ObjectMetaSchemaResponseTransformer(
      data.metadata,
    )
  }
  return data
}

const ioK8sApimachineryPkgApisMetaV1ListMetaSchemaResponseTransformer = (data: any) => {
  if (data.remainingItemCount) {
    data.remainingItemCount = BigInt(data.remainingItemCount.toString())
  }
  return data
}

const ioK8sApiCoreV1ConfigMapListSchemaResponseTransformer = (data: any) => {
  data.items = data.items.map((item: any) => {
    return ioK8sApiCoreV1ConfigMapSchemaResponseTransformer(item)
  })
  if (data.metadata) {
    data.metadata = ioK8sApimachineryPkgApisMetaV1ListMetaSchemaResponseTransformer(
      data.metadata,
    )
  }
  return data
}

export const listCoreV1ConfigMapForAllNamespacesResponseTransformer = async (
  data: any,
): Promise<ListCoreV1ConfigMapForAllNamespacesResponse> => {
  data = ioK8sApiCoreV1ConfigMapListSchemaResponseTransformer(data)
  return data
}

const ioK8sApimachineryPkgApisMetaV1MicroTimeSchemaResponseTransformer = (data: any) => {
  data = new Date(data)
  return data
}

const ioK8sApiCoreV1EventSeriesSchemaResponseTransformer = (data: any) => {
  if (data.lastObservedTime) {
    data.lastObservedTime =
      ioK8sApimachineryPkgApisMetaV1MicroTimeSchemaResponseTransformer(
        data.lastObservedTime,
      )
  }
  return data
}

const ioK8sApiCoreV1EventSchemaResponseTransformer = (data: any) => {
  if (data.eventTime) {
    data.eventTime = ioK8sApimachineryPkgApisMetaV1MicroTimeSchemaResponseTransformer(
      data.eventTime,
    )
  }
  if (data.firstTimestamp) {
    data.firstTimestamp = ioK8sApimachineryPkgApisMetaV1TimeSchemaResponseTransformer(
      data.firstTimestamp,
    )
  }
  if (data.lastTimestamp) {
    data.lastTimestamp = ioK8sApimachineryPkgApisMetaV1TimeSchemaResponseTransformer(
      data.lastTimestamp,
    )
  }
  data.metadata = ioK8sApimachineryPkgApisMetaV1ObjectMetaSchemaResponseTransformer(
    data.metadata,
  )
  if (data.series) {
    data.series = ioK8sApiCoreV1EventSeriesSchemaResponseTransformer(data.series)
  }
  return data
}

const ioK8sApiCoreV1EventListSchemaResponseTransformer = (data: any) => {
  data.items = data.items.map((item: any) => {
    return ioK8sApiCoreV1EventSchemaResponseTransformer(item)
  })
  if (data.metadata) {
    data.metadata = ioK8sApimachineryPkgApisMetaV1ListMetaSchemaResponseTransformer(
      data.metadata,
    )
  }
  return data
}

export const listCoreV1EventForAllNamespacesResponseTransformer = async (
  data: any,
): Promise<ListCoreV1EventForAllNamespacesResponse> => {
  data = ioK8sApiCoreV1EventListSchemaResponseTransformer(data)
  return data
}

const ioK8sApiCoreV1NamespaceConditionSchemaResponseTransformer = (data: any) => {
  if (data.lastTransitionTime) {
    data.lastTransitionTime = ioK8sApimachineryPkgApisMetaV1TimeSchemaResponseTransformer(
      data.lastTransitionTime,
    )
  }
  return data
}

const ioK8sApiCoreV1NamespaceStatusSchemaResponseTransformer = (data: any) => {
  if (data.conditions) {
    data.conditions = data.conditions.map((item: any) => {
      return ioK8sApiCoreV1NamespaceConditionSchemaResponseTransformer(item)
    })
  }
  return data
}

const ioK8sApiCoreV1NamespaceSchemaResponseTransformer = (data: any) => {
  if (data.metadata) {
    data.metadata = ioK8sApimachineryPkgApisMetaV1ObjectMetaSchemaResponseTransformer(
      data.metadata,
    )
  }
  if (data.status) {
    data.status = ioK8sApiCoreV1NamespaceStatusSchemaResponseTransformer(data.status)
  }
  return data
}

const ioK8sApiCoreV1NamespaceListSchemaResponseTransformer = (data: any) => {
  data.items = data.items.map((item: any) => {
    return ioK8sApiCoreV1NamespaceSchemaResponseTransformer(item)
  })
  if (data.metadata) {
    data.metadata = ioK8sApimachineryPkgApisMetaV1ListMetaSchemaResponseTransformer(
      data.metadata,
    )
  }
  return data
}

export const listCoreV1NamespaceResponseTransformer = async (
  data: any,
): Promise<ListCoreV1NamespaceResponse> => {
  data = ioK8sApiCoreV1NamespaceListSchemaResponseTransformer(data)
  return data
}

export const createCoreV1NamespaceResponseTransformer = async (
  data: any,
): Promise<CreateCoreV1NamespaceResponse> => {
  data = ioK8sApiCoreV1NamespaceSchemaResponseTransformer(data)
  return data
}

const ioK8sApimachineryPkgApisMetaV1StatusSchemaResponseTransformer = (data: any) => {
  if (data.metadata) {
    data.metadata = ioK8sApimachineryPkgApisMetaV1ListMetaSchemaResponseTransformer(
      data.metadata,
    )
  }
  return data
}

export const deleteCoreV1CollectionNamespacedConfigMapResponseTransformer = async (
  data: any,
): Promise<DeleteCoreV1CollectionNamespacedConfigMapResponse> => {
  data = ioK8sApimachineryPkgApisMetaV1StatusSchemaResponseTransformer(data)
  return data
}

export const listCoreV1NamespacedConfigMapResponseTransformer = async (
  data: any,
): Promise<ListCoreV1NamespacedConfigMapResponse> => {
  data = ioK8sApiCoreV1ConfigMapListSchemaResponseTransformer(data)
  return data
}

export const createCoreV1NamespacedConfigMapResponseTransformer = async (
  data: any,
): Promise<CreateCoreV1NamespacedConfigMapResponse> => {
  data = ioK8sApiCoreV1ConfigMapSchemaResponseTransformer(data)
  return data
}

export const deleteCoreV1NamespacedConfigMapResponseTransformer = async (
  data: any,
): Promise<DeleteCoreV1NamespacedConfigMapResponse> => {
  data = ioK8sApimachineryPkgApisMetaV1StatusSchemaResponseTransformer(data)
  return data
}

export const readCoreV1NamespacedConfigMapResponseTransformer = async (
  data: any,
): Promise<ReadCoreV1NamespacedConfigMapResponse> => {
  data = ioK8sApiCoreV1ConfigMapSchemaResponseTransformer(data)
  return data
}

export const patchCoreV1NamespacedConfigMapResponseTransformer = async (
  data: any,
): Promise<PatchCoreV1NamespacedConfigMapResponse> => {
  data = ioK8sApiCoreV1ConfigMapSchemaResponseTransformer(data)
  return data
}

export const replaceCoreV1NamespacedConfigMapResponseTransformer = async (
  data: any,
): Promise<ReplaceCoreV1NamespacedConfigMapResponse> => {
  data = ioK8sApiCoreV1ConfigMapSchemaResponseTransformer(data)
  return data
}

export const deleteCoreV1CollectionNamespacedEventResponseTransformer = async (
  data: any,
): Promise<DeleteCoreV1CollectionNamespacedEventResponse> => {
  data = ioK8sApimachineryPkgApisMetaV1StatusSchemaResponseTransformer(data)
  return data
}

export const listCoreV1NamespacedEventResponseTransformer = async (
  data: any,
): Promise<ListCoreV1NamespacedEventResponse> => {
  data = ioK8sApiCoreV1EventListSchemaResponseTransformer(data)
  return data
}

export const createCoreV1NamespacedEventResponseTransformer = async (
  data: any,
): Promise<CreateCoreV1NamespacedEventResponse> => {
  data = ioK8sApiCoreV1EventSchemaResponseTransformer(data)
  return data
}

export const deleteCoreV1NamespacedEventResponseTransformer = async (
  data: any,
): Promise<DeleteCoreV1NamespacedEventResponse> => {
  data = ioK8sApimachineryPkgApisMetaV1StatusSchemaResponseTransformer(data)
  return data
}

export const readCoreV1NamespacedEventResponseTransformer = async (
  data: any,
): Promise<ReadCoreV1NamespacedEventResponse> => {
  data = ioK8sApiCoreV1EventSchemaResponseTransformer(data)
  return data
}

export const patchCoreV1NamespacedEventResponseTransformer = async (
  data: any,
): Promise<PatchCoreV1NamespacedEventResponse> => {
  data = ioK8sApiCoreV1EventSchemaResponseTransformer(data)
  return data
}

export const replaceCoreV1NamespacedEventResponseTransformer = async (
  data: any,
): Promise<ReplaceCoreV1NamespacedEventResponse> => {
  data = ioK8sApiCoreV1EventSchemaResponseTransformer(data)
  return data
}

export const deleteCoreV1CollectionNamespacedResourceQuotaResponseTransformer = async (
  data: any,
): Promise<DeleteCoreV1CollectionNamespacedResourceQuotaResponse> => {
  data = ioK8sApimachineryPkgApisMetaV1StatusSchemaResponseTransformer(data)
  return data
}

const ioK8sApiCoreV1ResourceQuotaSchemaResponseTransformer = (data: any) => {
  if (data.metadata) {
    data.metadata = ioK8sApimachineryPkgApisMetaV1ObjectMetaSchemaResponseTransformer(
      data.metadata,
    )
  }
  return data
}

const ioK8sApiCoreV1ResourceQuotaListSchemaResponseTransformer = (data: any) => {
  data.items = data.items.map((item: any) => {
    return ioK8sApiCoreV1ResourceQuotaSchemaResponseTransformer(item)
  })
  if (data.metadata) {
    data.metadata = ioK8sApimachineryPkgApisMetaV1ListMetaSchemaResponseTransformer(
      data.metadata,
    )
  }
  return data
}

export const listCoreV1NamespacedResourceQuotaResponseTransformer = async (
  data: any,
): Promise<ListCoreV1NamespacedResourceQuotaResponse> => {
  data = ioK8sApiCoreV1ResourceQuotaListSchemaResponseTransformer(data)
  return data
}

export const createCoreV1NamespacedResourceQuotaResponseTransformer = async (
  data: any,
): Promise<CreateCoreV1NamespacedResourceQuotaResponse> => {
  data = ioK8sApiCoreV1ResourceQuotaSchemaResponseTransformer(data)
  return data
}

export const deleteCoreV1NamespacedResourceQuotaResponseTransformer = async (
  data: any,
): Promise<DeleteCoreV1NamespacedResourceQuotaResponse> => {
  data = ioK8sApiCoreV1ResourceQuotaSchemaResponseTransformer(data)
  return data
}

export const readCoreV1NamespacedResourceQuotaResponseTransformer = async (
  data: any,
): Promise<ReadCoreV1NamespacedResourceQuotaResponse> => {
  data = ioK8sApiCoreV1ResourceQuotaSchemaResponseTransformer(data)
  return data
}

export const patchCoreV1NamespacedResourceQuotaResponseTransformer = async (
  data: any,
): Promise<PatchCoreV1NamespacedResourceQuotaResponse> => {
  data = ioK8sApiCoreV1ResourceQuotaSchemaResponseTransformer(data)
  return data
}

export const replaceCoreV1NamespacedResourceQuotaResponseTransformer = async (
  data: any,
): Promise<ReplaceCoreV1NamespacedResourceQuotaResponse> => {
  data = ioK8sApiCoreV1ResourceQuotaSchemaResponseTransformer(data)
  return data
}

export const readCoreV1NamespacedResourceQuotaStatusResponseTransformer = async (
  data: any,
): Promise<ReadCoreV1NamespacedResourceQuotaStatusResponse> => {
  data = ioK8sApiCoreV1ResourceQuotaSchemaResponseTransformer(data)
  return data
}

export const patchCoreV1NamespacedResourceQuotaStatusResponseTransformer = async (
  data: any,
): Promise<PatchCoreV1NamespacedResourceQuotaStatusResponse> => {
  data = ioK8sApiCoreV1ResourceQuotaSchemaResponseTransformer(data)
  return data
}

export const replaceCoreV1NamespacedResourceQuotaStatusResponseTransformer = async (
  data: any,
): Promise<ReplaceCoreV1NamespacedResourceQuotaStatusResponse> => {
  data = ioK8sApiCoreV1ResourceQuotaSchemaResponseTransformer(data)
  return data
}

export const deleteCoreV1CollectionNamespacedSecretResponseTransformer = async (
  data: any,
): Promise<DeleteCoreV1CollectionNamespacedSecretResponse> => {
  data = ioK8sApimachineryPkgApisMetaV1StatusSchemaResponseTransformer(data)
  return data
}

const ioK8sApiCoreV1SecretSchemaResponseTransformer = (data: any) => {
  if (data.metadata) {
    data.metadata = ioK8sApimachineryPkgApisMetaV1ObjectMetaSchemaResponseTransformer(
      data.metadata,
    )
  }
  return data
}

const ioK8sApiCoreV1SecretListSchemaResponseTransformer = (data: any) => {
  data.items = data.items.map((item: any) => {
    return ioK8sApiCoreV1SecretSchemaResponseTransformer(item)
  })
  if (data.metadata) {
    data.metadata = ioK8sApimachineryPkgApisMetaV1ListMetaSchemaResponseTransformer(
      data.metadata,
    )
  }
  return data
}

export const listCoreV1NamespacedSecretResponseTransformer = async (
  data: any,
): Promise<ListCoreV1NamespacedSecretResponse> => {
  data = ioK8sApiCoreV1SecretListSchemaResponseTransformer(data)
  return data
}

export const createCoreV1NamespacedSecretResponseTransformer = async (
  data: any,
): Promise<CreateCoreV1NamespacedSecretResponse> => {
  data = ioK8sApiCoreV1SecretSchemaResponseTransformer(data)
  return data
}

export const deleteCoreV1NamespacedSecretResponseTransformer = async (
  data: any,
): Promise<DeleteCoreV1NamespacedSecretResponse> => {
  data = ioK8sApimachineryPkgApisMetaV1StatusSchemaResponseTransformer(data)
  return data
}

export const readCoreV1NamespacedSecretResponseTransformer = async (
  data: any,
): Promise<ReadCoreV1NamespacedSecretResponse> => {
  data = ioK8sApiCoreV1SecretSchemaResponseTransformer(data)
  return data
}

export const patchCoreV1NamespacedSecretResponseTransformer = async (
  data: any,
): Promise<PatchCoreV1NamespacedSecretResponse> => {
  data = ioK8sApiCoreV1SecretSchemaResponseTransformer(data)
  return data
}

export const replaceCoreV1NamespacedSecretResponseTransformer = async (
  data: any,
): Promise<ReplaceCoreV1NamespacedSecretResponse> => {
  data = ioK8sApiCoreV1SecretSchemaResponseTransformer(data)
  return data
}

export const deleteCoreV1CollectionNamespacedServiceAccountResponseTransformer = async (
  data: any,
): Promise<DeleteCoreV1CollectionNamespacedServiceAccountResponse> => {
  data = ioK8sApimachineryPkgApisMetaV1StatusSchemaResponseTransformer(data)
  return data
}

const ioK8sApiCoreV1ServiceAccountSchemaResponseTransformer = (data: any) => {
  if (data.metadata) {
    data.metadata = ioK8sApimachineryPkgApisMetaV1ObjectMetaSchemaResponseTransformer(
      data.metadata,
    )
  }
  return data
}

const ioK8sApiCoreV1ServiceAccountListSchemaResponseTransformer = (data: any) => {
  data.items = data.items.map((item: any) => {
    return ioK8sApiCoreV1ServiceAccountSchemaResponseTransformer(item)
  })
  if (data.metadata) {
    data.metadata = ioK8sApimachineryPkgApisMetaV1ListMetaSchemaResponseTransformer(
      data.metadata,
    )
  }
  return data
}

export const listCoreV1NamespacedServiceAccountResponseTransformer = async (
  data: any,
): Promise<ListCoreV1NamespacedServiceAccountResponse> => {
  data = ioK8sApiCoreV1ServiceAccountListSchemaResponseTransformer(data)
  return data
}

export const createCoreV1NamespacedServiceAccountResponseTransformer = async (
  data: any,
): Promise<CreateCoreV1NamespacedServiceAccountResponse> => {
  data = ioK8sApiCoreV1ServiceAccountSchemaResponseTransformer(data)
  return data
}

export const deleteCoreV1NamespacedServiceAccountResponseTransformer = async (
  data: any,
): Promise<DeleteCoreV1NamespacedServiceAccountResponse> => {
  data = ioK8sApiCoreV1ServiceAccountSchemaResponseTransformer(data)
  return data
}

export const readCoreV1NamespacedServiceAccountResponseTransformer = async (
  data: any,
): Promise<ReadCoreV1NamespacedServiceAccountResponse> => {
  data = ioK8sApiCoreV1ServiceAccountSchemaResponseTransformer(data)
  return data
}

export const patchCoreV1NamespacedServiceAccountResponseTransformer = async (
  data: any,
): Promise<PatchCoreV1NamespacedServiceAccountResponse> => {
  data = ioK8sApiCoreV1ServiceAccountSchemaResponseTransformer(data)
  return data
}

export const replaceCoreV1NamespacedServiceAccountResponseTransformer = async (
  data: any,
): Promise<ReplaceCoreV1NamespacedServiceAccountResponse> => {
  data = ioK8sApiCoreV1ServiceAccountSchemaResponseTransformer(data)
  return data
}

const ioK8sApiAuthenticationV1TokenRequestSpecSchemaResponseTransformer = (data: any) => {
  if (data.expirationSeconds) {
    data.expirationSeconds = BigInt(data.expirationSeconds.toString())
  }
  return data
}

const ioK8sApiAuthenticationV1TokenRequestStatusSchemaResponseTransformer = (
  data: any,
) => {
  data.expirationTimestamp = ioK8sApimachineryPkgApisMetaV1TimeSchemaResponseTransformer(
    data.expirationTimestamp,
  )
  return data
}

const ioK8sApiAuthenticationV1TokenRequestSchemaResponseTransformer = (data: any) => {
  if (data.metadata) {
    data.metadata = ioK8sApimachineryPkgApisMetaV1ObjectMetaSchemaResponseTransformer(
      data.metadata,
    )
  }
  data.spec = ioK8sApiAuthenticationV1TokenRequestSpecSchemaResponseTransformer(data.spec)
  if (data.status) {
    data.status = ioK8sApiAuthenticationV1TokenRequestStatusSchemaResponseTransformer(
      data.status,
    )
  }
  return data
}

export const createCoreV1NamespacedServiceAccountTokenResponseTransformer = async (
  data: any,
): Promise<CreateCoreV1NamespacedServiceAccountTokenResponse> => {
  data = ioK8sApiAuthenticationV1TokenRequestSchemaResponseTransformer(data)
  return data
}

export const deleteCoreV1NamespaceResponseTransformer = async (
  data: any,
): Promise<DeleteCoreV1NamespaceResponse> => {
  data = ioK8sApimachineryPkgApisMetaV1StatusSchemaResponseTransformer(data)
  return data
}

export const readCoreV1NamespaceResponseTransformer = async (
  data: any,
): Promise<ReadCoreV1NamespaceResponse> => {
  data = ioK8sApiCoreV1NamespaceSchemaResponseTransformer(data)
  return data
}

export const patchCoreV1NamespaceResponseTransformer = async (
  data: any,
): Promise<PatchCoreV1NamespaceResponse> => {
  data = ioK8sApiCoreV1NamespaceSchemaResponseTransformer(data)
  return data
}

export const replaceCoreV1NamespaceResponseTransformer = async (
  data: any,
): Promise<ReplaceCoreV1NamespaceResponse> => {
  data = ioK8sApiCoreV1NamespaceSchemaResponseTransformer(data)
  return data
}

export const replaceCoreV1NamespaceFinalizeResponseTransformer = async (
  data: any,
): Promise<ReplaceCoreV1NamespaceFinalizeResponse> => {
  data = ioK8sApiCoreV1NamespaceSchemaResponseTransformer(data)
  return data
}

export const readCoreV1NamespaceStatusResponseTransformer = async (
  data: any,
): Promise<ReadCoreV1NamespaceStatusResponse> => {
  data = ioK8sApiCoreV1NamespaceSchemaResponseTransformer(data)
  return data
}

export const patchCoreV1NamespaceStatusResponseTransformer = async (
  data: any,
): Promise<PatchCoreV1NamespaceStatusResponse> => {
  data = ioK8sApiCoreV1NamespaceSchemaResponseTransformer(data)
  return data
}

export const replaceCoreV1NamespaceStatusResponseTransformer = async (
  data: any,
): Promise<ReplaceCoreV1NamespaceStatusResponse> => {
  data = ioK8sApiCoreV1NamespaceSchemaResponseTransformer(data)
  return data
}

export const listCoreV1ResourceQuotaForAllNamespacesResponseTransformer = async (
  data: any,
): Promise<ListCoreV1ResourceQuotaForAllNamespacesResponse> => {
  data = ioK8sApiCoreV1ResourceQuotaListSchemaResponseTransformer(data)
  return data
}

export const listCoreV1SecretForAllNamespacesResponseTransformer = async (
  data: any,
): Promise<ListCoreV1SecretForAllNamespacesResponse> => {
  data = ioK8sApiCoreV1SecretListSchemaResponseTransformer(data)
  return data
}

export const listCoreV1ServiceAccountForAllNamespacesResponseTransformer = async (
  data: any,
): Promise<ListCoreV1ServiceAccountForAllNamespacesResponse> => {
  data = ioK8sApiCoreV1ServiceAccountListSchemaResponseTransformer(data)
  return data
}
