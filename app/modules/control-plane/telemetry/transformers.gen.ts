// This file is auto-generated by @hey-api/openapi-ts
import type {
  ListTelemetryDatumapisComV1Alpha1ExportPolicyForAllNamespacesResponse,
  DeleteTelemetryDatumapisComV1Alpha1CollectionNamespacedExportPolicyResponse,
  ListTelemetryDatumapisComV1Alpha1NamespacedExportPolicyResponse,
  CreateTelemetryDatumapisComV1Alpha1NamespacedExportPolicyResponse,
  DeleteTelemetryDatumapisComV1Alpha1NamespacedExportPolicyResponse,
  ReadTelemetryDatumapisComV1Alpha1NamespacedExportPolicyResponse,
  PatchTelemetryDatumapisComV1Alpha1NamespacedExportPolicyResponse,
  ReplaceTelemetryDatumapisComV1Alpha1NamespacedExportPolicyResponse,
  ReadTelemetryDatumapisComV1Alpha1NamespacedExportPolicyStatusResponse,
  PatchTelemetryDatumapisComV1Alpha1NamespacedExportPolicyStatusResponse,
  ReplaceTelemetryDatumapisComV1Alpha1NamespacedExportPolicyStatusResponse,
} from './types.gen';

const ioK8sApimachineryPkgApisMetaV1TimeSchemaResponseTransformer = (data: any) => {
  data = new Date(data);
  return data;
};

const ioK8sApimachineryPkgApisMetaV1ManagedFieldsEntrySchemaResponseTransformer = (data: any) => {
  if (data.time) {
    data.time = ioK8sApimachineryPkgApisMetaV1TimeSchemaResponseTransformer(data.time);
  }
  return data;
};

const ioK8sApimachineryPkgApisMetaV1ObjectMetaSchemaResponseTransformer = (data: any) => {
  if (data.creationTimestamp) {
    data.creationTimestamp = ioK8sApimachineryPkgApisMetaV1TimeSchemaResponseTransformer(
      data.creationTimestamp
    );
  }
  if (data.deletionGracePeriodSeconds) {
    data.deletionGracePeriodSeconds = BigInt(data.deletionGracePeriodSeconds.toString());
  }
  if (data.deletionTimestamp) {
    data.deletionTimestamp = ioK8sApimachineryPkgApisMetaV1TimeSchemaResponseTransformer(
      data.deletionTimestamp
    );
  }
  if (data.generation) {
    data.generation = BigInt(data.generation.toString());
  }
  if (data.managedFields) {
    data.managedFields = data.managedFields.map((item: any) => {
      return ioK8sApimachineryPkgApisMetaV1ManagedFieldsEntrySchemaResponseTransformer(item);
    });
  }
  return data;
};

const comDatumapisTelemetryV1Alpha1ExportPolicySchemaResponseTransformer = (data: any) => {
  if (data.metadata) {
    data.metadata = ioK8sApimachineryPkgApisMetaV1ObjectMetaSchemaResponseTransformer(
      data.metadata
    );
  }
  if (data.status) {
    if (data.status.conditions) {
      data.status.conditions = data.status.conditions.map((item: any) => {
        item.lastTransitionTime = new Date(item.lastTransitionTime);
        if (item.observedGeneration) {
          item.observedGeneration = BigInt(item.observedGeneration.toString());
        }
        return item;
      });
    }
    if (data.status.sinks) {
      data.status.sinks = data.status.sinks.map((item: any) => {
        if (item.conditions) {
          item.conditions = item.conditions.map((item: any) => {
            item.lastTransitionTime = new Date(item.lastTransitionTime);
            if (item.observedGeneration) {
              item.observedGeneration = BigInt(item.observedGeneration.toString());
            }
            return item;
          });
        }
        return item;
      });
    }
  }
  return data;
};

const ioK8sApimachineryPkgApisMetaV1ListMetaSchemaResponseTransformer = (data: any) => {
  if (data.remainingItemCount) {
    data.remainingItemCount = BigInt(data.remainingItemCount.toString());
  }
  return data;
};

const comDatumapisTelemetryV1Alpha1ExportPolicyListSchemaResponseTransformer = (data: any) => {
  data.items = data.items.map((item: any) => {
    return comDatumapisTelemetryV1Alpha1ExportPolicySchemaResponseTransformer(item);
  });
  if (data.metadata) {
    data.metadata = ioK8sApimachineryPkgApisMetaV1ListMetaSchemaResponseTransformer(data.metadata);
  }
  return data;
};

export const listTelemetryDatumapisComV1Alpha1ExportPolicyForAllNamespacesResponseTransformer =
  async (
    data: any
  ): Promise<ListTelemetryDatumapisComV1Alpha1ExportPolicyForAllNamespacesResponse> => {
    data = comDatumapisTelemetryV1Alpha1ExportPolicyListSchemaResponseTransformer(data);
    return data;
  };

const ioK8sApimachineryPkgApisMetaV1StatusSchemaResponseTransformer = (data: any) => {
  if (data.metadata) {
    data.metadata = ioK8sApimachineryPkgApisMetaV1ListMetaSchemaResponseTransformer(data.metadata);
  }
  return data;
};

export const deleteTelemetryDatumapisComV1Alpha1CollectionNamespacedExportPolicyResponseTransformer =
  async (
    data: any
  ): Promise<DeleteTelemetryDatumapisComV1Alpha1CollectionNamespacedExportPolicyResponse> => {
    data = ioK8sApimachineryPkgApisMetaV1StatusSchemaResponseTransformer(data);
    return data;
  };

export const listTelemetryDatumapisComV1Alpha1NamespacedExportPolicyResponseTransformer = async (
  data: any
): Promise<ListTelemetryDatumapisComV1Alpha1NamespacedExportPolicyResponse> => {
  data = comDatumapisTelemetryV1Alpha1ExportPolicyListSchemaResponseTransformer(data);
  return data;
};

export const createTelemetryDatumapisComV1Alpha1NamespacedExportPolicyResponseTransformer = async (
  data: any
): Promise<CreateTelemetryDatumapisComV1Alpha1NamespacedExportPolicyResponse> => {
  data = comDatumapisTelemetryV1Alpha1ExportPolicySchemaResponseTransformer(data);
  return data;
};

export const deleteTelemetryDatumapisComV1Alpha1NamespacedExportPolicyResponseTransformer = async (
  data: any
): Promise<DeleteTelemetryDatumapisComV1Alpha1NamespacedExportPolicyResponse> => {
  data = ioK8sApimachineryPkgApisMetaV1StatusSchemaResponseTransformer(data);
  return data;
};

export const readTelemetryDatumapisComV1Alpha1NamespacedExportPolicyResponseTransformer = async (
  data: any
): Promise<ReadTelemetryDatumapisComV1Alpha1NamespacedExportPolicyResponse> => {
  data = comDatumapisTelemetryV1Alpha1ExportPolicySchemaResponseTransformer(data);
  return data;
};

export const patchTelemetryDatumapisComV1Alpha1NamespacedExportPolicyResponseTransformer = async (
  data: any
): Promise<PatchTelemetryDatumapisComV1Alpha1NamespacedExportPolicyResponse> => {
  data = comDatumapisTelemetryV1Alpha1ExportPolicySchemaResponseTransformer(data);
  return data;
};

export const replaceTelemetryDatumapisComV1Alpha1NamespacedExportPolicyResponseTransformer = async (
  data: any
): Promise<ReplaceTelemetryDatumapisComV1Alpha1NamespacedExportPolicyResponse> => {
  data = comDatumapisTelemetryV1Alpha1ExportPolicySchemaResponseTransformer(data);
  return data;
};

export const readTelemetryDatumapisComV1Alpha1NamespacedExportPolicyStatusResponseTransformer =
  async (
    data: any
  ): Promise<ReadTelemetryDatumapisComV1Alpha1NamespacedExportPolicyStatusResponse> => {
    data = comDatumapisTelemetryV1Alpha1ExportPolicySchemaResponseTransformer(data);
    return data;
  };

export const patchTelemetryDatumapisComV1Alpha1NamespacedExportPolicyStatusResponseTransformer =
  async (
    data: any
  ): Promise<PatchTelemetryDatumapisComV1Alpha1NamespacedExportPolicyStatusResponse> => {
    data = comDatumapisTelemetryV1Alpha1ExportPolicySchemaResponseTransformer(data);
    return data;
  };

export const replaceTelemetryDatumapisComV1Alpha1NamespacedExportPolicyStatusResponseTransformer =
  async (
    data: any
  ): Promise<ReplaceTelemetryDatumapisComV1Alpha1NamespacedExportPolicyStatusResponse> => {
    data = comDatumapisTelemetryV1Alpha1ExportPolicySchemaResponseTransformer(data);
    return data;
  };
