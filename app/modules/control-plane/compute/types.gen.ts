// This file is auto-generated by @hey-api/openapi-ts

/**
 * Instance is the Schema for the instances API
 */
export type ComDatumapisComputeV1AlphaInstance = {
  /**
   * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
   */
  apiVersion?: string
  /**
   * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
   */
  kind?: string
  /**
   * Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
   */
  metadata?: IoK8sApimachineryPkgApisMetaV1ObjectMeta
  /**
   * InstanceSpec defines the desired state of Instance
   */
  spec?: {
    /**
     * Network interface configuration.
     */
    networkInterfaces: Array<{
      /**
       * The network to attach the network interface to.
       */
      network: {
        /**
         * The network name
         */
        name: string
        /**
         * The network namespace.
         *
         * Defaults to the namespace for the type the reference is embedded in.
         */
        namespace?: string
      }
      /**
       * Interface specific network policy.
       *
       * If provided, this will result in a platform managed network policy being
       * created that targets the specfiic instance interface. This network policy
       * will be of the lowest priority, and can effectively be prohibited from
       * influencing network connectivity.
       */
      networkPolicy?: {
        ingress?: Array<{
          /**
           * from is a list of sources which should be able to access the instances selected for this rule.
           * Items in this list are combined using a logical OR operation. If this field is
           * empty or missing, this rule matches all sources (traffic not restricted by
           * source). If this field is present and contains at least one item, this rule
           * allows traffic only if the traffic matches at least one item in the from list.
           */
          from?: Array<{
            /**
             * ipBlock defines policy on a particular IPBlock. If this field is set then
             * neither of the other fields can be.
             */
            ipBlock?: {
              /**
               * cidr is a string representing the IPBlock
               * Valid examples are "192.168.1.0/24" or "2001:db8::/64"
               */
              cidr: string
              /**
               * except is a slice of CIDRs that should not be included within an IPBlock
               * Valid examples are "192.168.1.0/24" or "2001:db8::/64"
               * Except values will be rejected if they are outside the cidr range
               */
              except?: Array<string>
            }
          }>
          /**
           * ports is a list of ports which should be made accessible on the instances selected for
           * this rule. Each item in this list is combined using a logical OR. If this field is
           * empty or missing, this rule matches all ports (traffic not restricted by port).
           * If this field is present and contains at least one item, then this rule allows
           * traffic only if the traffic matches at least one port in the list.
           */
          ports?: Array<{
            /**
             * endPort indicates that the range of ports from port to endPort if set, inclusive,
             * should be allowed by the policy. This field cannot be defined if the port field
             * is not defined or if the port field is defined as a named (string) port.
             * The endPort must be equal or greater than port.
             */
            endPort?: number
            /**
             * port represents the port on the given protocol. This can either be a numerical or named
             * port on an instance. If this field is not provided, this matches all port names and
             * numbers.
             * If present, only traffic on the specified protocol AND port will be matched.
             */
            port?: number | string
            /**
             * protocol represents the protocol (TCP, UDP, or SCTP) which traffic must match.
             * If not specified, this field defaults to TCP.
             */
            protocol?: string
          }>
        }>
      }
    }>
    /**
     * The runtime type of the instance, such as a container sandbox or a VM.
     */
    runtime: {
      /**
       * Resources each instance must be allocated.
       *
       * A sandbox runtime's containers may specify resource requests and
       * limits. When limits are defined on all containers, they MUST consume
       * the entire amount of resources defined here. Some resources, such
       * as a GPU, MUST have at least one container request them so that the
       * device can be presented appropriately.
       *
       * A virtual machine runtime will be provided all requested resources.
       */
      resources: {
        /**
         * Full or partial URL of the instance type resource to use for this instance.
         *
         * For example: `datumcloud/d1-standard-2`
         *
         * May be combined with `resources` to allow for custom instance types for
         * instance families that support customization. Instance types which support
         * customization will appear in the form `<project>/<instanceFamily>-custom`.
         */
        instanceType: string
        /**
         * Describes adjustments to the resources defined by the instance type.
         */
        requests?: {
          [key: string]: number | string
        }
      }
      /**
       * A sandbox is a managed isolated environment capable of running containers.
       */
      sandbox?: {
        /**
         * A list of containers to run within the sandbox.
         */
        containers: Array<{
          /**
           * List of environment variables to set in the container.
           *
           * so replicate the structure here too.
           */
          env?: Array<{
            /**
             * Name of the environment variable. Must be a C_IDENTIFIER.
             */
            name: string
            /**
             * Variable references $(VAR_NAME) are expanded
             * using the previously defined environment variables in the container and
             * any service environment variables. If a variable cannot be resolved,
             * the reference in the input string will be unchanged. Double $$ are reduced
             * to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
             * "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
             * Escaped references will never be expanded, regardless of whether the variable
             * exists or not.
             * Defaults to "".
             */
            value?: string
            /**
             * Source for the environment variable's value. Cannot be used if value is not empty.
             */
            valueFrom?: {
              /**
               * Selects a key of a ConfigMap.
               */
              configMapKeyRef?: {
                /**
                 * The key to select.
                 */
                key: string
                /**
                 * Name of the referent.
                 * This field is effectively required, but due to backwards compatibility is
                 * allowed to be empty. Instances of this type with an empty value here are
                 * almost certainly wrong.
                 * More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                 */
                name?: string
                /**
                 * Specify whether the ConfigMap or its key must be defined
                 */
                optional?: boolean
              }
              /**
               * Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
               * spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
               */
              fieldRef?: {
                /**
                 * Version of the schema the FieldPath is written in terms of, defaults to "v1".
                 */
                apiVersion?: string
                /**
                 * Path of the field to select in the specified API version.
                 */
                fieldPath: string
              }
              /**
               * Selects a resource of the container: only resources limits and requests
               * (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
               */
              resourceFieldRef?: {
                /**
                 * Container name: required for volumes, optional for env vars
                 */
                containerName?: string
                /**
                 * Specifies the output format of the exposed resources, defaults to "1"
                 */
                divisor?: number | string
                /**
                 * Required: resource to select
                 */
                resource: string
              }
              /**
               * Selects a key of a secret in the pod's namespace
               */
              secretKeyRef?: {
                /**
                 * The key of the secret to select from.  Must be a valid secret key.
                 */
                key: string
                /**
                 * Name of the referent.
                 * This field is effectively required, but due to backwards compatibility is
                 * allowed to be empty. Instances of this type with an empty value here are
                 * almost certainly wrong.
                 * More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                 */
                name?: string
                /**
                 * Specify whether the Secret or its key must be defined
                 */
                optional?: boolean
              }
            }
          }>
          /**
           * The fully qualified container image name.
           */
          image: string
          /**
           * The name of the container.
           */
          name: string
          /**
           * A list of named ports for the container.
           */
          ports?: Array<{
            /**
             * The name of the port that can be referenced by other platform features.
             */
            name: string
            /**
             * The port number, which can be a value between 1 and 65535.
             */
            port: number
            /**
             * protocol represents the protocol (TCP, UDP, or SCTP) which traffic must match.
             * If not specified, this field defaults to TCP.
             */
            protocol?: string
          }>
          /**
           * The resource requirements for the container, such as CPU, memory, and GPUs.
           */
          resources?: {
            /**
             * Limits describes the maximum amount of compute resources allowed.
             */
            limits?: {
              [key: string]: number | string
            }
            /**
             * Requests describes the minimum amount of compute resources required.
             */
            requests?: {
              [key: string]: number | string
            }
          }
          /**
           * A list of volumes to attach to the container.
           */
          volumeAttachments?: Array<{
            /**
             * The path to mount the volume inside the guest OS.
             *
             * The referenced volume must be populated with a filesystem to use this
             * feature.
             *
             * For VM based instances, this functionality requires certain capabilities
             * to be annotated on the boot image, such as cloud-init.
             */
            mountPath?: string
            /**
             * The name of the volume to attach as defined in InstanceSpec.Volumes.
             */
            name: string
          }>
        }>
        /**
         * An optional list of secrets in the same namespace to use for pulling images
         * used by the instance.
         */
        imagePullSecrets?: Array<{
          /**
           * The name of the secret
           */
          name: string
        }>
      }
      /**
       * A virtual machine is a classical VM environment, booting a full OS provided by the user via an image.
       */
      virtualMachine?: {
        /**
         * A list of named ports for the virtual machine.
         */
        ports?: Array<{
          /**
           * The name of the port that can be referenced by other platform features.
           */
          name: string
          /**
           * The port number, which can be a value between 1 and 65535.
           */
          port: number
          /**
           * protocol represents the protocol (TCP, UDP, or SCTP) which traffic must match.
           * If not specified, this field defaults to TCP.
           */
          protocol?: string
        }>
        /**
         * A list of volumes to attach to the VM.
         */
        volumeAttachments: Array<{
          /**
           * The path to mount the volume inside the guest OS.
           *
           * The referenced volume must be populated with a filesystem to use this
           * feature.
           *
           * For VM based instances, this functionality requires certain capabilities
           * to be annotated on the boot image, such as cloud-init.
           */
          mountPath?: string
          /**
           * The name of the volume to attach as defined in InstanceSpec.Volumes.
           */
          name: string
        }>
      }
    }
    volumes?: Array<{
      /**
       * A configMap that should populate this volume
       */
      configMap?: {
        /**
         * defaultMode is optional: mode bits used to set permissions on created files by default.
         * Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
         * YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
         * Defaults to 0644.
         * Directories within the path are not affected by this setting.
         * This might be in conflict with other options that affect the file
         * mode, like fsGroup, and the result can be other mode bits set.
         */
        defaultMode?: number
        /**
         * items if unspecified, each key-value pair in the Data field of the referenced
         * ConfigMap will be projected into the volume as a file whose name is the
         * key and content is the value. If specified, the listed keys will be
         * projected into the specified paths, and unlisted keys will not be
         * present. If a key is specified which is not present in the ConfigMap,
         * the volume setup will error unless it is marked optional. Paths must be
         * relative and may not contain the '..' path or start with '..'.
         */
        items?: Array<{
          /**
           * key is the key to project.
           */
          key: string
          /**
           * mode is Optional: mode bits used to set permissions on this file.
           * Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
           * YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
           * If not specified, the volume defaultMode will be used.
           * This might be in conflict with other options that affect the file
           * mode, like fsGroup, and the result can be other mode bits set.
           */
          mode?: number
          /**
           * path is the relative path of the file to map the key to.
           * May not be an absolute path.
           * May not contain the path element '..'.
           * May not start with the string '..'.
           */
          path: string
        }>
        /**
         * Name of the referent.
         * This field is effectively required, but due to backwards compatibility is
         * allowed to be empty. Instances of this type with an empty value here are
         * almost certainly wrong.
         * More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
         */
        name?: string
        /**
         * optional specify whether the ConfigMap or its keys must be defined
         */
        optional?: boolean
      }
      /**
       * A persistent disk backed volume.
       */
      disk?: {
        /**
         * Specifies a unique device name that is reflected into the
         * `/dev/disk/by-id/datumcloud-*` tree of a Linux operating system
         * running within the instance. This name can be used to reference
         * the device for mounting, resizing, and so on, from within the
         * instance.
         *
         * If not specified, the server chooses a default device name to
         * apply to this disk, in the form persistent-disk-x, where x is a
         * number assigned by Datum Cloud.
         */
        deviceName?: string
        /**
         * Settings to create a new disk for an attached disk
         */
        template: {
          /**
           * Metadata of the disks created from this template
           */
          metadata?: {
            annotations?: {
              [key: string]: string
            }
            finalizers?: Array<string>
            labels?: {
              [key: string]: string
            }
            name?: string
            namespace?: string
          }
          /**
           * Describes the desired configuration of a disk
           */
          spec: {
            /**
             * Populator to use while initializing the disk.
             */
            populator?: {
              /**
               * Populate the disk with a filesystem
               */
              filesystem?: {
                /**
                 * The type of filesystem to populate the disk with.
                 */
                type: 'ext4'
              }
              /**
               * Populate the disk from an image
               */
              image?: {
                /**
                 * The name of the image to populate the disk with.
                 *
                 * in `populator.image.imageRef.name` though.
                 */
                name: string
              }
            }
            /**
             * The resource requirements for the disk.
             */
            resources?: {
              /**
               * Requests describes the minimum amount of storage resources required.
               */
              requests?: {
                [key: string]: number | string
              }
            }
            /**
             * The type the disk, such as `pd-standard`.
             */
            type?: string
          }
        }
      }
      /**
       * Name is used to reference the volume in `volumeAttachments` for
       * containers and VMs, and will be used to derive the platform resource
       * name when required by prefixing this name with the instance name upon
       * creation.
       */
      name: string
      /**
       * A secret that should populate this volume
       */
      secret?: {
        /**
         * defaultMode is Optional: mode bits used to set permissions on created files by default.
         * Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
         * YAML accepts both octal and decimal values, JSON requires decimal values
         * for mode bits. Defaults to 0644.
         * Directories within the path are not affected by this setting.
         * This might be in conflict with other options that affect the file
         * mode, like fsGroup, and the result can be other mode bits set.
         */
        defaultMode?: number
        /**
         * items If unspecified, each key-value pair in the Data field of the referenced
         * Secret will be projected into the volume as a file whose name is the
         * key and content is the value. If specified, the listed keys will be
         * projected into the specified paths, and unlisted keys will not be
         * present. If a key is specified which is not present in the Secret,
         * the volume setup will error unless it is marked optional. Paths must be
         * relative and may not contain the '..' path or start with '..'.
         */
        items?: Array<{
          /**
           * key is the key to project.
           */
          key: string
          /**
           * mode is Optional: mode bits used to set permissions on this file.
           * Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
           * YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
           * If not specified, the volume defaultMode will be used.
           * This might be in conflict with other options that affect the file
           * mode, like fsGroup, and the result can be other mode bits set.
           */
          mode?: number
          /**
           * path is the relative path of the file to map the key to.
           * May not be an absolute path.
           * May not contain the path element '..'.
           * May not start with the string '..'.
           */
          path: string
        }>
        /**
         * optional field specify whether the Secret or its keys must be defined
         */
        optional?: boolean
        /**
         * secretName is the name of the secret in the pod's namespace to use.
         * More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
         */
        secretName?: string
      }
    }>
  }
  /**
   * InstanceStatus defines the observed state of Instance
   */
  status?: {
    /**
     * Represents the observations of an instance's current state.
     * Known condition types are: "Available", "Progressing"
     */
    conditions?: Array<{
      /**
       * lastTransitionTime is the last time the condition transitioned from one status to another.
       * This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
       */
      lastTransitionTime: Date
      /**
       * message is a human readable message indicating details about the transition.
       * This may be an empty string.
       */
      message: string
      /**
       * observedGeneration represents the .metadata.generation that the condition was set based upon.
       * For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
       * with respect to the current state of the instance.
       */
      observedGeneration?: bigint
      /**
       * reason contains a programmatic identifier indicating the reason for the condition's last transition.
       * Producers of specific condition types may define expected values and meanings for this field,
       * and whether the values are considered a guaranteed API.
       * The value should be a CamelCase string.
       * This field may not be empty.
       */
      reason: string
      /**
       * status of the condition, one of True, False, Unknown.
       */
      status: 'True' | 'False' | 'Unknown'
      /**
       * type of condition in CamelCase or in foo.example.com/CamelCase.
       */
      type: string
    }>
    /**
     * Network interface information
     */
    networkInterfaces?: Array<{
      assignments?: {
        /**
         * The external IP address used for the interface. A one to one NAT will be
         * performed for this address with the interface's network IP.
         */
        externalIP?: string
        /**
         * The IP address assigned as the primary IP from the attached network.
         */
        networkIP?: string
      }
    }>
  }
}

/**
 * InstanceList is a list of Instance
 */
export type ComDatumapisComputeV1AlphaInstanceList = {
  /**
   * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
   */
  apiVersion?: string
  /**
   * List of instances. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
   */
  items: Array<ComDatumapisComputeV1AlphaInstance>
  /**
   * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
   */
  kind?: string
  /**
   * Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
   */
  metadata?: IoK8sApimachineryPkgApisMetaV1ListMeta
}

/**
 * Workload is the Schema for the workloads API
 */
export type ComDatumapisComputeV1AlphaWorkload = {
  /**
   * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
   */
  apiVersion?: string
  /**
   * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
   */
  kind?: string
  /**
   * Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
   */
  metadata?: IoK8sApimachineryPkgApisMetaV1ObjectMeta
  /**
   * WorkloadSpec defines the desired state of Workload
   */
  spec: {
    /**
     * Defines where instances should be deployed, and at what scope a deployment
     * will live in, such as in a city, or region.
     */
    placements: Array<{
      /**
       * A list of city codes that define where the instances should be deployed.
       */
      cityCodes: Array<string>
      /**
       * The name of the placement
       */
      name: string
      /**
       * Scale settings such as minimum and maximum replica counts.
       */
      scaleSettings: {
        /**
         * The maximum number of replicas.
         */
        maxReplicas?: number
        /**
         * A list of metrics that determine scaling behavior, such as external metrics.
         */
        metrics?: Array<{
          /**
           * Resource metrics known to Datum.
           */
          resource?: {
            /**
             * The name of the resource in question.
             */
            name: string
            /**
             * The target value for the given metric
             */
            target: {
              /**
               * The target value of the average of the
               * resource metric across all relevant instances, represented as a percentage of
               * the requested value of the resource for the instances.
               */
              averageUtilization?: number
              /**
               * The target value of the average of the metric across all relevant instances
               * (as a quantity)
               */
              averageValue?: number | string
              /**
               * The target value of the metric (as a quantity).
               */
              value?: number | string
            }
          }
        }>
        /**
         * The minimum number of replicas.
         */
        minReplicas: number
      }
    }>
    /**
     * Defines settings for each instance.
     */
    template: {
      /**
       * Metadata of the instances created from this template
       */
      metadata?: {
        annotations?: {
          [key: string]: string
        }
        finalizers?: Array<string>
        labels?: {
          [key: string]: string
        }
        name?: string
        namespace?: string
      }
      /**
       * Describes the desired configuration of an instance
       */
      spec: {
        /**
         * Network interface configuration.
         */
        networkInterfaces: Array<{
          /**
           * The network to attach the network interface to.
           */
          network: {
            /**
             * The network name
             */
            name: string
            /**
             * The network namespace.
             *
             * Defaults to the namespace for the type the reference is embedded in.
             */
            namespace?: string
          }
          /**
           * Interface specific network policy.
           *
           * If provided, this will result in a platform managed network policy being
           * created that targets the specfiic instance interface. This network policy
           * will be of the lowest priority, and can effectively be prohibited from
           * influencing network connectivity.
           */
          networkPolicy?: {
            ingress?: Array<{
              /**
               * from is a list of sources which should be able to access the instances selected for this rule.
               * Items in this list are combined using a logical OR operation. If this field is
               * empty or missing, this rule matches all sources (traffic not restricted by
               * source). If this field is present and contains at least one item, this rule
               * allows traffic only if the traffic matches at least one item in the from list.
               */
              from?: Array<{
                /**
                 * ipBlock defines policy on a particular IPBlock. If this field is set then
                 * neither of the other fields can be.
                 */
                ipBlock?: {
                  /**
                   * cidr is a string representing the IPBlock
                   * Valid examples are "192.168.1.0/24" or "2001:db8::/64"
                   */
                  cidr: string
                  /**
                   * except is a slice of CIDRs that should not be included within an IPBlock
                   * Valid examples are "192.168.1.0/24" or "2001:db8::/64"
                   * Except values will be rejected if they are outside the cidr range
                   */
                  except?: Array<string>
                }
              }>
              /**
               * ports is a list of ports which should be made accessible on the instances selected for
               * this rule. Each item in this list is combined using a logical OR. If this field is
               * empty or missing, this rule matches all ports (traffic not restricted by port).
               * If this field is present and contains at least one item, then this rule allows
               * traffic only if the traffic matches at least one port in the list.
               */
              ports?: Array<{
                /**
                 * endPort indicates that the range of ports from port to endPort if set, inclusive,
                 * should be allowed by the policy. This field cannot be defined if the port field
                 * is not defined or if the port field is defined as a named (string) port.
                 * The endPort must be equal or greater than port.
                 */
                endPort?: number
                /**
                 * port represents the port on the given protocol. This can either be a numerical or named
                 * port on an instance. If this field is not provided, this matches all port names and
                 * numbers.
                 * If present, only traffic on the specified protocol AND port will be matched.
                 */
                port?: number | string
                /**
                 * protocol represents the protocol (TCP, UDP, or SCTP) which traffic must match.
                 * If not specified, this field defaults to TCP.
                 */
                protocol?: string
              }>
            }>
          }
        }>
        /**
         * The runtime type of the instance, such as a container sandbox or a VM.
         */
        runtime: {
          /**
           * Resources each instance must be allocated.
           *
           * A sandbox runtime's containers may specify resource requests and
           * limits. When limits are defined on all containers, they MUST consume
           * the entire amount of resources defined here. Some resources, such
           * as a GPU, MUST have at least one container request them so that the
           * device can be presented appropriately.
           *
           * A virtual machine runtime will be provided all requested resources.
           */
          resources: {
            /**
             * Full or partial URL of the instance type resource to use for this instance.
             *
             * For example: `datumcloud/d1-standard-2`
             *
             * May be combined with `resources` to allow for custom instance types for
             * instance families that support customization. Instance types which support
             * customization will appear in the form `<project>/<instanceFamily>-custom`.
             */
            instanceType: string
            /**
             * Describes adjustments to the resources defined by the instance type.
             */
            requests?: {
              [key: string]: number | string
            }
          }
          /**
           * A sandbox is a managed isolated environment capable of running containers.
           */
          sandbox?: {
            /**
             * A list of containers to run within the sandbox.
             */
            containers: Array<{
              /**
               * List of environment variables to set in the container.
               *
               * so replicate the structure here too.
               */
              env?: Array<{
                /**
                 * Name of the environment variable. Must be a C_IDENTIFIER.
                 */
                name: string
                /**
                 * Variable references $(VAR_NAME) are expanded
                 * using the previously defined environment variables in the container and
                 * any service environment variables. If a variable cannot be resolved,
                 * the reference in the input string will be unchanged. Double $$ are reduced
                 * to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                 * "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                 * Escaped references will never be expanded, regardless of whether the variable
                 * exists or not.
                 * Defaults to "".
                 */
                value?: string
                /**
                 * Source for the environment variable's value. Cannot be used if value is not empty.
                 */
                valueFrom?: {
                  /**
                   * Selects a key of a ConfigMap.
                   */
                  configMapKeyRef?: {
                    /**
                     * The key to select.
                     */
                    key: string
                    /**
                     * Name of the referent.
                     * This field is effectively required, but due to backwards compatibility is
                     * allowed to be empty. Instances of this type with an empty value here are
                     * almost certainly wrong.
                     * More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                     */
                    name?: string
                    /**
                     * Specify whether the ConfigMap or its key must be defined
                     */
                    optional?: boolean
                  }
                  /**
                   * Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                   * spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                   */
                  fieldRef?: {
                    /**
                     * Version of the schema the FieldPath is written in terms of, defaults to "v1".
                     */
                    apiVersion?: string
                    /**
                     * Path of the field to select in the specified API version.
                     */
                    fieldPath: string
                  }
                  /**
                   * Selects a resource of the container: only resources limits and requests
                   * (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                   */
                  resourceFieldRef?: {
                    /**
                     * Container name: required for volumes, optional for env vars
                     */
                    containerName?: string
                    /**
                     * Specifies the output format of the exposed resources, defaults to "1"
                     */
                    divisor?: number | string
                    /**
                     * Required: resource to select
                     */
                    resource: string
                  }
                  /**
                   * Selects a key of a secret in the pod's namespace
                   */
                  secretKeyRef?: {
                    /**
                     * The key of the secret to select from.  Must be a valid secret key.
                     */
                    key: string
                    /**
                     * Name of the referent.
                     * This field is effectively required, but due to backwards compatibility is
                     * allowed to be empty. Instances of this type with an empty value here are
                     * almost certainly wrong.
                     * More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                     */
                    name?: string
                    /**
                     * Specify whether the Secret or its key must be defined
                     */
                    optional?: boolean
                  }
                }
              }>
              /**
               * The fully qualified container image name.
               */
              image: string
              /**
               * The name of the container.
               */
              name: string
              /**
               * A list of named ports for the container.
               */
              ports?: Array<{
                /**
                 * The name of the port that can be referenced by other platform features.
                 */
                name: string
                /**
                 * The port number, which can be a value between 1 and 65535.
                 */
                port: number
                /**
                 * protocol represents the protocol (TCP, UDP, or SCTP) which traffic must match.
                 * If not specified, this field defaults to TCP.
                 */
                protocol?: string
              }>
              /**
               * The resource requirements for the container, such as CPU, memory, and GPUs.
               */
              resources?: {
                /**
                 * Limits describes the maximum amount of compute resources allowed.
                 */
                limits?: {
                  [key: string]: number | string
                }
                /**
                 * Requests describes the minimum amount of compute resources required.
                 */
                requests?: {
                  [key: string]: number | string
                }
              }
              /**
               * A list of volumes to attach to the container.
               */
              volumeAttachments?: Array<{
                /**
                 * The path to mount the volume inside the guest OS.
                 *
                 * The referenced volume must be populated with a filesystem to use this
                 * feature.
                 *
                 * For VM based instances, this functionality requires certain capabilities
                 * to be annotated on the boot image, such as cloud-init.
                 */
                mountPath?: string
                /**
                 * The name of the volume to attach as defined in InstanceSpec.Volumes.
                 */
                name: string
              }>
            }>
            /**
             * An optional list of secrets in the same namespace to use for pulling images
             * used by the instance.
             */
            imagePullSecrets?: Array<{
              /**
               * The name of the secret
               */
              name: string
            }>
          }
          /**
           * A virtual machine is a classical VM environment, booting a full OS provided by the user via an image.
           */
          virtualMachine?: {
            /**
             * A list of named ports for the virtual machine.
             */
            ports?: Array<{
              /**
               * The name of the port that can be referenced by other platform features.
               */
              name: string
              /**
               * The port number, which can be a value between 1 and 65535.
               */
              port: number
              /**
               * protocol represents the protocol (TCP, UDP, or SCTP) which traffic must match.
               * If not specified, this field defaults to TCP.
               */
              protocol?: string
            }>
            /**
             * A list of volumes to attach to the VM.
             */
            volumeAttachments: Array<{
              /**
               * The path to mount the volume inside the guest OS.
               *
               * The referenced volume must be populated with a filesystem to use this
               * feature.
               *
               * For VM based instances, this functionality requires certain capabilities
               * to be annotated on the boot image, such as cloud-init.
               */
              mountPath?: string
              /**
               * The name of the volume to attach as defined in InstanceSpec.Volumes.
               */
              name: string
            }>
          }
        }
        volumes?: Array<{
          /**
           * A configMap that should populate this volume
           */
          configMap?: {
            /**
             * defaultMode is optional: mode bits used to set permissions on created files by default.
             * Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
             * YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
             * Defaults to 0644.
             * Directories within the path are not affected by this setting.
             * This might be in conflict with other options that affect the file
             * mode, like fsGroup, and the result can be other mode bits set.
             */
            defaultMode?: number
            /**
             * items if unspecified, each key-value pair in the Data field of the referenced
             * ConfigMap will be projected into the volume as a file whose name is the
             * key and content is the value. If specified, the listed keys will be
             * projected into the specified paths, and unlisted keys will not be
             * present. If a key is specified which is not present in the ConfigMap,
             * the volume setup will error unless it is marked optional. Paths must be
             * relative and may not contain the '..' path or start with '..'.
             */
            items?: Array<{
              /**
               * key is the key to project.
               */
              key: string
              /**
               * mode is Optional: mode bits used to set permissions on this file.
               * Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
               * YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
               * If not specified, the volume defaultMode will be used.
               * This might be in conflict with other options that affect the file
               * mode, like fsGroup, and the result can be other mode bits set.
               */
              mode?: number
              /**
               * path is the relative path of the file to map the key to.
               * May not be an absolute path.
               * May not contain the path element '..'.
               * May not start with the string '..'.
               */
              path: string
            }>
            /**
             * Name of the referent.
             * This field is effectively required, but due to backwards compatibility is
             * allowed to be empty. Instances of this type with an empty value here are
             * almost certainly wrong.
             * More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
             */
            name?: string
            /**
             * optional specify whether the ConfigMap or its keys must be defined
             */
            optional?: boolean
          }
          /**
           * A persistent disk backed volume.
           */
          disk?: {
            /**
             * Specifies a unique device name that is reflected into the
             * `/dev/disk/by-id/datumcloud-*` tree of a Linux operating system
             * running within the instance. This name can be used to reference
             * the device for mounting, resizing, and so on, from within the
             * instance.
             *
             * If not specified, the server chooses a default device name to
             * apply to this disk, in the form persistent-disk-x, where x is a
             * number assigned by Datum Cloud.
             */
            deviceName?: string
            /**
             * Settings to create a new disk for an attached disk
             */
            template: {
              /**
               * Metadata of the disks created from this template
               */
              metadata?: {
                annotations?: {
                  [key: string]: string
                }
                finalizers?: Array<string>
                labels?: {
                  [key: string]: string
                }
                name?: string
                namespace?: string
              }
              /**
               * Describes the desired configuration of a disk
               */
              spec: {
                /**
                 * Populator to use while initializing the disk.
                 */
                populator?: {
                  /**
                   * Populate the disk with a filesystem
                   */
                  filesystem?: {
                    /**
                     * The type of filesystem to populate the disk with.
                     */
                    type: 'ext4'
                  }
                  /**
                   * Populate the disk from an image
                   */
                  image?: {
                    /**
                     * The name of the image to populate the disk with.
                     *
                     * in `populator.image.imageRef.name` though.
                     */
                    name: string
                  }
                }
                /**
                 * The resource requirements for the disk.
                 */
                resources?: {
                  /**
                   * Requests describes the minimum amount of storage resources required.
                   */
                  requests?: {
                    [key: string]: number | string
                  }
                }
                /**
                 * The type the disk, such as `pd-standard`.
                 */
                type?: string
              }
            }
          }
          /**
           * Name is used to reference the volume in `volumeAttachments` for
           * containers and VMs, and will be used to derive the platform resource
           * name when required by prefixing this name with the instance name upon
           * creation.
           */
          name: string
          /**
           * A secret that should populate this volume
           */
          secret?: {
            /**
             * defaultMode is Optional: mode bits used to set permissions on created files by default.
             * Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
             * YAML accepts both octal and decimal values, JSON requires decimal values
             * for mode bits. Defaults to 0644.
             * Directories within the path are not affected by this setting.
             * This might be in conflict with other options that affect the file
             * mode, like fsGroup, and the result can be other mode bits set.
             */
            defaultMode?: number
            /**
             * items If unspecified, each key-value pair in the Data field of the referenced
             * Secret will be projected into the volume as a file whose name is the
             * key and content is the value. If specified, the listed keys will be
             * projected into the specified paths, and unlisted keys will not be
             * present. If a key is specified which is not present in the Secret,
             * the volume setup will error unless it is marked optional. Paths must be
             * relative and may not contain the '..' path or start with '..'.
             */
            items?: Array<{
              /**
               * key is the key to project.
               */
              key: string
              /**
               * mode is Optional: mode bits used to set permissions on this file.
               * Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
               * YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
               * If not specified, the volume defaultMode will be used.
               * This might be in conflict with other options that affect the file
               * mode, like fsGroup, and the result can be other mode bits set.
               */
              mode?: number
              /**
               * path is the relative path of the file to map the key to.
               * May not be an absolute path.
               * May not contain the path element '..'.
               * May not start with the string '..'.
               */
              path: string
            }>
            /**
             * optional field specify whether the Secret or its keys must be defined
             */
            optional?: boolean
            /**
             * secretName is the name of the secret in the pod's namespace to use.
             * More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
             */
            secretName?: string
          }
        }>
      }
    }
  }
  /**
   * WorkloadStatus defines the observed state of Workload
   */
  status?: {
    /**
     * Represents the observations of a workload's current state.
     * Known condition types are: "Available", "Progressing"
     */
    conditions?: Array<{
      /**
       * lastTransitionTime is the last time the condition transitioned from one status to another.
       * This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
       */
      lastTransitionTime: Date
      /**
       * message is a human readable message indicating details about the transition.
       * This may be an empty string.
       */
      message: string
      /**
       * observedGeneration represents the .metadata.generation that the condition was set based upon.
       * For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
       * with respect to the current state of the instance.
       */
      observedGeneration?: bigint
      /**
       * reason contains a programmatic identifier indicating the reason for the condition's last transition.
       * Producers of specific condition types may define expected values and meanings for this field,
       * and whether the values are considered a guaranteed API.
       * The value should be a CamelCase string.
       * This field may not be empty.
       */
      reason: string
      /**
       * status of the condition, one of True, False, Unknown.
       */
      status: 'True' | 'False' | 'Unknown'
      /**
       * type of condition in CamelCase or in foo.example.com/CamelCase.
       */
      type: string
    }>
    /**
     * The number of instances created by a placement and have the latest
     * workload generation settings applied.
     */
    currentReplicas: number
    /**
     * The desired number of instances to be managed by a placement.
     */
    desiredReplicas: number
    /**
     * The status of the workload gateway if configured.
     */
    gateway?: {
      /**
       * Addresses lists the network addresses that have been bound to the
       * Gateway.
       *
       * This list may differ from the addresses provided in the spec under some
       * conditions:
       *
       * * no addresses are specified, all addresses are dynamically assigned
       * * a combination of specified and dynamic addresses are assigned
       * * a specified address was unusable (e.g. already in use)
       *
       * <gateway:validateIPAddress>
       */
      addresses?: Array<{
        /**
         * Type of the address.
         */
        type?: string
        /**
         * Value of the address. The validity of the values will depend
         * on the type and support by the controller.
         *
         * Examples: `1.2.3.4`, `128::1`, `my-ip-address`.
         */
        value: string
      }>
      /**
       * Conditions describe the current conditions of the Gateway.
       *
       * Implementations should prefer to express Gateway conditions
       * using the `GatewayConditionType` and `GatewayConditionReason`
       * constants so that operators and tools can converge on a common
       * vocabulary to describe Gateway state.
       *
       * Known condition types are:
       *
       * * "Accepted"
       * * "Programmed"
       * * "Ready"
       */
      conditions?: Array<{
        /**
         * lastTransitionTime is the last time the condition transitioned from one status to another.
         * This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
         */
        lastTransitionTime: Date
        /**
         * message is a human readable message indicating details about the transition.
         * This may be an empty string.
         */
        message: string
        /**
         * observedGeneration represents the .metadata.generation that the condition was set based upon.
         * For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
         * with respect to the current state of the instance.
         */
        observedGeneration?: bigint
        /**
         * reason contains a programmatic identifier indicating the reason for the condition's last transition.
         * Producers of specific condition types may define expected values and meanings for this field,
         * and whether the values are considered a guaranteed API.
         * The value should be a CamelCase string.
         * This field may not be empty.
         */
        reason: string
        /**
         * status of the condition, one of True, False, Unknown.
         */
        status: 'True' | 'False' | 'Unknown'
        /**
         * type of condition in CamelCase or in foo.example.com/CamelCase.
         */
        type: string
      }>
      /**
       * Listeners provide status for each unique listener port defined in the Spec.
       */
      listeners?: Array<{
        /**
         * AttachedRoutes represents the total number of Routes that have been
         * successfully attached to this Listener.
         *
         * Successful attachment of a Route to a Listener is based solely on the
         * combination of the AllowedRoutes field on the corresponding Listener
         * and the Route's ParentRefs field. A Route is successfully attached to
         * a Listener when it is selected by the Listener's AllowedRoutes field
         * AND the Route has a valid ParentRef selecting the whole Gateway
         * resource or a specific Listener as a parent resource (more detail on
         * attachment semantics can be found in the documentation on the various
         * Route kinds ParentRefs fields). Listener or Route status does not impact
         * successful attachment, i.e. the AttachedRoutes field count MUST be set
         * for Listeners with condition Accepted: false and MUST count successfully
         * attached Routes that may themselves have Accepted: false conditions.
         *
         * Uses for this field include troubleshooting Route attachment and
         * measuring blast radius/impact of changes to a Listener.
         */
        attachedRoutes: number
        /**
         * Conditions describe the current condition of this listener.
         */
        conditions: Array<{
          /**
           * lastTransitionTime is the last time the condition transitioned from one status to another.
           * This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
           */
          lastTransitionTime: Date
          /**
           * message is a human readable message indicating details about the transition.
           * This may be an empty string.
           */
          message: string
          /**
           * observedGeneration represents the .metadata.generation that the condition was set based upon.
           * For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
           * with respect to the current state of the instance.
           */
          observedGeneration?: bigint
          /**
           * reason contains a programmatic identifier indicating the reason for the condition's last transition.
           * Producers of specific condition types may define expected values and meanings for this field,
           * and whether the values are considered a guaranteed API.
           * The value should be a CamelCase string.
           * This field may not be empty.
           */
          reason: string
          /**
           * status of the condition, one of True, False, Unknown.
           */
          status: 'True' | 'False' | 'Unknown'
          /**
           * type of condition in CamelCase or in foo.example.com/CamelCase.
           */
          type: string
        }>
        /**
         * Name is the name of the Listener that this status corresponds to.
         */
        name: string
        /**
         * SupportedKinds is the list indicating the Kinds supported by this
         * listener. This MUST represent the kinds an implementation supports for
         * that Listener configuration.
         *
         * If kinds are specified in Spec that are not supported, they MUST NOT
         * appear in this list and an implementation MUST set the "ResolvedRefs"
         * condition to "False" with the "InvalidRouteKinds" reason. If both valid
         * and invalid Route kinds are specified, the implementation MUST
         * reference the valid Route kinds that have been specified.
         */
        supportedKinds: Array<{
          /**
           * Group is the group of the Route.
           */
          group?: string
          /**
           * Kind is the kind of the Route.
           */
          kind: string
        }>
      }>
    }
    /**
     * The current status of placemetns in a workload.
     */
    placements?: Array<{
      /**
       * Represents the observations of a placement's current state.
       * Known condition types are: "Available", "Progressing"
       */
      conditions?: Array<{
        /**
         * lastTransitionTime is the last time the condition transitioned from one status to another.
         * This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
         */
        lastTransitionTime: Date
        /**
         * message is a human readable message indicating details about the transition.
         * This may be an empty string.
         */
        message: string
        /**
         * observedGeneration represents the .metadata.generation that the condition was set based upon.
         * For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
         * with respect to the current state of the instance.
         */
        observedGeneration?: bigint
        /**
         * reason contains a programmatic identifier indicating the reason for the condition's last transition.
         * Producers of specific condition types may define expected values and meanings for this field,
         * and whether the values are considered a guaranteed API.
         * The value should be a CamelCase string.
         * This field may not be empty.
         */
        reason: string
        /**
         * status of the condition, one of True, False, Unknown.
         */
        status: 'True' | 'False' | 'Unknown'
        /**
         * type of condition in CamelCase or in foo.example.com/CamelCase.
         */
        type: string
      }>
      /**
       * The number of instances created by a placement and have the latest
       * workload generation settings applied.
       */
      currentReplicas: number
      /**
       * The desired number of instances to be managed by a placement.
       */
      desiredReplicas: number
      /**
       * The name of the placement
       */
      name: string
      /**
       * The number of instances created by a placement
       */
      replicas: number
    }>
    /**
     * The number of instances created by a placement
     */
    replicas: number
  }
}

/**
 * WorkloadDeployment is the Schema for the workloaddeployments API
 */
export type ComDatumapisComputeV1AlphaWorkloadDeployment = {
  /**
   * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
   */
  apiVersion?: string
  /**
   * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
   */
  kind?: string
  /**
   * Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
   */
  metadata?: IoK8sApimachineryPkgApisMetaV1ObjectMeta
  /**
   * WorkloadDeploymentSpec defines the desired state of WorkloadDeployment
   */
  spec?: {
    /**
     * deployments can be scheduled in ways other than just a city code.
     */
    cityCode: string
    /**
     * The placement in the workload which is driving a deployment
     */
    placementName: string
    /**
     * Scale settings such as minimum and maximum replica counts.
     */
    scaleSettings: {
      /**
       * The maximum number of replicas.
       */
      maxReplicas?: number
      /**
       * A list of metrics that determine scaling behavior, such as external metrics.
       */
      metrics?: Array<{
        /**
         * Resource metrics known to Datum.
         */
        resource?: {
          /**
           * The name of the resource in question.
           */
          name: string
          /**
           * The target value for the given metric
           */
          target: {
            /**
             * The target value of the average of the
             * resource metric across all relevant instances, represented as a percentage of
             * the requested value of the resource for the instances.
             */
            averageUtilization?: number
            /**
             * The target value of the average of the metric across all relevant instances
             * (as a quantity)
             */
            averageValue?: number | string
            /**
             * The target value of the metric (as a quantity).
             */
            value?: number | string
          }
        }
      }>
      /**
       * The minimum number of replicas.
       */
      minReplicas: number
    }
    /**
     * Defines settings for each instance.
     */
    template: {
      /**
       * Metadata of the instances created from this template
       */
      metadata?: {
        annotations?: {
          [key: string]: string
        }
        finalizers?: Array<string>
        labels?: {
          [key: string]: string
        }
        name?: string
        namespace?: string
      }
      /**
       * Describes the desired configuration of an instance
       */
      spec: {
        /**
         * Network interface configuration.
         */
        networkInterfaces: Array<{
          /**
           * The network to attach the network interface to.
           */
          network: {
            /**
             * The network name
             */
            name: string
            /**
             * The network namespace.
             *
             * Defaults to the namespace for the type the reference is embedded in.
             */
            namespace?: string
          }
          /**
           * Interface specific network policy.
           *
           * If provided, this will result in a platform managed network policy being
           * created that targets the specfiic instance interface. This network policy
           * will be of the lowest priority, and can effectively be prohibited from
           * influencing network connectivity.
           */
          networkPolicy?: {
            ingress?: Array<{
              /**
               * from is a list of sources which should be able to access the instances selected for this rule.
               * Items in this list are combined using a logical OR operation. If this field is
               * empty or missing, this rule matches all sources (traffic not restricted by
               * source). If this field is present and contains at least one item, this rule
               * allows traffic only if the traffic matches at least one item in the from list.
               */
              from?: Array<{
                /**
                 * ipBlock defines policy on a particular IPBlock. If this field is set then
                 * neither of the other fields can be.
                 */
                ipBlock?: {
                  /**
                   * cidr is a string representing the IPBlock
                   * Valid examples are "192.168.1.0/24" or "2001:db8::/64"
                   */
                  cidr: string
                  /**
                   * except is a slice of CIDRs that should not be included within an IPBlock
                   * Valid examples are "192.168.1.0/24" or "2001:db8::/64"
                   * Except values will be rejected if they are outside the cidr range
                   */
                  except?: Array<string>
                }
              }>
              /**
               * ports is a list of ports which should be made accessible on the instances selected for
               * this rule. Each item in this list is combined using a logical OR. If this field is
               * empty or missing, this rule matches all ports (traffic not restricted by port).
               * If this field is present and contains at least one item, then this rule allows
               * traffic only if the traffic matches at least one port in the list.
               */
              ports?: Array<{
                /**
                 * endPort indicates that the range of ports from port to endPort if set, inclusive,
                 * should be allowed by the policy. This field cannot be defined if the port field
                 * is not defined or if the port field is defined as a named (string) port.
                 * The endPort must be equal or greater than port.
                 */
                endPort?: number
                /**
                 * port represents the port on the given protocol. This can either be a numerical or named
                 * port on an instance. If this field is not provided, this matches all port names and
                 * numbers.
                 * If present, only traffic on the specified protocol AND port will be matched.
                 */
                port?: number | string
                /**
                 * protocol represents the protocol (TCP, UDP, or SCTP) which traffic must match.
                 * If not specified, this field defaults to TCP.
                 */
                protocol?: string
              }>
            }>
          }
        }>
        /**
         * The runtime type of the instance, such as a container sandbox or a VM.
         */
        runtime: {
          /**
           * Resources each instance must be allocated.
           *
           * A sandbox runtime's containers may specify resource requests and
           * limits. When limits are defined on all containers, they MUST consume
           * the entire amount of resources defined here. Some resources, such
           * as a GPU, MUST have at least one container request them so that the
           * device can be presented appropriately.
           *
           * A virtual machine runtime will be provided all requested resources.
           */
          resources: {
            /**
             * Full or partial URL of the instance type resource to use for this instance.
             *
             * For example: `datumcloud/d1-standard-2`
             *
             * May be combined with `resources` to allow for custom instance types for
             * instance families that support customization. Instance types which support
             * customization will appear in the form `<project>/<instanceFamily>-custom`.
             */
            instanceType: string
            /**
             * Describes adjustments to the resources defined by the instance type.
             */
            requests?: {
              [key: string]: number | string
            }
          }
          /**
           * A sandbox is a managed isolated environment capable of running containers.
           */
          sandbox?: {
            /**
             * A list of containers to run within the sandbox.
             */
            containers: Array<{
              /**
               * List of environment variables to set in the container.
               *
               * so replicate the structure here too.
               */
              env?: Array<{
                /**
                 * Name of the environment variable. Must be a C_IDENTIFIER.
                 */
                name: string
                /**
                 * Variable references $(VAR_NAME) are expanded
                 * using the previously defined environment variables in the container and
                 * any service environment variables. If a variable cannot be resolved,
                 * the reference in the input string will be unchanged. Double $$ are reduced
                 * to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                 * "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                 * Escaped references will never be expanded, regardless of whether the variable
                 * exists or not.
                 * Defaults to "".
                 */
                value?: string
                /**
                 * Source for the environment variable's value. Cannot be used if value is not empty.
                 */
                valueFrom?: {
                  /**
                   * Selects a key of a ConfigMap.
                   */
                  configMapKeyRef?: {
                    /**
                     * The key to select.
                     */
                    key: string
                    /**
                     * Name of the referent.
                     * This field is effectively required, but due to backwards compatibility is
                     * allowed to be empty. Instances of this type with an empty value here are
                     * almost certainly wrong.
                     * More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                     */
                    name?: string
                    /**
                     * Specify whether the ConfigMap or its key must be defined
                     */
                    optional?: boolean
                  }
                  /**
                   * Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                   * spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                   */
                  fieldRef?: {
                    /**
                     * Version of the schema the FieldPath is written in terms of, defaults to "v1".
                     */
                    apiVersion?: string
                    /**
                     * Path of the field to select in the specified API version.
                     */
                    fieldPath: string
                  }
                  /**
                   * Selects a resource of the container: only resources limits and requests
                   * (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                   */
                  resourceFieldRef?: {
                    /**
                     * Container name: required for volumes, optional for env vars
                     */
                    containerName?: string
                    /**
                     * Specifies the output format of the exposed resources, defaults to "1"
                     */
                    divisor?: number | string
                    /**
                     * Required: resource to select
                     */
                    resource: string
                  }
                  /**
                   * Selects a key of a secret in the pod's namespace
                   */
                  secretKeyRef?: {
                    /**
                     * The key of the secret to select from.  Must be a valid secret key.
                     */
                    key: string
                    /**
                     * Name of the referent.
                     * This field is effectively required, but due to backwards compatibility is
                     * allowed to be empty. Instances of this type with an empty value here are
                     * almost certainly wrong.
                     * More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                     */
                    name?: string
                    /**
                     * Specify whether the Secret or its key must be defined
                     */
                    optional?: boolean
                  }
                }
              }>
              /**
               * The fully qualified container image name.
               */
              image: string
              /**
               * The name of the container.
               */
              name: string
              /**
               * A list of named ports for the container.
               */
              ports?: Array<{
                /**
                 * The name of the port that can be referenced by other platform features.
                 */
                name: string
                /**
                 * The port number, which can be a value between 1 and 65535.
                 */
                port: number
                /**
                 * protocol represents the protocol (TCP, UDP, or SCTP) which traffic must match.
                 * If not specified, this field defaults to TCP.
                 */
                protocol?: string
              }>
              /**
               * The resource requirements for the container, such as CPU, memory, and GPUs.
               */
              resources?: {
                /**
                 * Limits describes the maximum amount of compute resources allowed.
                 */
                limits?: {
                  [key: string]: number | string
                }
                /**
                 * Requests describes the minimum amount of compute resources required.
                 */
                requests?: {
                  [key: string]: number | string
                }
              }
              /**
               * A list of volumes to attach to the container.
               */
              volumeAttachments?: Array<{
                /**
                 * The path to mount the volume inside the guest OS.
                 *
                 * The referenced volume must be populated with a filesystem to use this
                 * feature.
                 *
                 * For VM based instances, this functionality requires certain capabilities
                 * to be annotated on the boot image, such as cloud-init.
                 */
                mountPath?: string
                /**
                 * The name of the volume to attach as defined in InstanceSpec.Volumes.
                 */
                name: string
              }>
            }>
            /**
             * An optional list of secrets in the same namespace to use for pulling images
             * used by the instance.
             */
            imagePullSecrets?: Array<{
              /**
               * The name of the secret
               */
              name: string
            }>
          }
          /**
           * A virtual machine is a classical VM environment, booting a full OS provided by the user via an image.
           */
          virtualMachine?: {
            /**
             * A list of named ports for the virtual machine.
             */
            ports?: Array<{
              /**
               * The name of the port that can be referenced by other platform features.
               */
              name: string
              /**
               * The port number, which can be a value between 1 and 65535.
               */
              port: number
              /**
               * protocol represents the protocol (TCP, UDP, or SCTP) which traffic must match.
               * If not specified, this field defaults to TCP.
               */
              protocol?: string
            }>
            /**
             * A list of volumes to attach to the VM.
             */
            volumeAttachments: Array<{
              /**
               * The path to mount the volume inside the guest OS.
               *
               * The referenced volume must be populated with a filesystem to use this
               * feature.
               *
               * For VM based instances, this functionality requires certain capabilities
               * to be annotated on the boot image, such as cloud-init.
               */
              mountPath?: string
              /**
               * The name of the volume to attach as defined in InstanceSpec.Volumes.
               */
              name: string
            }>
          }
        }
        volumes?: Array<{
          /**
           * A configMap that should populate this volume
           */
          configMap?: {
            /**
             * defaultMode is optional: mode bits used to set permissions on created files by default.
             * Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
             * YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
             * Defaults to 0644.
             * Directories within the path are not affected by this setting.
             * This might be in conflict with other options that affect the file
             * mode, like fsGroup, and the result can be other mode bits set.
             */
            defaultMode?: number
            /**
             * items if unspecified, each key-value pair in the Data field of the referenced
             * ConfigMap will be projected into the volume as a file whose name is the
             * key and content is the value. If specified, the listed keys will be
             * projected into the specified paths, and unlisted keys will not be
             * present. If a key is specified which is not present in the ConfigMap,
             * the volume setup will error unless it is marked optional. Paths must be
             * relative and may not contain the '..' path or start with '..'.
             */
            items?: Array<{
              /**
               * key is the key to project.
               */
              key: string
              /**
               * mode is Optional: mode bits used to set permissions on this file.
               * Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
               * YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
               * If not specified, the volume defaultMode will be used.
               * This might be in conflict with other options that affect the file
               * mode, like fsGroup, and the result can be other mode bits set.
               */
              mode?: number
              /**
               * path is the relative path of the file to map the key to.
               * May not be an absolute path.
               * May not contain the path element '..'.
               * May not start with the string '..'.
               */
              path: string
            }>
            /**
             * Name of the referent.
             * This field is effectively required, but due to backwards compatibility is
             * allowed to be empty. Instances of this type with an empty value here are
             * almost certainly wrong.
             * More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
             */
            name?: string
            /**
             * optional specify whether the ConfigMap or its keys must be defined
             */
            optional?: boolean
          }
          /**
           * A persistent disk backed volume.
           */
          disk?: {
            /**
             * Specifies a unique device name that is reflected into the
             * `/dev/disk/by-id/datumcloud-*` tree of a Linux operating system
             * running within the instance. This name can be used to reference
             * the device for mounting, resizing, and so on, from within the
             * instance.
             *
             * If not specified, the server chooses a default device name to
             * apply to this disk, in the form persistent-disk-x, where x is a
             * number assigned by Datum Cloud.
             */
            deviceName?: string
            /**
             * Settings to create a new disk for an attached disk
             */
            template: {
              /**
               * Metadata of the disks created from this template
               */
              metadata?: {
                annotations?: {
                  [key: string]: string
                }
                finalizers?: Array<string>
                labels?: {
                  [key: string]: string
                }
                name?: string
                namespace?: string
              }
              /**
               * Describes the desired configuration of a disk
               */
              spec: {
                /**
                 * Populator to use while initializing the disk.
                 */
                populator?: {
                  /**
                   * Populate the disk with a filesystem
                   */
                  filesystem?: {
                    /**
                     * The type of filesystem to populate the disk with.
                     */
                    type: 'ext4'
                  }
                  /**
                   * Populate the disk from an image
                   */
                  image?: {
                    /**
                     * The name of the image to populate the disk with.
                     *
                     * in `populator.image.imageRef.name` though.
                     */
                    name: string
                  }
                }
                /**
                 * The resource requirements for the disk.
                 */
                resources?: {
                  /**
                   * Requests describes the minimum amount of storage resources required.
                   */
                  requests?: {
                    [key: string]: number | string
                  }
                }
                /**
                 * The type the disk, such as `pd-standard`.
                 */
                type?: string
              }
            }
          }
          /**
           * Name is used to reference the volume in `volumeAttachments` for
           * containers and VMs, and will be used to derive the platform resource
           * name when required by prefixing this name with the instance name upon
           * creation.
           */
          name: string
          /**
           * A secret that should populate this volume
           */
          secret?: {
            /**
             * defaultMode is Optional: mode bits used to set permissions on created files by default.
             * Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
             * YAML accepts both octal and decimal values, JSON requires decimal values
             * for mode bits. Defaults to 0644.
             * Directories within the path are not affected by this setting.
             * This might be in conflict with other options that affect the file
             * mode, like fsGroup, and the result can be other mode bits set.
             */
            defaultMode?: number
            /**
             * items If unspecified, each key-value pair in the Data field of the referenced
             * Secret will be projected into the volume as a file whose name is the
             * key and content is the value. If specified, the listed keys will be
             * projected into the specified paths, and unlisted keys will not be
             * present. If a key is specified which is not present in the Secret,
             * the volume setup will error unless it is marked optional. Paths must be
             * relative and may not contain the '..' path or start with '..'.
             */
            items?: Array<{
              /**
               * key is the key to project.
               */
              key: string
              /**
               * mode is Optional: mode bits used to set permissions on this file.
               * Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
               * YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
               * If not specified, the volume defaultMode will be used.
               * This might be in conflict with other options that affect the file
               * mode, like fsGroup, and the result can be other mode bits set.
               */
              mode?: number
              /**
               * path is the relative path of the file to map the key to.
               * May not be an absolute path.
               * May not contain the path element '..'.
               * May not start with the string '..'.
               */
              path: string
            }>
            /**
             * optional field specify whether the Secret or its keys must be defined
             */
            optional?: boolean
            /**
             * secretName is the name of the secret in the pod's namespace to use.
             * More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
             */
            secretName?: string
          }
        }>
      }
    }
    /**
     * The workload that a deployment belongs to
     */
    workloadRef: {
      /**
       * The name of the workload
       */
      name: string
      /**
       * UID of the Workload
       */
      uid: string
    }
  }
  /**
   * WorkloadDeploymentStatus defines the observed state of WorkloadDeployment
   */
  status?: {
    /**
     * Represents the observations of a deployment's current state.
     * Known condition types are: "Available", "Progressing"
     */
    conditions?: Array<{
      /**
       * lastTransitionTime is the last time the condition transitioned from one status to another.
       * This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
       */
      lastTransitionTime: Date
      /**
       * message is a human readable message indicating details about the transition.
       * This may be an empty string.
       */
      message: string
      /**
       * observedGeneration represents the .metadata.generation that the condition was set based upon.
       * For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
       * with respect to the current state of the instance.
       */
      observedGeneration?: bigint
      /**
       * reason contains a programmatic identifier indicating the reason for the condition's last transition.
       * Producers of specific condition types may define expected values and meanings for this field,
       * and whether the values are considered a guaranteed API.
       * The value should be a CamelCase string.
       * This field may not be empty.
       */
      reason: string
      /**
       * status of the condition, one of True, False, Unknown.
       */
      status: 'True' | 'False' | 'Unknown'
      /**
       * type of condition in CamelCase or in foo.example.com/CamelCase.
       */
      type: string
    }>
    /**
     * The number of instances created by a deployment and have the latest
     * deployment generation settings applied.
     */
    currentReplicas: number
    /**
     * The desired number of instances to be managed by a deployment.
     */
    desiredReplicas: number
    /**
     * The location which the deployment has been scheduled to
     */
    location?: {
      /**
       * Name of a datum location
       */
      name: string
      /**
       * Namespace for the datum location
       */
      namespace: string
    }
    /**
     * The number of instances created by a deployment
     */
    replicas: number
  }
}

/**
 * WorkloadDeploymentList is a list of WorkloadDeployment
 */
export type ComDatumapisComputeV1AlphaWorkloadDeploymentList = {
  /**
   * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
   */
  apiVersion?: string
  /**
   * List of workloaddeployments. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
   */
  items: Array<ComDatumapisComputeV1AlphaWorkloadDeployment>
  /**
   * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
   */
  kind?: string
  /**
   * Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
   */
  metadata?: IoK8sApimachineryPkgApisMetaV1ListMeta
}

/**
 * WorkloadList is a list of Workload
 */
export type ComDatumapisComputeV1AlphaWorkloadList = {
  /**
   * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
   */
  apiVersion?: string
  /**
   * List of workloads. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
   */
  items: Array<ComDatumapisComputeV1AlphaWorkload>
  /**
   * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
   */
  kind?: string
  /**
   * Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
   */
  metadata?: IoK8sApimachineryPkgApisMetaV1ListMeta
}

/**
 * DeleteOptions may be provided when deleting an API object.
 */
export type IoK8sApimachineryPkgApisMetaV1DeleteOptions = {
  /**
   * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
   */
  apiVersion?: string
  /**
   * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
   */
  dryRun?: Array<string>
  /**
   * The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
   */
  gracePeriodSeconds?: bigint
  /**
   * if set to true, it will trigger an unsafe deletion of the resource in case the normal deletion flow fails with a corrupt object error. A resource is considered corrupt if it can not be retrieved from the underlying storage successfully because of a) its data can not be transformed e.g. decryption failure, or b) it fails to decode into an object. NOTE: unsafe deletion ignores finalizer constraints, skips precondition checks, and removes the object from the storage. WARNING: This may potentially break the cluster if the workload associated with the resource being unsafe-deleted relies on normal deletion flow. Use only if you REALLY know what you are doing. The default value is false, and the user must opt in to enable it
   */
  ignoreStoreReadErrorWithClusterBreakingPotential?: boolean
  /**
   * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
   */
  kind?: string
  /**
   * Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
   */
  orphanDependents?: boolean
  /**
   * Must be fulfilled before a deletion is carried out. If not possible, a 409 Conflict status will be returned.
   */
  preconditions?: IoK8sApimachineryPkgApisMetaV1Preconditions
  /**
   * Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
   */
  propagationPolicy?: string
}

/**
 * FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.
 *
 * Each key is either a '.' representing the field itself, and will always map to an empty set, or a string representing a sub-field or item. The string will follow one of these four formats: 'f:<name>', where <name> is the name of a field in a struct, or key in a map 'v:<value>', where <value> is the exact json formatted value of a list item 'i:<index>', where <index> is position of a item in a list 'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values If a key maps to an empty Fields value, the field that key represents is part of the set.
 *
 * The exact format is defined in sigs.k8s.io/structured-merge-diff
 */
export type IoK8sApimachineryPkgApisMetaV1FieldsV1 = {
  [key: string]: unknown
}

/**
 * ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
 */
export type IoK8sApimachineryPkgApisMetaV1ListMeta = {
  /**
   * continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a consistent list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response, unless you have received this token from an error message.
   */
  continue?: string
  /**
   * remainingItemCount is the number of subsequent items in the list which are not included in this list response. If the list request contained label or field selectors, then the number of remaining items is unknown and the field will be left unset and omitted during serialization. If the list is complete (either because it is not chunking or because this is the last chunk), then there are no more remaining items and this field will be left unset and omitted during serialization. Servers older than v1.15 do not set this field. The intended use of the remainingItemCount is *estimating* the size of a collection. Clients should not rely on the remainingItemCount to be set or to be exact.
   */
  remainingItemCount?: bigint
  /**
   * String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
   */
  resourceVersion?: string
  /**
   * Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.
   */
  selfLink?: string
}

/**
 * ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.
 */
export type IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry = {
  /**
   * APIVersion defines the version of this resource that this field set applies to. The format is "group/version" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.
   */
  apiVersion?: string
  /**
   * FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: "FieldsV1"
   */
  fieldsType?: string
  /**
   * FieldsV1 holds the first JSON version format as described in the "FieldsV1" type.
   */
  fieldsV1?: IoK8sApimachineryPkgApisMetaV1FieldsV1
  /**
   * Manager is an identifier of the workflow managing these fields.
   */
  manager?: string
  /**
   * Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.
   */
  operation?: string
  /**
   * Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.
   */
  subresource?: string
  /**
   * Time is the timestamp of when the ManagedFields entry was added. The timestamp will also be updated if a field is added, the manager changes any of the owned fields value or removes a field. The timestamp does not update when a field is removed from the entry because another manager took it over.
   */
  time?: IoK8sApimachineryPkgApisMetaV1Time
}

/**
 * ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
 */
export type IoK8sApimachineryPkgApisMetaV1ObjectMeta = {
  /**
   * Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
   */
  annotations?: {
    [key: string]: string
  }
  /**
   * CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.
   *
   * Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
   */
  creationTimestamp?: IoK8sApimachineryPkgApisMetaV1Time
  /**
   * Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.
   */
  deletionGracePeriodSeconds?: bigint
  /**
   * DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.
   *
   * Populated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
   */
  deletionTimestamp?: IoK8sApimachineryPkgApisMetaV1Time
  /**
   * Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.
   */
  finalizers?: Array<string>
  /**
   * GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.
   *
   * If this field is specified and the generated name exists, the server will return a 409.
   *
   * Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency
   */
  generateName?: string
  /**
   * A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.
   */
  generation?: bigint
  /**
   * Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels
   */
  labels?: {
    [key: string]: string
  }
  /**
   * ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like "ci-cd". The set of fields is always in the version that the workflow used when modifying the object.
   */
  managedFields?: Array<IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry>
  /**
   * Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
   */
  name?: string
  /**
   * Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the "default" namespace, but "default" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.
   *
   * Must be a DNS_LABEL. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces
   */
  namespace?: string
  /**
   * List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
   */
  ownerReferences?: Array<IoK8sApimachineryPkgApisMetaV1OwnerReference>
  /**
   * An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.
   *
   * Populated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
   */
  resourceVersion?: string
  /**
   * Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.
   */
  selfLink?: string
  /**
   * UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.
   *
   * Populated by the system. Read-only. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids
   */
  uid?: string
}

/**
 * OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.
 */
export type IoK8sApimachineryPkgApisMetaV1OwnerReference = {
  /**
   * API version of the referent.
   */
  apiVersion: string
  /**
   * If true, AND if the owner has the "foregroundDeletion" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs "delete" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.
   */
  blockOwnerDeletion?: boolean
  /**
   * If true, this reference points to the managing controller.
   */
  controller?: boolean
  /**
   * Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
   */
  kind: string
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
   */
  name: string
  /**
   * UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids
   */
  uid: string
}

/**
 * Patch is provided to give a concrete name and type to the Kubernetes PATCH request body.
 */
export type IoK8sApimachineryPkgApisMetaV1Patch = {
  [key: string]: unknown
}

/**
 * Preconditions must be fulfilled before an operation (update, delete, etc.) is carried out.
 */
export type IoK8sApimachineryPkgApisMetaV1Preconditions = {
  /**
   * Specifies the target ResourceVersion
   */
  resourceVersion?: string
  /**
   * Specifies the target UID.
   */
  uid?: string
}

/**
 * Status is a return value for calls that don't return other objects.
 */
export type IoK8sApimachineryPkgApisMetaV1Status = {
  /**
   * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
   */
  apiVersion?: string
  /**
   * Suggested HTTP return code for this status, 0 if not set.
   */
  code?: number
  /**
   * Extended data associated with the reason.  Each reason may define its own extended details. This field is optional and the data returned is not guaranteed to conform to any schema except that defined by the reason type.
   */
  details?: IoK8sApimachineryPkgApisMetaV1StatusDetails
  /**
   * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
   */
  kind?: string
  /**
   * A human-readable description of the status of this operation.
   */
  message?: string
  /**
   * Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
   */
  metadata?: IoK8sApimachineryPkgApisMetaV1ListMeta
  /**
   * A machine-readable description of why this operation is in the "Failure" status. If this value is empty there is no information available. A Reason clarifies an HTTP status code but does not override it.
   */
  reason?: string
  /**
   * Status of the operation. One of: "Success" or "Failure". More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
   */
  status?: string
}

/**
 * StatusCause provides more information about an api.Status failure, including cases when multiple errors are encountered.
 */
export type IoK8sApimachineryPkgApisMetaV1StatusCause = {
  /**
   * The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed.  Fields may appear more than once in an array of causes due to fields having multiple errors. Optional.
   *
   * Examples:
   * "name" - the field "name" on the current resource
   * "items[0].name" - the field "name" on the first array entry in "items"
   */
  field?: string
  /**
   * A human-readable description of the cause of the error.  This field may be presented as-is to a reader.
   */
  message?: string
  /**
   * A machine-readable description of the cause of the error. If this value is empty there is no information available.
   */
  reason?: string
}

/**
 * StatusDetails is a set of additional properties that MAY be set by the server to provide additional information about a response. The Reason field of a Status object defines what attributes will be set. Clients must ignore fields that do not match the defined type of each attribute, and should assume that any attribute may be empty, invalid, or under defined.
 */
export type IoK8sApimachineryPkgApisMetaV1StatusDetails = {
  /**
   * The Causes array includes more details associated with the StatusReason failure. Not all StatusReasons may provide detailed causes.
   */
  causes?: Array<IoK8sApimachineryPkgApisMetaV1StatusCause>
  /**
   * The group attribute of the resource associated with the status StatusReason.
   */
  group?: string
  /**
   * The kind attribute of the resource associated with the status StatusReason. On some operations may differ from the requested resource Kind. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
   */
  kind?: string
  /**
   * The name attribute of the resource associated with the status StatusReason (when there is a single name which can be described).
   */
  name?: string
  /**
   * If specified, the time in seconds before the operation should be retried. Some errors may indicate the client must take an alternate action - for those errors this field may indicate how long to wait before taking the alternate action.
   */
  retryAfterSeconds?: number
  /**
   * UID of the resource. (when there is a single resource which can be described). More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids
   */
  uid?: string
}

/**
 * Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
 */
export type IoK8sApimachineryPkgApisMetaV1Time = Date

export type ListComputeDatumapisComV1AlphaInstanceForAllNamespacesData = {
  body?: never
  path?: never
  query?: {
    /**
     * allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.
     */
    allowWatchBookmarks?: boolean
    /**
     * The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
     *
     * This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
     */
    continue?: string
    /**
     * A selector to restrict the list of returned objects by their fields. Defaults to everything.
     */
    fieldSelector?: string
    /**
     * A selector to restrict the list of returned objects by their labels. Defaults to everything.
     */
    labelSelector?: string
    /**
     * limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
     *
     * The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
     */
    limit?: number
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string
    /**
     * resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersion?: string
    /**
     * resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersionMatch?: string
    /**
     * `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
     *
     * When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
     * is interpreted as "data at least as new as the provided `resourceVersion`"
     * and the bookmark event is send when the state is synced
     * to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
     * If `resourceVersion` is unset, this is interpreted as "consistent read" and the
     * bookmark event is send when the state is synced at least to the moment
     * when request started being processed.
     * - `resourceVersionMatch` set to any other value or unset
     * Invalid error is returned.
     *
     * Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise.
     */
    sendInitialEvents?: boolean
    /**
     * Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
     */
    timeoutSeconds?: number
    /**
     * Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
     */
    watch?: boolean
  }
  url: '/apis/compute.datumapis.com/v1alpha/instances'
}

export type ListComputeDatumapisComV1AlphaInstanceForAllNamespacesErrors = {
  /**
   * Unauthorized
   */
  401: unknown
}

export type ListComputeDatumapisComV1AlphaInstanceForAllNamespacesResponses = {
  /**
   * OK
   */
  200: ComDatumapisComputeV1AlphaInstanceList
}

export type ListComputeDatumapisComV1AlphaInstanceForAllNamespacesResponse =
  ListComputeDatumapisComV1AlphaInstanceForAllNamespacesResponses[keyof ListComputeDatumapisComV1AlphaInstanceForAllNamespacesResponses]

export type DeleteComputeDatumapisComV1AlphaCollectionNamespacedInstanceData = {
  body?: never
  path: {
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string
  }
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string
    /**
     * allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.
     */
    allowWatchBookmarks?: boolean
    /**
     * The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
     *
     * This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
     */
    continue?: string
    /**
     * A selector to restrict the list of returned objects by their fields. Defaults to everything.
     */
    fieldSelector?: string
    /**
     * A selector to restrict the list of returned objects by their labels. Defaults to everything.
     */
    labelSelector?: string
    /**
     * limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
     *
     * The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
     */
    limit?: number
    /**
     * resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersion?: string
    /**
     * resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersionMatch?: string
    /**
     * `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
     *
     * When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
     * is interpreted as "data at least as new as the provided `resourceVersion`"
     * and the bookmark event is send when the state is synced
     * to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
     * If `resourceVersion` is unset, this is interpreted as "consistent read" and the
     * bookmark event is send when the state is synced at least to the moment
     * when request started being processed.
     * - `resourceVersionMatch` set to any other value or unset
     * Invalid error is returned.
     *
     * Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise.
     */
    sendInitialEvents?: boolean
    /**
     * Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
     */
    timeoutSeconds?: number
    /**
     * Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
     */
    watch?: boolean
  }
  url: '/apis/compute.datumapis.com/v1alpha/namespaces/{namespace}/instances'
}

export type DeleteComputeDatumapisComV1AlphaCollectionNamespacedInstanceErrors = {
  /**
   * Unauthorized
   */
  401: unknown
}

export type DeleteComputeDatumapisComV1AlphaCollectionNamespacedInstanceResponses = {
  /**
   * OK
   */
  200: IoK8sApimachineryPkgApisMetaV1Status
}

export type DeleteComputeDatumapisComV1AlphaCollectionNamespacedInstanceResponse =
  DeleteComputeDatumapisComV1AlphaCollectionNamespacedInstanceResponses[keyof DeleteComputeDatumapisComV1AlphaCollectionNamespacedInstanceResponses]

export type ListComputeDatumapisComV1AlphaNamespacedInstanceData = {
  body?: never
  path: {
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string
  }
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string
    /**
     * allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.
     */
    allowWatchBookmarks?: boolean
    /**
     * The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
     *
     * This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
     */
    continue?: string
    /**
     * A selector to restrict the list of returned objects by their fields. Defaults to everything.
     */
    fieldSelector?: string
    /**
     * A selector to restrict the list of returned objects by their labels. Defaults to everything.
     */
    labelSelector?: string
    /**
     * limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
     *
     * The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
     */
    limit?: number
    /**
     * resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersion?: string
    /**
     * resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersionMatch?: string
    /**
     * `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
     *
     * When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
     * is interpreted as "data at least as new as the provided `resourceVersion`"
     * and the bookmark event is send when the state is synced
     * to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
     * If `resourceVersion` is unset, this is interpreted as "consistent read" and the
     * bookmark event is send when the state is synced at least to the moment
     * when request started being processed.
     * - `resourceVersionMatch` set to any other value or unset
     * Invalid error is returned.
     *
     * Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise.
     */
    sendInitialEvents?: boolean
    /**
     * Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
     */
    timeoutSeconds?: number
    /**
     * Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
     */
    watch?: boolean
  }
  url: '/apis/compute.datumapis.com/v1alpha/namespaces/{namespace}/instances'
}

export type ListComputeDatumapisComV1AlphaNamespacedInstanceErrors = {
  /**
   * Unauthorized
   */
  401: unknown
}

export type ListComputeDatumapisComV1AlphaNamespacedInstanceResponses = {
  /**
   * OK
   */
  200: ComDatumapisComputeV1AlphaInstanceList
}

export type ListComputeDatumapisComV1AlphaNamespacedInstanceResponse =
  ListComputeDatumapisComV1AlphaNamespacedInstanceResponses[keyof ListComputeDatumapisComV1AlphaNamespacedInstanceResponses]

export type CreateComputeDatumapisComV1AlphaNamespacedInstanceData = {
  body: ComDatumapisComputeV1AlphaInstance
  path: {
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string
  }
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string
    /**
     * fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
     */
    fieldManager?: string
    /**
     * fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     */
    fieldValidation?: string
  }
  url: '/apis/compute.datumapis.com/v1alpha/namespaces/{namespace}/instances'
}

export type CreateComputeDatumapisComV1AlphaNamespacedInstanceErrors = {
  /**
   * Unauthorized
   */
  401: unknown
}

export type CreateComputeDatumapisComV1AlphaNamespacedInstanceResponses = {
  /**
   * OK
   */
  200: ComDatumapisComputeV1AlphaInstance
  /**
   * Created
   */
  201: ComDatumapisComputeV1AlphaInstance
  /**
   * Accepted
   */
  202: ComDatumapisComputeV1AlphaInstance
}

export type CreateComputeDatumapisComV1AlphaNamespacedInstanceResponse =
  CreateComputeDatumapisComV1AlphaNamespacedInstanceResponses[keyof CreateComputeDatumapisComV1AlphaNamespacedInstanceResponses]

export type DeleteComputeDatumapisComV1AlphaNamespacedInstanceData = {
  body?: IoK8sApimachineryPkgApisMetaV1DeleteOptions
  path: {
    /**
     * name of the Instance
     */
    name: string
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string
  }
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string
    /**
     * The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
     */
    gracePeriodSeconds?: number
    /**
     * if set to true, it will trigger an unsafe deletion of the resource in case the normal deletion flow fails with a corrupt object error. A resource is considered corrupt if it can not be retrieved from the underlying storage successfully because of a) its data can not be transformed e.g. decryption failure, or b) it fails to decode into an object. NOTE: unsafe deletion ignores finalizer constraints, skips precondition checks, and removes the object from the storage. WARNING: This may potentially break the cluster if the workload associated with the resource being unsafe-deleted relies on normal deletion flow. Use only if you REALLY know what you are doing. The default value is false, and the user must opt in to enable it
     */
    ignoreStoreReadErrorWithClusterBreakingPotential?: boolean
    /**
     * Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
     */
    orphanDependents?: boolean
    /**
     * Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
     */
    propagationPolicy?: string
  }
  url: '/apis/compute.datumapis.com/v1alpha/namespaces/{namespace}/instances/{name}'
}

export type DeleteComputeDatumapisComV1AlphaNamespacedInstanceErrors = {
  /**
   * Unauthorized
   */
  401: unknown
}

export type DeleteComputeDatumapisComV1AlphaNamespacedInstanceResponses = {
  /**
   * OK
   */
  200: IoK8sApimachineryPkgApisMetaV1Status
  /**
   * Accepted
   */
  202: IoK8sApimachineryPkgApisMetaV1Status
}

export type DeleteComputeDatumapisComV1AlphaNamespacedInstanceResponse =
  DeleteComputeDatumapisComV1AlphaNamespacedInstanceResponses[keyof DeleteComputeDatumapisComV1AlphaNamespacedInstanceResponses]

export type ReadComputeDatumapisComV1AlphaNamespacedInstanceData = {
  body?: never
  path: {
    /**
     * name of the Instance
     */
    name: string
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string
  }
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string
    /**
     * resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersion?: string
  }
  url: '/apis/compute.datumapis.com/v1alpha/namespaces/{namespace}/instances/{name}'
}

export type ReadComputeDatumapisComV1AlphaNamespacedInstanceErrors = {
  /**
   * Unauthorized
   */
  401: unknown
}

export type ReadComputeDatumapisComV1AlphaNamespacedInstanceResponses = {
  /**
   * OK
   */
  200: ComDatumapisComputeV1AlphaInstance
}

export type ReadComputeDatumapisComV1AlphaNamespacedInstanceResponse =
  ReadComputeDatumapisComV1AlphaNamespacedInstanceResponses[keyof ReadComputeDatumapisComV1AlphaNamespacedInstanceResponses]

export type PatchComputeDatumapisComV1AlphaNamespacedInstanceData = {
  body: IoK8sApimachineryPkgApisMetaV1Patch
  path: {
    /**
     * name of the Instance
     */
    name: string
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string
  }
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string
    /**
     * fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
     */
    fieldManager?: string
    /**
     * fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     */
    fieldValidation?: string
    /**
     * Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.
     */
    force?: boolean
  }
  url: '/apis/compute.datumapis.com/v1alpha/namespaces/{namespace}/instances/{name}'
}

export type PatchComputeDatumapisComV1AlphaNamespacedInstanceErrors = {
  /**
   * Unauthorized
   */
  401: unknown
}

export type PatchComputeDatumapisComV1AlphaNamespacedInstanceResponses = {
  /**
   * OK
   */
  200: ComDatumapisComputeV1AlphaInstance
}

export type PatchComputeDatumapisComV1AlphaNamespacedInstanceResponse =
  PatchComputeDatumapisComV1AlphaNamespacedInstanceResponses[keyof PatchComputeDatumapisComV1AlphaNamespacedInstanceResponses]

export type ReplaceComputeDatumapisComV1AlphaNamespacedInstanceData = {
  body: ComDatumapisComputeV1AlphaInstance
  path: {
    /**
     * name of the Instance
     */
    name: string
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string
  }
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string
    /**
     * fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
     */
    fieldManager?: string
    /**
     * fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     */
    fieldValidation?: string
  }
  url: '/apis/compute.datumapis.com/v1alpha/namespaces/{namespace}/instances/{name}'
}

export type ReplaceComputeDatumapisComV1AlphaNamespacedInstanceErrors = {
  /**
   * Unauthorized
   */
  401: unknown
}

export type ReplaceComputeDatumapisComV1AlphaNamespacedInstanceResponses = {
  /**
   * OK
   */
  200: ComDatumapisComputeV1AlphaInstance
  /**
   * Created
   */
  201: ComDatumapisComputeV1AlphaInstance
}

export type ReplaceComputeDatumapisComV1AlphaNamespacedInstanceResponse =
  ReplaceComputeDatumapisComV1AlphaNamespacedInstanceResponses[keyof ReplaceComputeDatumapisComV1AlphaNamespacedInstanceResponses]

export type ReadComputeDatumapisComV1AlphaNamespacedInstanceStatusData = {
  body?: never
  path: {
    /**
     * name of the Instance
     */
    name: string
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string
  }
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string
    /**
     * resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersion?: string
  }
  url: '/apis/compute.datumapis.com/v1alpha/namespaces/{namespace}/instances/{name}/status'
}

export type ReadComputeDatumapisComV1AlphaNamespacedInstanceStatusErrors = {
  /**
   * Unauthorized
   */
  401: unknown
}

export type ReadComputeDatumapisComV1AlphaNamespacedInstanceStatusResponses = {
  /**
   * OK
   */
  200: ComDatumapisComputeV1AlphaInstance
}

export type ReadComputeDatumapisComV1AlphaNamespacedInstanceStatusResponse =
  ReadComputeDatumapisComV1AlphaNamespacedInstanceStatusResponses[keyof ReadComputeDatumapisComV1AlphaNamespacedInstanceStatusResponses]

export type PatchComputeDatumapisComV1AlphaNamespacedInstanceStatusData = {
  body: IoK8sApimachineryPkgApisMetaV1Patch
  path: {
    /**
     * name of the Instance
     */
    name: string
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string
  }
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string
    /**
     * fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
     */
    fieldManager?: string
    /**
     * fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     */
    fieldValidation?: string
    /**
     * Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.
     */
    force?: boolean
  }
  url: '/apis/compute.datumapis.com/v1alpha/namespaces/{namespace}/instances/{name}/status'
}

export type PatchComputeDatumapisComV1AlphaNamespacedInstanceStatusErrors = {
  /**
   * Unauthorized
   */
  401: unknown
}

export type PatchComputeDatumapisComV1AlphaNamespacedInstanceStatusResponses = {
  /**
   * OK
   */
  200: ComDatumapisComputeV1AlphaInstance
}

export type PatchComputeDatumapisComV1AlphaNamespacedInstanceStatusResponse =
  PatchComputeDatumapisComV1AlphaNamespacedInstanceStatusResponses[keyof PatchComputeDatumapisComV1AlphaNamespacedInstanceStatusResponses]

export type ReplaceComputeDatumapisComV1AlphaNamespacedInstanceStatusData = {
  body: ComDatumapisComputeV1AlphaInstance
  path: {
    /**
     * name of the Instance
     */
    name: string
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string
  }
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string
    /**
     * fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
     */
    fieldManager?: string
    /**
     * fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     */
    fieldValidation?: string
  }
  url: '/apis/compute.datumapis.com/v1alpha/namespaces/{namespace}/instances/{name}/status'
}

export type ReplaceComputeDatumapisComV1AlphaNamespacedInstanceStatusErrors = {
  /**
   * Unauthorized
   */
  401: unknown
}

export type ReplaceComputeDatumapisComV1AlphaNamespacedInstanceStatusResponses = {
  /**
   * OK
   */
  200: ComDatumapisComputeV1AlphaInstance
  /**
   * Created
   */
  201: ComDatumapisComputeV1AlphaInstance
}

export type ReplaceComputeDatumapisComV1AlphaNamespacedInstanceStatusResponse =
  ReplaceComputeDatumapisComV1AlphaNamespacedInstanceStatusResponses[keyof ReplaceComputeDatumapisComV1AlphaNamespacedInstanceStatusResponses]

export type DeleteComputeDatumapisComV1AlphaCollectionNamespacedWorkloadDeploymentData = {
  body?: never
  path: {
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string
  }
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string
    /**
     * allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.
     */
    allowWatchBookmarks?: boolean
    /**
     * The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
     *
     * This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
     */
    continue?: string
    /**
     * A selector to restrict the list of returned objects by their fields. Defaults to everything.
     */
    fieldSelector?: string
    /**
     * A selector to restrict the list of returned objects by their labels. Defaults to everything.
     */
    labelSelector?: string
    /**
     * limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
     *
     * The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
     */
    limit?: number
    /**
     * resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersion?: string
    /**
     * resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersionMatch?: string
    /**
     * `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
     *
     * When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
     * is interpreted as "data at least as new as the provided `resourceVersion`"
     * and the bookmark event is send when the state is synced
     * to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
     * If `resourceVersion` is unset, this is interpreted as "consistent read" and the
     * bookmark event is send when the state is synced at least to the moment
     * when request started being processed.
     * - `resourceVersionMatch` set to any other value or unset
     * Invalid error is returned.
     *
     * Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise.
     */
    sendInitialEvents?: boolean
    /**
     * Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
     */
    timeoutSeconds?: number
    /**
     * Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
     */
    watch?: boolean
  }
  url: '/apis/compute.datumapis.com/v1alpha/namespaces/{namespace}/workloaddeployments'
}

export type DeleteComputeDatumapisComV1AlphaCollectionNamespacedWorkloadDeploymentErrors =
  {
    /**
     * Unauthorized
     */
    401: unknown
  }

export type DeleteComputeDatumapisComV1AlphaCollectionNamespacedWorkloadDeploymentResponses =
  {
    /**
     * OK
     */
    200: IoK8sApimachineryPkgApisMetaV1Status
  }

export type DeleteComputeDatumapisComV1AlphaCollectionNamespacedWorkloadDeploymentResponse =
  DeleteComputeDatumapisComV1AlphaCollectionNamespacedWorkloadDeploymentResponses[keyof DeleteComputeDatumapisComV1AlphaCollectionNamespacedWorkloadDeploymentResponses]

export type ListComputeDatumapisComV1AlphaNamespacedWorkloadDeploymentData = {
  body?: never
  path: {
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string
  }
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string
    /**
     * allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.
     */
    allowWatchBookmarks?: boolean
    /**
     * The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
     *
     * This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
     */
    continue?: string
    /**
     * A selector to restrict the list of returned objects by their fields. Defaults to everything.
     */
    fieldSelector?: string
    /**
     * A selector to restrict the list of returned objects by their labels. Defaults to everything.
     */
    labelSelector?: string
    /**
     * limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
     *
     * The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
     */
    limit?: number
    /**
     * resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersion?: string
    /**
     * resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersionMatch?: string
    /**
     * `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
     *
     * When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
     * is interpreted as "data at least as new as the provided `resourceVersion`"
     * and the bookmark event is send when the state is synced
     * to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
     * If `resourceVersion` is unset, this is interpreted as "consistent read" and the
     * bookmark event is send when the state is synced at least to the moment
     * when request started being processed.
     * - `resourceVersionMatch` set to any other value or unset
     * Invalid error is returned.
     *
     * Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise.
     */
    sendInitialEvents?: boolean
    /**
     * Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
     */
    timeoutSeconds?: number
    /**
     * Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
     */
    watch?: boolean
  }
  url: '/apis/compute.datumapis.com/v1alpha/namespaces/{namespace}/workloaddeployments'
}

export type ListComputeDatumapisComV1AlphaNamespacedWorkloadDeploymentErrors = {
  /**
   * Unauthorized
   */
  401: unknown
}

export type ListComputeDatumapisComV1AlphaNamespacedWorkloadDeploymentResponses = {
  /**
   * OK
   */
  200: ComDatumapisComputeV1AlphaWorkloadDeploymentList
}

export type ListComputeDatumapisComV1AlphaNamespacedWorkloadDeploymentResponse =
  ListComputeDatumapisComV1AlphaNamespacedWorkloadDeploymentResponses[keyof ListComputeDatumapisComV1AlphaNamespacedWorkloadDeploymentResponses]

export type CreateComputeDatumapisComV1AlphaNamespacedWorkloadDeploymentData = {
  body: ComDatumapisComputeV1AlphaWorkloadDeployment
  path: {
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string
  }
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string
    /**
     * fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
     */
    fieldManager?: string
    /**
     * fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     */
    fieldValidation?: string
  }
  url: '/apis/compute.datumapis.com/v1alpha/namespaces/{namespace}/workloaddeployments'
}

export type CreateComputeDatumapisComV1AlphaNamespacedWorkloadDeploymentErrors = {
  /**
   * Unauthorized
   */
  401: unknown
}

export type CreateComputeDatumapisComV1AlphaNamespacedWorkloadDeploymentResponses = {
  /**
   * OK
   */
  200: ComDatumapisComputeV1AlphaWorkloadDeployment
  /**
   * Created
   */
  201: ComDatumapisComputeV1AlphaWorkloadDeployment
  /**
   * Accepted
   */
  202: ComDatumapisComputeV1AlphaWorkloadDeployment
}

export type CreateComputeDatumapisComV1AlphaNamespacedWorkloadDeploymentResponse =
  CreateComputeDatumapisComV1AlphaNamespacedWorkloadDeploymentResponses[keyof CreateComputeDatumapisComV1AlphaNamespacedWorkloadDeploymentResponses]

export type DeleteComputeDatumapisComV1AlphaNamespacedWorkloadDeploymentData = {
  body?: IoK8sApimachineryPkgApisMetaV1DeleteOptions
  path: {
    /**
     * name of the WorkloadDeployment
     */
    name: string
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string
  }
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string
    /**
     * The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
     */
    gracePeriodSeconds?: number
    /**
     * if set to true, it will trigger an unsafe deletion of the resource in case the normal deletion flow fails with a corrupt object error. A resource is considered corrupt if it can not be retrieved from the underlying storage successfully because of a) its data can not be transformed e.g. decryption failure, or b) it fails to decode into an object. NOTE: unsafe deletion ignores finalizer constraints, skips precondition checks, and removes the object from the storage. WARNING: This may potentially break the cluster if the workload associated with the resource being unsafe-deleted relies on normal deletion flow. Use only if you REALLY know what you are doing. The default value is false, and the user must opt in to enable it
     */
    ignoreStoreReadErrorWithClusterBreakingPotential?: boolean
    /**
     * Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
     */
    orphanDependents?: boolean
    /**
     * Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
     */
    propagationPolicy?: string
  }
  url: '/apis/compute.datumapis.com/v1alpha/namespaces/{namespace}/workloaddeployments/{name}'
}

export type DeleteComputeDatumapisComV1AlphaNamespacedWorkloadDeploymentErrors = {
  /**
   * Unauthorized
   */
  401: unknown
}

export type DeleteComputeDatumapisComV1AlphaNamespacedWorkloadDeploymentResponses = {
  /**
   * OK
   */
  200: IoK8sApimachineryPkgApisMetaV1Status
  /**
   * Accepted
   */
  202: IoK8sApimachineryPkgApisMetaV1Status
}

export type DeleteComputeDatumapisComV1AlphaNamespacedWorkloadDeploymentResponse =
  DeleteComputeDatumapisComV1AlphaNamespacedWorkloadDeploymentResponses[keyof DeleteComputeDatumapisComV1AlphaNamespacedWorkloadDeploymentResponses]

export type ReadComputeDatumapisComV1AlphaNamespacedWorkloadDeploymentData = {
  body?: never
  path: {
    /**
     * name of the WorkloadDeployment
     */
    name: string
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string
  }
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string
    /**
     * resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersion?: string
  }
  url: '/apis/compute.datumapis.com/v1alpha/namespaces/{namespace}/workloaddeployments/{name}'
}

export type ReadComputeDatumapisComV1AlphaNamespacedWorkloadDeploymentErrors = {
  /**
   * Unauthorized
   */
  401: unknown
}

export type ReadComputeDatumapisComV1AlphaNamespacedWorkloadDeploymentResponses = {
  /**
   * OK
   */
  200: ComDatumapisComputeV1AlphaWorkloadDeployment
}

export type ReadComputeDatumapisComV1AlphaNamespacedWorkloadDeploymentResponse =
  ReadComputeDatumapisComV1AlphaNamespacedWorkloadDeploymentResponses[keyof ReadComputeDatumapisComV1AlphaNamespacedWorkloadDeploymentResponses]

export type PatchComputeDatumapisComV1AlphaNamespacedWorkloadDeploymentData = {
  body: IoK8sApimachineryPkgApisMetaV1Patch
  path: {
    /**
     * name of the WorkloadDeployment
     */
    name: string
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string
  }
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string
    /**
     * fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
     */
    fieldManager?: string
    /**
     * fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     */
    fieldValidation?: string
    /**
     * Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.
     */
    force?: boolean
  }
  url: '/apis/compute.datumapis.com/v1alpha/namespaces/{namespace}/workloaddeployments/{name}'
}

export type PatchComputeDatumapisComV1AlphaNamespacedWorkloadDeploymentErrors = {
  /**
   * Unauthorized
   */
  401: unknown
}

export type PatchComputeDatumapisComV1AlphaNamespacedWorkloadDeploymentResponses = {
  /**
   * OK
   */
  200: ComDatumapisComputeV1AlphaWorkloadDeployment
}

export type PatchComputeDatumapisComV1AlphaNamespacedWorkloadDeploymentResponse =
  PatchComputeDatumapisComV1AlphaNamespacedWorkloadDeploymentResponses[keyof PatchComputeDatumapisComV1AlphaNamespacedWorkloadDeploymentResponses]

export type ReplaceComputeDatumapisComV1AlphaNamespacedWorkloadDeploymentData = {
  body: ComDatumapisComputeV1AlphaWorkloadDeployment
  path: {
    /**
     * name of the WorkloadDeployment
     */
    name: string
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string
  }
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string
    /**
     * fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
     */
    fieldManager?: string
    /**
     * fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     */
    fieldValidation?: string
  }
  url: '/apis/compute.datumapis.com/v1alpha/namespaces/{namespace}/workloaddeployments/{name}'
}

export type ReplaceComputeDatumapisComV1AlphaNamespacedWorkloadDeploymentErrors = {
  /**
   * Unauthorized
   */
  401: unknown
}

export type ReplaceComputeDatumapisComV1AlphaNamespacedWorkloadDeploymentResponses = {
  /**
   * OK
   */
  200: ComDatumapisComputeV1AlphaWorkloadDeployment
  /**
   * Created
   */
  201: ComDatumapisComputeV1AlphaWorkloadDeployment
}

export type ReplaceComputeDatumapisComV1AlphaNamespacedWorkloadDeploymentResponse =
  ReplaceComputeDatumapisComV1AlphaNamespacedWorkloadDeploymentResponses[keyof ReplaceComputeDatumapisComV1AlphaNamespacedWorkloadDeploymentResponses]

export type ReadComputeDatumapisComV1AlphaNamespacedWorkloadDeploymentStatusData = {
  body?: never
  path: {
    /**
     * name of the WorkloadDeployment
     */
    name: string
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string
  }
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string
    /**
     * resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersion?: string
  }
  url: '/apis/compute.datumapis.com/v1alpha/namespaces/{namespace}/workloaddeployments/{name}/status'
}

export type ReadComputeDatumapisComV1AlphaNamespacedWorkloadDeploymentStatusErrors = {
  /**
   * Unauthorized
   */
  401: unknown
}

export type ReadComputeDatumapisComV1AlphaNamespacedWorkloadDeploymentStatusResponses = {
  /**
   * OK
   */
  200: ComDatumapisComputeV1AlphaWorkloadDeployment
}

export type ReadComputeDatumapisComV1AlphaNamespacedWorkloadDeploymentStatusResponse =
  ReadComputeDatumapisComV1AlphaNamespacedWorkloadDeploymentStatusResponses[keyof ReadComputeDatumapisComV1AlphaNamespacedWorkloadDeploymentStatusResponses]

export type PatchComputeDatumapisComV1AlphaNamespacedWorkloadDeploymentStatusData = {
  body: IoK8sApimachineryPkgApisMetaV1Patch
  path: {
    /**
     * name of the WorkloadDeployment
     */
    name: string
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string
  }
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string
    /**
     * fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
     */
    fieldManager?: string
    /**
     * fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     */
    fieldValidation?: string
    /**
     * Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.
     */
    force?: boolean
  }
  url: '/apis/compute.datumapis.com/v1alpha/namespaces/{namespace}/workloaddeployments/{name}/status'
}

export type PatchComputeDatumapisComV1AlphaNamespacedWorkloadDeploymentStatusErrors = {
  /**
   * Unauthorized
   */
  401: unknown
}

export type PatchComputeDatumapisComV1AlphaNamespacedWorkloadDeploymentStatusResponses = {
  /**
   * OK
   */
  200: ComDatumapisComputeV1AlphaWorkloadDeployment
}

export type PatchComputeDatumapisComV1AlphaNamespacedWorkloadDeploymentStatusResponse =
  PatchComputeDatumapisComV1AlphaNamespacedWorkloadDeploymentStatusResponses[keyof PatchComputeDatumapisComV1AlphaNamespacedWorkloadDeploymentStatusResponses]

export type ReplaceComputeDatumapisComV1AlphaNamespacedWorkloadDeploymentStatusData = {
  body: ComDatumapisComputeV1AlphaWorkloadDeployment
  path: {
    /**
     * name of the WorkloadDeployment
     */
    name: string
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string
  }
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string
    /**
     * fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
     */
    fieldManager?: string
    /**
     * fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     */
    fieldValidation?: string
  }
  url: '/apis/compute.datumapis.com/v1alpha/namespaces/{namespace}/workloaddeployments/{name}/status'
}

export type ReplaceComputeDatumapisComV1AlphaNamespacedWorkloadDeploymentStatusErrors = {
  /**
   * Unauthorized
   */
  401: unknown
}

export type ReplaceComputeDatumapisComV1AlphaNamespacedWorkloadDeploymentStatusResponses =
  {
    /**
     * OK
     */
    200: ComDatumapisComputeV1AlphaWorkloadDeployment
    /**
     * Created
     */
    201: ComDatumapisComputeV1AlphaWorkloadDeployment
  }

export type ReplaceComputeDatumapisComV1AlphaNamespacedWorkloadDeploymentStatusResponse =
  ReplaceComputeDatumapisComV1AlphaNamespacedWorkloadDeploymentStatusResponses[keyof ReplaceComputeDatumapisComV1AlphaNamespacedWorkloadDeploymentStatusResponses]

export type DeleteComputeDatumapisComV1AlphaCollectionNamespacedWorkloadData = {
  body?: never
  path: {
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string
  }
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string
    /**
     * allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.
     */
    allowWatchBookmarks?: boolean
    /**
     * The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
     *
     * This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
     */
    continue?: string
    /**
     * A selector to restrict the list of returned objects by their fields. Defaults to everything.
     */
    fieldSelector?: string
    /**
     * A selector to restrict the list of returned objects by their labels. Defaults to everything.
     */
    labelSelector?: string
    /**
     * limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
     *
     * The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
     */
    limit?: number
    /**
     * resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersion?: string
    /**
     * resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersionMatch?: string
    /**
     * `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
     *
     * When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
     * is interpreted as "data at least as new as the provided `resourceVersion`"
     * and the bookmark event is send when the state is synced
     * to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
     * If `resourceVersion` is unset, this is interpreted as "consistent read" and the
     * bookmark event is send when the state is synced at least to the moment
     * when request started being processed.
     * - `resourceVersionMatch` set to any other value or unset
     * Invalid error is returned.
     *
     * Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise.
     */
    sendInitialEvents?: boolean
    /**
     * Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
     */
    timeoutSeconds?: number
    /**
     * Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
     */
    watch?: boolean
  }
  url: '/apis/compute.datumapis.com/v1alpha/namespaces/{namespace}/workloads'
}

export type DeleteComputeDatumapisComV1AlphaCollectionNamespacedWorkloadErrors = {
  /**
   * Unauthorized
   */
  401: unknown
}

export type DeleteComputeDatumapisComV1AlphaCollectionNamespacedWorkloadResponses = {
  /**
   * OK
   */
  200: IoK8sApimachineryPkgApisMetaV1Status
}

export type DeleteComputeDatumapisComV1AlphaCollectionNamespacedWorkloadResponse =
  DeleteComputeDatumapisComV1AlphaCollectionNamespacedWorkloadResponses[keyof DeleteComputeDatumapisComV1AlphaCollectionNamespacedWorkloadResponses]

export type ListComputeDatumapisComV1AlphaNamespacedWorkloadData = {
  body?: never
  path: {
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string
  }
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string
    /**
     * allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.
     */
    allowWatchBookmarks?: boolean
    /**
     * The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
     *
     * This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
     */
    continue?: string
    /**
     * A selector to restrict the list of returned objects by their fields. Defaults to everything.
     */
    fieldSelector?: string
    /**
     * A selector to restrict the list of returned objects by their labels. Defaults to everything.
     */
    labelSelector?: string
    /**
     * limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
     *
     * The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
     */
    limit?: number
    /**
     * resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersion?: string
    /**
     * resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersionMatch?: string
    /**
     * `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
     *
     * When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
     * is interpreted as "data at least as new as the provided `resourceVersion`"
     * and the bookmark event is send when the state is synced
     * to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
     * If `resourceVersion` is unset, this is interpreted as "consistent read" and the
     * bookmark event is send when the state is synced at least to the moment
     * when request started being processed.
     * - `resourceVersionMatch` set to any other value or unset
     * Invalid error is returned.
     *
     * Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise.
     */
    sendInitialEvents?: boolean
    /**
     * Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
     */
    timeoutSeconds?: number
    /**
     * Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
     */
    watch?: boolean
  }
  url: '/apis/compute.datumapis.com/v1alpha/namespaces/{namespace}/workloads'
}

export type ListComputeDatumapisComV1AlphaNamespacedWorkloadErrors = {
  /**
   * Unauthorized
   */
  401: unknown
}

export type ListComputeDatumapisComV1AlphaNamespacedWorkloadResponses = {
  /**
   * OK
   */
  200: ComDatumapisComputeV1AlphaWorkloadList
}

export type ListComputeDatumapisComV1AlphaNamespacedWorkloadResponse =
  ListComputeDatumapisComV1AlphaNamespacedWorkloadResponses[keyof ListComputeDatumapisComV1AlphaNamespacedWorkloadResponses]

export type CreateComputeDatumapisComV1AlphaNamespacedWorkloadData = {
  body: ComDatumapisComputeV1AlphaWorkload
  path: {
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string
  }
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string
    /**
     * fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
     */
    fieldManager?: string
    /**
     * fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     */
    fieldValidation?: string
  }
  url: '/apis/compute.datumapis.com/v1alpha/namespaces/{namespace}/workloads'
}

export type CreateComputeDatumapisComV1AlphaNamespacedWorkloadErrors = {
  /**
   * Unauthorized
   */
  401: unknown
}

export type CreateComputeDatumapisComV1AlphaNamespacedWorkloadResponses = {
  /**
   * OK
   */
  200: ComDatumapisComputeV1AlphaWorkload
  /**
   * Created
   */
  201: ComDatumapisComputeV1AlphaWorkload
  /**
   * Accepted
   */
  202: ComDatumapisComputeV1AlphaWorkload
}

export type CreateComputeDatumapisComV1AlphaNamespacedWorkloadResponse =
  CreateComputeDatumapisComV1AlphaNamespacedWorkloadResponses[keyof CreateComputeDatumapisComV1AlphaNamespacedWorkloadResponses]

export type DeleteComputeDatumapisComV1AlphaNamespacedWorkloadData = {
  body?: IoK8sApimachineryPkgApisMetaV1DeleteOptions
  path: {
    /**
     * name of the Workload
     */
    name: string
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string
  }
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string
    /**
     * The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
     */
    gracePeriodSeconds?: number
    /**
     * if set to true, it will trigger an unsafe deletion of the resource in case the normal deletion flow fails with a corrupt object error. A resource is considered corrupt if it can not be retrieved from the underlying storage successfully because of a) its data can not be transformed e.g. decryption failure, or b) it fails to decode into an object. NOTE: unsafe deletion ignores finalizer constraints, skips precondition checks, and removes the object from the storage. WARNING: This may potentially break the cluster if the workload associated with the resource being unsafe-deleted relies on normal deletion flow. Use only if you REALLY know what you are doing. The default value is false, and the user must opt in to enable it
     */
    ignoreStoreReadErrorWithClusterBreakingPotential?: boolean
    /**
     * Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
     */
    orphanDependents?: boolean
    /**
     * Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
     */
    propagationPolicy?: string
  }
  url: '/apis/compute.datumapis.com/v1alpha/namespaces/{namespace}/workloads/{name}'
}

export type DeleteComputeDatumapisComV1AlphaNamespacedWorkloadErrors = {
  /**
   * Unauthorized
   */
  401: unknown
}

export type DeleteComputeDatumapisComV1AlphaNamespacedWorkloadResponses = {
  /**
   * OK
   */
  200: IoK8sApimachineryPkgApisMetaV1Status
  /**
   * Accepted
   */
  202: IoK8sApimachineryPkgApisMetaV1Status
}

export type DeleteComputeDatumapisComV1AlphaNamespacedWorkloadResponse =
  DeleteComputeDatumapisComV1AlphaNamespacedWorkloadResponses[keyof DeleteComputeDatumapisComV1AlphaNamespacedWorkloadResponses]

export type ReadComputeDatumapisComV1AlphaNamespacedWorkloadData = {
  body?: never
  path: {
    /**
     * name of the Workload
     */
    name: string
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string
  }
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string
    /**
     * resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersion?: string
  }
  url: '/apis/compute.datumapis.com/v1alpha/namespaces/{namespace}/workloads/{name}'
}

export type ReadComputeDatumapisComV1AlphaNamespacedWorkloadErrors = {
  /**
   * Unauthorized
   */
  401: unknown
}

export type ReadComputeDatumapisComV1AlphaNamespacedWorkloadResponses = {
  /**
   * OK
   */
  200: ComDatumapisComputeV1AlphaWorkload
}

export type ReadComputeDatumapisComV1AlphaNamespacedWorkloadResponse =
  ReadComputeDatumapisComV1AlphaNamespacedWorkloadResponses[keyof ReadComputeDatumapisComV1AlphaNamespacedWorkloadResponses]

export type PatchComputeDatumapisComV1AlphaNamespacedWorkloadData = {
  body: IoK8sApimachineryPkgApisMetaV1Patch
  path: {
    /**
     * name of the Workload
     */
    name: string
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string
  }
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string
    /**
     * fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
     */
    fieldManager?: string
    /**
     * fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     */
    fieldValidation?: string
    /**
     * Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.
     */
    force?: boolean
  }
  url: '/apis/compute.datumapis.com/v1alpha/namespaces/{namespace}/workloads/{name}'
}

export type PatchComputeDatumapisComV1AlphaNamespacedWorkloadErrors = {
  /**
   * Unauthorized
   */
  401: unknown
}

export type PatchComputeDatumapisComV1AlphaNamespacedWorkloadResponses = {
  /**
   * OK
   */
  200: ComDatumapisComputeV1AlphaWorkload
}

export type PatchComputeDatumapisComV1AlphaNamespacedWorkloadResponse =
  PatchComputeDatumapisComV1AlphaNamespacedWorkloadResponses[keyof PatchComputeDatumapisComV1AlphaNamespacedWorkloadResponses]

export type ReplaceComputeDatumapisComV1AlphaNamespacedWorkloadData = {
  body: ComDatumapisComputeV1AlphaWorkload
  path: {
    /**
     * name of the Workload
     */
    name: string
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string
  }
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string
    /**
     * fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
     */
    fieldManager?: string
    /**
     * fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     */
    fieldValidation?: string
  }
  url: '/apis/compute.datumapis.com/v1alpha/namespaces/{namespace}/workloads/{name}'
}

export type ReplaceComputeDatumapisComV1AlphaNamespacedWorkloadErrors = {
  /**
   * Unauthorized
   */
  401: unknown
}

export type ReplaceComputeDatumapisComV1AlphaNamespacedWorkloadResponses = {
  /**
   * OK
   */
  200: ComDatumapisComputeV1AlphaWorkload
  /**
   * Created
   */
  201: ComDatumapisComputeV1AlphaWorkload
}

export type ReplaceComputeDatumapisComV1AlphaNamespacedWorkloadResponse =
  ReplaceComputeDatumapisComV1AlphaNamespacedWorkloadResponses[keyof ReplaceComputeDatumapisComV1AlphaNamespacedWorkloadResponses]

export type ReadComputeDatumapisComV1AlphaNamespacedWorkloadStatusData = {
  body?: never
  path: {
    /**
     * name of the Workload
     */
    name: string
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string
  }
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string
    /**
     * resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersion?: string
  }
  url: '/apis/compute.datumapis.com/v1alpha/namespaces/{namespace}/workloads/{name}/status'
}

export type ReadComputeDatumapisComV1AlphaNamespacedWorkloadStatusErrors = {
  /**
   * Unauthorized
   */
  401: unknown
}

export type ReadComputeDatumapisComV1AlphaNamespacedWorkloadStatusResponses = {
  /**
   * OK
   */
  200: ComDatumapisComputeV1AlphaWorkload
}

export type ReadComputeDatumapisComV1AlphaNamespacedWorkloadStatusResponse =
  ReadComputeDatumapisComV1AlphaNamespacedWorkloadStatusResponses[keyof ReadComputeDatumapisComV1AlphaNamespacedWorkloadStatusResponses]

export type PatchComputeDatumapisComV1AlphaNamespacedWorkloadStatusData = {
  body: IoK8sApimachineryPkgApisMetaV1Patch
  path: {
    /**
     * name of the Workload
     */
    name: string
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string
  }
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string
    /**
     * fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
     */
    fieldManager?: string
    /**
     * fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     */
    fieldValidation?: string
    /**
     * Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.
     */
    force?: boolean
  }
  url: '/apis/compute.datumapis.com/v1alpha/namespaces/{namespace}/workloads/{name}/status'
}

export type PatchComputeDatumapisComV1AlphaNamespacedWorkloadStatusErrors = {
  /**
   * Unauthorized
   */
  401: unknown
}

export type PatchComputeDatumapisComV1AlphaNamespacedWorkloadStatusResponses = {
  /**
   * OK
   */
  200: ComDatumapisComputeV1AlphaWorkload
}

export type PatchComputeDatumapisComV1AlphaNamespacedWorkloadStatusResponse =
  PatchComputeDatumapisComV1AlphaNamespacedWorkloadStatusResponses[keyof PatchComputeDatumapisComV1AlphaNamespacedWorkloadStatusResponses]

export type ReplaceComputeDatumapisComV1AlphaNamespacedWorkloadStatusData = {
  body: ComDatumapisComputeV1AlphaWorkload
  path: {
    /**
     * name of the Workload
     */
    name: string
    /**
     * object name and auth scope, such as for teams and projects
     */
    namespace: string
  }
  query?: {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     */
    dryRun?: string
    /**
     * fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
     */
    fieldManager?: string
    /**
     * fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
     */
    fieldValidation?: string
  }
  url: '/apis/compute.datumapis.com/v1alpha/namespaces/{namespace}/workloads/{name}/status'
}

export type ReplaceComputeDatumapisComV1AlphaNamespacedWorkloadStatusErrors = {
  /**
   * Unauthorized
   */
  401: unknown
}

export type ReplaceComputeDatumapisComV1AlphaNamespacedWorkloadStatusResponses = {
  /**
   * OK
   */
  200: ComDatumapisComputeV1AlphaWorkload
  /**
   * Created
   */
  201: ComDatumapisComputeV1AlphaWorkload
}

export type ReplaceComputeDatumapisComV1AlphaNamespacedWorkloadStatusResponse =
  ReplaceComputeDatumapisComV1AlphaNamespacedWorkloadStatusResponses[keyof ReplaceComputeDatumapisComV1AlphaNamespacedWorkloadStatusResponses]

export type ListComputeDatumapisComV1AlphaWorkloadDeploymentForAllNamespacesData = {
  body?: never
  path?: never
  query?: {
    /**
     * allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.
     */
    allowWatchBookmarks?: boolean
    /**
     * The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
     *
     * This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
     */
    continue?: string
    /**
     * A selector to restrict the list of returned objects by their fields. Defaults to everything.
     */
    fieldSelector?: string
    /**
     * A selector to restrict the list of returned objects by their labels. Defaults to everything.
     */
    labelSelector?: string
    /**
     * limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
     *
     * The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
     */
    limit?: number
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string
    /**
     * resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersion?: string
    /**
     * resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersionMatch?: string
    /**
     * `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
     *
     * When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
     * is interpreted as "data at least as new as the provided `resourceVersion`"
     * and the bookmark event is send when the state is synced
     * to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
     * If `resourceVersion` is unset, this is interpreted as "consistent read" and the
     * bookmark event is send when the state is synced at least to the moment
     * when request started being processed.
     * - `resourceVersionMatch` set to any other value or unset
     * Invalid error is returned.
     *
     * Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise.
     */
    sendInitialEvents?: boolean
    /**
     * Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
     */
    timeoutSeconds?: number
    /**
     * Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
     */
    watch?: boolean
  }
  url: '/apis/compute.datumapis.com/v1alpha/workloaddeployments'
}

export type ListComputeDatumapisComV1AlphaWorkloadDeploymentForAllNamespacesErrors = {
  /**
   * Unauthorized
   */
  401: unknown
}

export type ListComputeDatumapisComV1AlphaWorkloadDeploymentForAllNamespacesResponses = {
  /**
   * OK
   */
  200: ComDatumapisComputeV1AlphaWorkloadDeploymentList
}

export type ListComputeDatumapisComV1AlphaWorkloadDeploymentForAllNamespacesResponse =
  ListComputeDatumapisComV1AlphaWorkloadDeploymentForAllNamespacesResponses[keyof ListComputeDatumapisComV1AlphaWorkloadDeploymentForAllNamespacesResponses]

export type ListComputeDatumapisComV1AlphaWorkloadForAllNamespacesData = {
  body?: never
  path?: never
  query?: {
    /**
     * allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.
     */
    allowWatchBookmarks?: boolean
    /**
     * The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
     *
     * This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
     */
    continue?: string
    /**
     * A selector to restrict the list of returned objects by their fields. Defaults to everything.
     */
    fieldSelector?: string
    /**
     * A selector to restrict the list of returned objects by their labels. Defaults to everything.
     */
    labelSelector?: string
    /**
     * limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
     *
     * The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
     */
    limit?: number
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string
    /**
     * resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersion?: string
    /**
     * resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
     *
     * Defaults to unset
     */
    resourceVersionMatch?: string
    /**
     * `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
     *
     * When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
     * is interpreted as "data at least as new as the provided `resourceVersion`"
     * and the bookmark event is send when the state is synced
     * to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
     * If `resourceVersion` is unset, this is interpreted as "consistent read" and the
     * bookmark event is send when the state is synced at least to the moment
     * when request started being processed.
     * - `resourceVersionMatch` set to any other value or unset
     * Invalid error is returned.
     *
     * Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise.
     */
    sendInitialEvents?: boolean
    /**
     * Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
     */
    timeoutSeconds?: number
    /**
     * Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
     */
    watch?: boolean
  }
  url: '/apis/compute.datumapis.com/v1alpha/workloads'
}

export type ListComputeDatumapisComV1AlphaWorkloadForAllNamespacesErrors = {
  /**
   * Unauthorized
   */
  401: unknown
}

export type ListComputeDatumapisComV1AlphaWorkloadForAllNamespacesResponses = {
  /**
   * OK
   */
  200: ComDatumapisComputeV1AlphaWorkloadList
}

export type ListComputeDatumapisComV1AlphaWorkloadForAllNamespacesResponse =
  ListComputeDatumapisComV1AlphaWorkloadForAllNamespacesResponses[keyof ListComputeDatumapisComV1AlphaWorkloadForAllNamespacesResponses]

export type ClientOptions = {
  baseURL: `${string}://${string}` | (string & {})
}
