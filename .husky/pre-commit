#!/usr/bin/env bash

# Check if bun is installed
if command -v bun >/dev/null 2>&1; then
  PACKAGE_MANAGER="bun"
else
  # If bun is not available, use npm with nvm setup
  PACKAGE_MANAGER="npm"

  if [[ "$OSTYPE" =~ ^msys ]]; then
    export NVM_DIR="$HOME/.nvm"
    [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
    . "$(dirname "$0")/_/husky.sh"
  else
    export NVM_DIR="$HOME/.nvm/nvm.sh"
    . "$(dirname $NVM_DIR)/nvm.sh"

    export NVM_DIR="$HOME/.nvm"
    a=$(nvm ls | grep 'node')
    b=${a#*(-> }
    v=${b%%[)| ]*}

    export PATH="$NVM_DIR/versions/node/$v/bin:$PATH"
  fi
fi

echo '🏗️👷 Styling, testing and building your project before committing'

if [ "$PACKAGE_MANAGER" = "bun" ]; then
  bunx lint-staged
else
  npx lint-staged
fi

# Check ESLint Standards
if [ "$PACKAGE_MANAGER" = "bun" ]; then
  bun run format && bun run lint && bun run typecheck && (
    echo '🎉🎉🎉🎉 Yeayy, there is no error in your code... I am committing this now. ✨🚀🏄‍♂️🍻'
  ) || (
    echo '🙈👷🔨❌ Yoo, your code looks disgusting. Check linter and types 🙈👷🔨❌'
    echo 'Run bun run lint && bun run typecheck, add changes and try commit again.'
    false
  )
else
  npm run format && npm run lint && npm run typecheck && (
    echo '🎉🎉🎉🎉 Yeayy, there is no error in your code... I am committing this now. ✨🚀🏄‍♂️🍻'
  ) || (
    echo '🙈👷🔨❌ Yoo, your code looks disgusting. Check linter and types 🙈👷🔨❌'
    echo 'Run npm run lint && npm run typecheck, add changes and try commit again.'
    false
  )
fi
