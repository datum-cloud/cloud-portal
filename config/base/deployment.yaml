apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: cloud-portal
    app.kubernetes.io/name: cloud-portal
    app.kubernetes.io/version: 1.0.0
  name: cloud-portal
spec:
  progressDeadlineSeconds: 600
  replicas: 2
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      app.kubernetes.io/component: frontend
      app.kubernetes.io/instance: cloud-portal
      app.kubernetes.io/name: cloud-portal
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: frontend
        app.kubernetes.io/instance: cloud-portal
        app.kubernetes.io/name: cloud-portal
    spec:
      containers:
        - name: cloud-portal
          image: ghcr.io/datum-cloud/cloud-portal:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 3000
              name: http
              protocol: TCP
          env:
            - name: OTEL_LOG_LEVEL
              value: 'info'
            - name: OTEL_ENABLED
              value: 'true'
            - name: API_URL
              value: https://api.datum.net
            - name: APP_URL
              value: https://cloud.datum.net
            - name: TELEMETRY_URL
              value: https://loki-single-binary.telemetry-system.svc.cluster.local:3100
          envFrom:
            - secretRef:
                name: cloud-portal
          resources:
            # TODO: Specify resource requests
            limits:
              cpu: 1
              memory: 1Gi
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 10
            httpGet:
              path: /_healthz
              port: 3000
              scheme: HTTP
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 10
            httpGet:
              path: /_readyz
              port: 3000
              scheme: HTTP
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
